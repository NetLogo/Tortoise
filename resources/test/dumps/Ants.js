var AgentModel = tortoise_require('agentmodel');
var ColorModel = tortoise_require('engine/core/colormodel');
var Exception = tortoise_require('util/exception');
var Link = tortoise_require('engine/core/link');
var LinkSet = tortoise_require('engine/core/linkset');
var Meta = tortoise_require('meta');
var NLMath = tortoise_require('util/nlmath');
var NLType = tortoise_require('engine/core/typechecker');
var PatchSet = tortoise_require('engine/core/patchset');
var PenBundle = tortoise_require('engine/plot/pen');
var Plot = tortoise_require('engine/plot/plot');
var PlotOps = tortoise_require('engine/plot/plotops');
var StrictMath = tortoise_require('shim/strictmath');
var Tasks = tortoise_require('engine/prim/tasks');
var Turtle = tortoise_require('engine/core/turtle');
var TurtleSet = tortoise_require('engine/core/turtleset');
var notImplemented = tortoise_require('util/notimplemented');
var { DeathInterrupt, StopInterrupt } = tortoise_require('util/interrupts');

var linkShapes = {"default":{"name":"default","direction-indicator":{"name":"link direction","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":150,"x2":90,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":150,"x2":210,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"curviness":0,"lines":[{"x-offset":-0.2,"is-visible":false,"dash-pattern":[0,1]},{"x-offset":0,"is-visible":true,"dash-pattern":[1,0]},{"x-offset":0.2,"is-visible":false,"dash-pattern":[0,1]}]}};
var turtleShapes = {"default":{"name":"default","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,40,150,260],"ycors":[5,250,205,250],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"airplane":{"name":"airplane","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,135,120,120,15,15,120,135,105,120,150,180,210,165,180,285,285,180,180,165],"ycors":[0,15,60,105,165,195,180,240,270,285,270,285,270,240,180,195,165,105,60,15],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"arrow":{"name":"arrow","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,0,105,105,195,195,300],"ycors":[0,150,150,293,293,150,150],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"box":{"name":"box","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,285,285,150],"ycors":[285,225,75,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,15,150,285],"ycors":[135,75,15,75],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[15,15,150,150],"ycors":[75,225,285,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":285,"x2":150,"y2":135,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":15,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":285,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"bug":{"name":"bug","editableColorIndex":0,"rotate":true,"elements":[{"x":96,"y":182,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":127,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":75,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":100,"x2":80,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":100,"x2":220,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"butterfly":{"name":"butterfly","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,209,225,225,195,165,150],"ycors":[165,199,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,89,75,75,105,135,150],"ycors":[165,198,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[139,100,55,25,10,10,25,40,85,139],"ycors":[148,105,90,90,105,135,180,195,194,163],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[162,200,245,275,290,290,275,260,215,162],"ycors":[150,105,90,90,105,135,180,195,195,165],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,135,120,135,150,165,180,165],"ycors":[255,225,150,120,105,120,150,225],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":135,"y":90,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":105,"x2":195,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":105,"x2":105,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"car":{"name":"car","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[300,279,261,240,226,213,203,185,159,135,75,0,0,0,300,300],"ycors":[180,164,144,135,132,106,84,63,50,50,60,150,165,225,225,180],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":180,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":30,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[162,132,134,209,194,189,180],"ycors":[80,78,135,135,105,96,89],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":47,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":195,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle":{"name":"circle","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle 2":{"name":"circle 2","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"cow":{"name":"cow","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[200,197,179,177,166,140,93,78,72,49,48,37,25,25,45,103,179,198,252,272,293,285,255,242,224],"ycors":[193,249,249,196,187,189,191,179,211,209,181,149,120,89,72,84,75,76,64,81,103,121,121,118,167],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[73,86,62,48],"ycors":[210,251,249,208],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[25,16,9,23,25,39],"ycors":[114,195,204,213,200,123],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"cylinder":{"name":"cylinder","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"dot":{"name":"dot","editableColorIndex":0,"rotate":false,"elements":[{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"face happy":{"name":"face happy","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[255,239,213,191,179,203,218,225,218,203,181,194,217,240],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face neutral":{"name":"face neutral","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":7,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":60,"ymin":195,"xmax":240,"ymax":225,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face sad":{"name":"face sad","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[168,184,210,232,244,220,205,198,205,220,242,229,206,183],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"fish":{"name":"fish","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[44,21,15,0,15,0,13,20,45],"ycors":[131,87,86,120,150,180,214,212,166],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[135,119,95,76,46,60],"ycors":[195,235,218,210,204,165],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[75,83,71,86,166,135],"ycors":[45,77,103,114,78,60],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[30,151,226,280,292,292,287,270,195,151,30],"ycors":[136,77,81,119,146,160,170,195,210,212,166],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":215,"y":106,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"flag":{"name":"flag","editableColorIndex":0,"rotate":false,"elements":[{"xmin":60,"ymin":15,"xmax":75,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[90,270,90],"ycors":[150,90,30],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":75,"y1":135,"x2":90,"y2":135,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":75,"y1":45,"x2":90,"y2":45,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"flower":{"name":"flower","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[135,165,180,180,150,165,195,195,165],"ycors":[120,165,210,240,300,300,240,195,135],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"x":85,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":147,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":192,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":85,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":70,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":25,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":96,"y":51,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":113,"y":68,"diam":74,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[189,219,249,279,234],"ycors":[233,188,173,188,218],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[180,150,105,75,135],"ycors":[255,210,210,240,240],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false}]},"house":{"name":"house","editableColorIndex":0,"rotate":false,"elements":[{"xmin":45,"ymin":120,"xmax":255,"ymax":285,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":210,"xmax":180,"ymax":285,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[15,150,285],"ycors":[120,15,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":30,"y1":120,"x2":270,"y2":120,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"leaf":{"name":"leaf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,135,120,60,30,60,60,15,30,15,40,45,60,90,105,120,105,120,135,150,165,180,195,180,195,210,240,255,263,285,270,285,240,240,270,240,180,165],"ycors":[210,195,210,210,195,180,165,135,120,105,104,90,90,105,120,120,60,60,30,15,30,60,60,120,120,105,90,90,104,105,120,135,165,180,195,210,210,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,135,120,105,105,135,165,165],"ycors":[195,240,255,255,285,285,240,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"line":{"name":"line","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":300,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"line half":{"name":"line half","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"pentagon":{"name":"pentagon","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,60,240,285],"ycors":[15,120,285,285,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"person":{"name":"person","editableColorIndex":0,"rotate":false,"elements":[{"x":110,"y":5,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,120,90,105,135,150,165,195,210,180,195],"ycors":[90,195,285,300,300,225,300,300,285,195,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":127,"ymin":79,"xmax":172,"ymax":94,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[195,240,225,165],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,60,75,135],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"plant":{"name":"plant","editableColorIndex":0,"rotate":false,"elements":[{"xmin":135,"ymin":90,"xmax":165,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,210,255,225,165],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[180,135,120,180,210],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[180,210,180,120,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[105,60,45,105,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[105,135,105,45,60],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,120,150,180,165],"ycors":[90,45,15,45,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square":{"name":"square","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square 2":{"name":"square 2","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":60,"ymin":60,"xmax":240,"ymax":240,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"star":{"name":"star","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[151,185,298,207,242,151,59,94,3,116],"ycors":[1,108,108,175,282,216,282,175,108,108],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"target":{"name":"target","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":60,"y":60,"diam":180,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"tree":{"name":"tree","editableColorIndex":0,"rotate":false,"elements":[{"x":118,"y":3,"diam":94,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":195,"xmax":180,"ymax":300,"type":"rectangle","color":"rgba(157, 110, 72, 1)","filled":true,"marked":false},{"x":65,"y":21,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":116,"y":41,"diam":127,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":45,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":104,"y":74,"diam":152,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle":{"name":"triangle","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle 2":{"name":"triangle 2","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[151,225,75],"ycors":[99,223,224],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"truck":{"name":"truck","editableColorIndex":0,"rotate":false,"elements":[{"xmin":4,"ymin":45,"xmax":195,"ymax":187,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[296,296,259,244,208,207],"ycors":[193,150,134,104,104,194],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":195,"ymin":60,"xmax":195,"ymax":105,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[238,252,219,218],"ycors":[112,141,141,112],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":181,"ymin":185,"xmax":214,"ymax":194,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"turtle":{"name":"turtle","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[215,240,246,228,215,193],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[195,225,245,260,269,261,240,225,210],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[105,75,55,40,31,39,60,75,90],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[132,134,107,108,150,192,192,169,172],"ycors":[85,64,51,17,2,18,52,65,87],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[85,60,54,72,85,107],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[119,179,209,224,220,175,128,81,74,88],"ycors":[75,75,101,135,225,261,261,224,135,99],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"wheel":{"name":"wheel","editableColorIndex":0,"rotate":false,"elements":[{"x":3,"y":3,"diam":294,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":285,"x2":150,"y2":15,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":15,"y1":150,"x2":285,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":216,"y1":40,"x2":79,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":84,"x2":269,"y2":221,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":216,"x2":269,"y2":79,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":84,"y1":40,"x2":221,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"x":{"name":"x","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[270,225,30,75],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[30,75,270,225],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]}};
var modelConfig =
  (
    (typeof global !== "undefined" && global !== null) ? global :
    (typeof window !== "undefined" && window !== null) ? window :
    {}
  ).modelConfig || {};
var modelPlotOps = (typeof modelConfig.plotOps !== "undefined" && modelConfig.plotOps !== null) ? modelConfig.plotOps : {};
modelConfig.plots = [(function() {
  var name    = 'Food in each pile';
  var plotOps = (typeof modelPlotOps[name] !== "undefined" && modelPlotOps[name] !== null) ? modelPlotOps[name] : new PlotOps(function() {}, function() {}, function() {}, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; });
  var pens    = [new PenBundle.Pen('food-in-pile1', plotOps.makePenOps, false, new PenBundle.State(85, 1, PenBundle.DisplayMode.Line), function() {}, function() {
    return ProcedurePrims.runInPlotContext('Food in each pile', 'food-in-pile1', function() {
      plotManager.plotPoint(world.ticker.tickCount(), PrimChecks.list.sum(46, 49, PrimChecks.validator.checkArg('SUM', 46, 49, 8, PrimChecks.agentset.of(PrimChecks.agentset.with(68, 72, world.patches(), function() { return Prims.equality(PrimChecks.patch.getVariable(74, 80, "pcolor"), 85); }), function() { return PrimChecks.patch.getVariable(51, 55, "food"); }))));;
    });
  }),
  new PenBundle.Pen('food-in-pile2', plotOps.makePenOps, false, new PenBundle.State(95, 1, PenBundle.DisplayMode.Line), function() {}, function() {
    return ProcedurePrims.runInPlotContext('Food in each pile', 'food-in-pile2', function() {
      plotManager.plotPoint(world.ticker.tickCount(), PrimChecks.list.sum(46, 49, PrimChecks.validator.checkArg('SUM', 46, 49, 8, PrimChecks.agentset.of(PrimChecks.agentset.with(68, 72, world.patches(), function() { return Prims.equality(PrimChecks.patch.getVariable(74, 80, "pcolor"), 95); }), function() { return PrimChecks.patch.getVariable(51, 55, "food"); }))));;
    });
  }),
  new PenBundle.Pen('food-in-pile3', plotOps.makePenOps, false, new PenBundle.State(105, 1, PenBundle.DisplayMode.Line), function() {}, function() {
    return ProcedurePrims.runInPlotContext('Food in each pile', 'food-in-pile3', function() {
      plotManager.plotPoint(world.ticker.tickCount(), PrimChecks.list.sum(46, 49, PrimChecks.validator.checkArg('SUM', 46, 49, 8, PrimChecks.agentset.of(PrimChecks.agentset.with(68, 72, world.patches(), function() { return Prims.equality(PrimChecks.patch.getVariable(74, 80, "pcolor"), 105); }), function() { return PrimChecks.patch.getVariable(51, 55, "food"); }))));;
    });
  })];
  var setup   = function() {};
  var update  = function() {};
  return new Plot(name, pens, plotOps, "time", "food", false, true, true, 0, 50, 0, 120, setup, update);
})()];
var workspace = tortoise_require('engine/workspace')(modelConfig)([])([], [])('patches-own [   chemical             ;; amount of chemical on this patch   food                 ;; amount of food on this patch (0, 1, or 2)   nest?                ;; true on nest patches, false elsewhere   nest-scent           ;; number that is higher closer to the nest   food-source-number   ;; number (1, 2, or 3) to identify the food sources ]  ;;;;;;;;;;;;;;;;;;;;;;;; ;;; Setup procedures ;;; ;;;;;;;;;;;;;;;;;;;;;;;;  to setup   clear-all   set-default-shape turtles \"bug\"   create-turtles population   [ set size 2         ;; easier to see     set color red  ]   ;; red = not carrying food   setup-patches   reset-ticks end  to setup-patches   ask patches   [ setup-nest     setup-food     recolor-patch ] end  to setup-nest  ;; patch procedure   ;; set nest? variable to true inside the nest, false elsewhere   set nest? (distancexy 0 0) < 5   ;; spread a nest-scent over the whole world -- stronger near the nest   set nest-scent 200 - distancexy 0 0 end  to setup-food  ;; patch procedure   ;; setup food source one on the right   if (distancexy (0.6 * max-pxcor) 0) < 5   [ set food-source-number 1 ]   ;; setup food source two on the lower-left   if (distancexy (-0.6 * max-pxcor) (-0.6 * max-pycor)) < 5   [ set food-source-number 2 ]   ;; setup food source three on the upper-left   if (distancexy (-0.8 * max-pxcor) (0.8 * max-pycor)) < 5   [ set food-source-number 3 ]   ;; set \"food\" at sources to either 1 or 2, randomly   if food-source-number > 0   [ set food one-of [1 2] ] end  to recolor-patch  ;; patch procedure   ;; give color to nest and food sources   ifelse nest?   [ set pcolor violet ]   [ ifelse food > 0     [ if food-source-number = 1 [ set pcolor cyan ]       if food-source-number = 2 [ set pcolor sky  ]       if food-source-number = 3 [ set pcolor blue ] ]     ;; scale color to show chemical concentration     [ set pcolor scale-color green chemical 0.1 5 ] ] end  ;;;;;;;;;;;;;;;;;;;;; ;;; Go procedures ;;; ;;;;;;;;;;;;;;;;;;;;;  to go  ;; forever button   ask turtles   [ if who >= ticks [ stop ] ;; delay initial departure     ifelse color = red     [ look-for-food  ]       ;; not carrying food? look for it     [ return-to-nest ]       ;; carrying food? take it back to nest     wiggle     fd 1 ]   diffuse chemical (diffusion-rate / 100)   ask patches   [ set chemical chemical * (100 - evaporation-rate) / 100  ;; slowly evaporate chemical     recolor-patch ]   tick end  to return-to-nest  ;; turtle procedure   ifelse nest?   [ ;; drop food and head out again     set color red     rt 180 ]   [ set chemical chemical + 60  ;; drop some chemical     uphill-nest-scent ]         ;; head toward the greatest value of nest-scent end  to look-for-food  ;; turtle procedure   if food > 0   [ set color orange + 1     ;; pick up food     set food food - 1        ;; and reduce the food source     rt 180                   ;; and turn around     stop ]   ;; go in the direction where the chemical smell is strongest   if (chemical >= 0.05) and (chemical < 2)   [ uphill-chemical ] end  ;; sniff left and right, and go where the strongest smell is to uphill-chemical  ;; turtle procedure   let scent-ahead chemical-scent-at-angle   0   let scent-right chemical-scent-at-angle  45   let scent-left  chemical-scent-at-angle -45   if (scent-right > scent-ahead) or (scent-left > scent-ahead)   [ ifelse scent-right > scent-left     [ rt 45 ]     [ lt 45 ] ] end  ;; sniff left and right, and go where the strongest smell is to uphill-nest-scent  ;; turtle procedure   let scent-ahead nest-scent-at-angle   0   let scent-right nest-scent-at-angle  45   let scent-left  nest-scent-at-angle -45   if (scent-right > scent-ahead) or (scent-left > scent-ahead)   [ ifelse scent-right > scent-left     [ rt 45 ]     [ lt 45 ] ] end  to wiggle  ;; turtle procedure   rt random 40   lt random 40   if not can-move? 1 [ rt 180 ] end  to-report nest-scent-at-angle [angle]   let p patch-right-and-ahead angle 1   if p = nobody [ report 0 ]   report [nest-scent] of p end  to-report chemical-scent-at-angle [angle]   let p patch-right-and-ahead angle 1   if p = nobody [ report 0 ]   report [chemical] of p end   ; Copyright 1997 Uri Wilensky. ; See Info tab for full copyright and license.')([{"x":257,"y":10,"width":505,"height":506,"dimensions":{"minPxcor":-35,"maxPxcor":35,"minPycor":-35,"maxPycor":35,"patchSize":7,"wrappingAllowedInX":false,"wrappingAllowedInY":false},"fontSize":10,"updateMode":"TickBased","showTickCounter":true,"tickCounterLabel":"ticks","frameRate":30,"type":"view","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"setup\"); if (R === StopInterrupt) { return R; }","type":"button","source":"setup","x":46,"y":71,"width":80,"height":33,"oldSize":true,"forever":false,"buttonKind":"Observer","disableUntilTicksStart":false,"compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 99; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"diffusion-rate","x":31,"y":106,"width":190,"height":33,"oldSize":true,"display":"diffusion-rate","min":"0","max":"99","default":50,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 99; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"evaporation-rate","x":31,"y":141,"width":190,"height":33,"oldSize":true,"display":"evaporation-rate","min":"0","max":"99","default":10,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","type":"button","source":"go","x":136,"y":71,"width":75,"height":33,"oldSize":true,"forever":true,"buttonKind":"Observer","disableUntilTicksStart":true,"compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 200; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"population","x":31,"y":36,"width":190,"height":33,"oldSize":true,"display":"population","min":"0","max":"200","default":125,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {}","compiledPens":[{"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {   return ProcedurePrims.runInPlotContext('Food in each pile', 'food-in-pile1', function() {     plotManager.plotPoint(world.ticker.tickCount(), PrimChecks.list.sum(46, 49, PrimChecks.validator.checkArg('SUM', 46, 49, 8, PrimChecks.agentset.of(PrimChecks.agentset.with(68, 72, world.patches(), function() { return Prims.equality(PrimChecks.patch.getVariable(74, 80, \"pcolor\"), 85); }), function() { return PrimChecks.patch.getVariable(51, 55, \"food\"); }))));;   }); }","type":"pen","display":"food-in-pile1","interval":1,"mode":0,"color":-11221820,"inLegend":true,"setupCode":"","updateCode":"plotxy ticks sum [food] of patches with [pcolor = cyan]","compilation":{"success":true,"messages":[]}},{"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {   return ProcedurePrims.runInPlotContext('Food in each pile', 'food-in-pile2', function() {     plotManager.plotPoint(world.ticker.tickCount(), PrimChecks.list.sum(46, 49, PrimChecks.validator.checkArg('SUM', 46, 49, 8, PrimChecks.agentset.of(PrimChecks.agentset.with(68, 72, world.patches(), function() { return Prims.equality(PrimChecks.patch.getVariable(74, 80, \"pcolor\"), 95); }), function() { return PrimChecks.patch.getVariable(51, 55, \"food\"); }))));;   }); }","type":"pen","display":"food-in-pile2","interval":1,"mode":0,"color":-13791810,"inLegend":true,"setupCode":"","updateCode":"plotxy ticks sum [food] of patches with [pcolor = sky]","compilation":{"success":true,"messages":[]}},{"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {   return ProcedurePrims.runInPlotContext('Food in each pile', 'food-in-pile3', function() {     plotManager.plotPoint(world.ticker.tickCount(), PrimChecks.list.sum(46, 49, PrimChecks.validator.checkArg('SUM', 46, 49, 8, PrimChecks.agentset.of(PrimChecks.agentset.with(68, 72, world.patches(), function() { return Prims.equality(PrimChecks.patch.getVariable(74, 80, \"pcolor\"), 105); }), function() { return PrimChecks.patch.getVariable(51, 55, \"food\"); }))));;   }); }","type":"pen","display":"food-in-pile3","interval":1,"mode":0,"color":-13345367,"inLegend":true,"setupCode":"","updateCode":"plotxy ticks sum [food] of patches with [pcolor = blue]","compilation":{"success":true,"messages":[]}}],"type":"plot","display":"Food in each pile","x":5,"y":197,"width":243,"height":279,"oldSize":true,"xAxis":"time","yAxis":"food","xmin":0,"xmax":50,"ymin":0,"ymax":120,"autoPlotX":true,"autoPlotY":true,"legendOn":false,"setupCode":"","updateCode":"","pens":[{"display":"food-in-pile1","interval":1,"mode":0,"color":-11221820,"inLegend":true,"setupCode":"","updateCode":"plotxy ticks sum [food] of patches with [pcolor = cyan]","type":"pen"},{"display":"food-in-pile2","interval":1,"mode":0,"color":-13791810,"inLegend":true,"setupCode":"","updateCode":"plotxy ticks sum [food] of patches with [pcolor = sky]","type":"pen"},{"display":"food-in-pile3","interval":1,"mode":0,"color":-13345367,"inLegend":true,"setupCode":"","updateCode":"plotxy ticks sum [food] of patches with [pcolor = blue]","type":"pen"}],"compilation":{"success":true,"messages":[]}}])(tortoise_require("extensions/all").porters())(["diffusion-rate", "evaporation-rate", "population"], ["diffusion-rate", "evaporation-rate", "population"], ["chemical", "food", "nest?", "nest-scent", "food-source-number"], -35, 35, -35, 35, 7, false, false, turtleShapes, linkShapes, function(){});
var Extensions = tortoise_require('extensions/all').initialize(workspace);
var BreedManager = workspace.breedManager;
var ImportExportPrims = workspace.importExportPrims;
var InspectionPrims = workspace.inspectionPrims;
var LayoutManager = workspace.layoutManager;
var LinkPrims = workspace.linkPrims;
var ListPrims = workspace.listPrims;
var MousePrims = workspace.mousePrims;
var OutputPrims = workspace.outputPrims;
var PrimChecks = workspace.primChecks;
var Prims = workspace.prims;
var PrintPrims = workspace.printPrims;
var ProcedurePrims = workspace.procedurePrims;
var RandomPrims = workspace.randomPrims;
var SelfManager = workspace.selfManager;
var SelfPrims = workspace.selfPrims;
var StringPrims = workspace.stringPrims;
var Updater = workspace.updater;
var UserDialogPrims = workspace.userDialogPrims;
var plotManager = workspace.plotManager;
var world = workspace.world;
ProcedurePrims.defineCommand("setup", 429, 629, (function() {
  world.clearAll();
  BreedManager.setDefaultShape(world.turtles().getSpecialName(), "bug")
  var R = ProcedurePrims.ask(world.turtleManager.createTurtles(world.observer.getGlobal("population"), ""), function() {
    PrimChecks.turtle.setVariable(517, 521, "size", 2);
    PrimChecks.turtleOrLink.setVariable(557, 562, "color", 15);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(483, 497, R); return R; }
  var R = ProcedurePrims.callCommand("setup-patches"); if (R === DeathInterrupt) { return R; }
  world.ticker.reset();
}))
ProcedurePrims.defineCommand("setup-patches", 637, 715, (function() {
  var R = ProcedurePrims.ask(world.patches(), function() {
    var R = ProcedurePrims.callCommand("setup-nest"); if (R === DeathInterrupt) { return R; }
    var R = ProcedurePrims.callCommand("setup-food"); if (R === DeathInterrupt) { return R; }
    var R = ProcedurePrims.callCommand("recolor-patch"); if (R === DeathInterrupt) { return R; }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(653, 656, R); return R; }
}))
ProcedurePrims.defineCommand("setup-nest", 723, 962, (function() {
  PrimChecks.patch.setVariable(825, 830, "nest?", Prims.lt(SelfManager.self().distanceXY(0, 0), 5));
  PrimChecks.patch.setVariable(930, 940, "nest-scent", PrimChecks.math.minus(945, 946, 200, SelfManager.self().distanceXY(0, 0)));
}))
ProcedurePrims.defineCommand("setup-food", 970, 1497, (function() {
  if (Prims.lt(SelfManager.self().distanceXY(PrimChecks.math.mult(1063, 1064, 0.6, world.topology.maxPxcor), 0), 5)) {
    PrimChecks.patch.setVariable(1091, 1109, "food-source-number", 1);
  }
  if (Prims.lt(SelfManager.self().distanceXY(PrimChecks.math.mult(1182, 1183, -0.6, world.topology.maxPxcor), PrimChecks.math.mult(1201, 1202, -0.6, world.topology.maxPycor)), 5)) {
    PrimChecks.patch.setVariable(1227, 1245, "food-source-number", 2);
  }
  if (Prims.lt(SelfManager.self().distanceXY(PrimChecks.math.mult(1320, 1321, -0.8, world.topology.maxPxcor), PrimChecks.math.mult(1338, 1339, 0.8, world.topology.maxPycor)), 5)) {
    PrimChecks.patch.setVariable(1364, 1382, "food-source-number", 3);
  }
  if (Prims.gt(PrimChecks.patch.getVariable(1446, 1464, "food-source-number"), 0)) {
    PrimChecks.patch.setVariable(1477, 1481, "food", PrimChecks.list.oneOf(1482, 1488, [1, 2]));
  }
}))
ProcedurePrims.defineCommand("recolor-patch", 1505, 1901, (function() {
  if (PrimChecks.patch.getVariable(1589, 1594, "nest?")) {
    PrimChecks.patch.setVariable(1603, 1609, "pcolor", 115);
  }
  else {
    if (Prims.gt(PrimChecks.patch.getVariable(1630, 1634, "food"), 0)) {
      if (Prims.equality(PrimChecks.patch.getVariable(1648, 1666, "food-source-number"), 1)) {
        PrimChecks.patch.setVariable(1677, 1683, "pcolor", 85);
      }
      if (Prims.equality(PrimChecks.patch.getVariable(1700, 1718, "food-source-number"), 2)) {
        PrimChecks.patch.setVariable(1729, 1735, "pcolor", 95);
      }
      if (Prims.equality(PrimChecks.patch.getVariable(1752, 1770, "food-source-number"), 3)) {
        PrimChecks.patch.setVariable(1781, 1787, "pcolor", 105);
      }
    }
    else {
      PrimChecks.patch.setVariable(1857, 1863, "pcolor", ColorModel.scaleColor(55, PrimChecks.patch.getVariable(1882, 1890, "chemical"), 0.1, 5));
    }
  }
}))
ProcedurePrims.defineCommand("go", 1976, 2416, (function() {
  var R = ProcedurePrims.ask(world.turtles(), function() {
    if (Prims.gte(PrimChecks.turtle.getVariable(2019, 2022, "who"), world.ticker.tickCount())) {
      return PrimChecks.procedure.stop(2034, 2038);
    }
    if (Prims.equality(PrimChecks.turtleOrLink.getVariable(2079, 2084, "color"), 15)) {
      var R = ProcedurePrims.callCommand("look-for-food"); if (R === DeathInterrupt) { return R; }
    }
    else {
      var R = ProcedurePrims.callCommand("return-to-nest"); if (R === DeathInterrupt) { return R; }
    }
    var R = ProcedurePrims.callCommand("wiggle"); if (R === DeathInterrupt) { return R; }
    SelfManager.self()._optimalFdOne();
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2000, 2003, R); return R; }
  world.topology.diffuse("chemical", PrimChecks.math.div(2279, 2280, PrimChecks.validator.checkArg('/', 2279, 2280, 1, world.observer.getGlobal("diffusion-rate")), 100), false)
  var R = ProcedurePrims.ask(world.patches(), function() {
    PrimChecks.patch.setVariable(2308, 2316, "chemical", PrimChecks.math.div(2353, 2354, PrimChecks.math.mult(2326, 2327, PrimChecks.validator.checkArg('*', 2326, 2327, 1, PrimChecks.patch.getVariable(2317, 2325, "chemical")), PrimChecks.math.minus(2333, 2334, 100, PrimChecks.validator.checkArg('-', 2333, 2334, 1, world.observer.getGlobal("evaporation-rate")))), 100));
    var R = ProcedurePrims.callCommand("recolor-patch"); if (R === DeathInterrupt) { return R; }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2288, 2291, R); return R; }
  world.ticker.tick();
}))
ProcedurePrims.defineCommand("return-to-nest", 2424, 2676, (function() {
  if (PrimChecks.patch.getVariable(2469, 2474, "nest?")) {
    PrimChecks.turtleOrLink.setVariable(2519, 2524, "color", 15);
    SelfManager.self().right(180);
  }
  else {
    PrimChecks.patch.setVariable(2550, 2558, "chemical", PrimChecks.math.plus(2568, 2569, PrimChecks.validator.checkArg('+', 2568, 2569, 1, PrimChecks.patch.getVariable(2559, 2567, "chemical")), 60));
    var R = ProcedurePrims.callCommand("uphill-nest-scent"); if (R === DeathInterrupt) { return R; }
  }
}))
ProcedurePrims.defineCommand("look-for-food", 2684, 3024, (function() {
  if (Prims.gt(PrimChecks.patch.getVariable(2724, 2728, "food"), 0)) {
    PrimChecks.turtleOrLink.setVariable(2741, 2746, "color", PrimChecks.math.plus(2754, 2755, 25, 1));
    PrimChecks.patch.setVariable(2786, 2790, "food", PrimChecks.math.minus(2796, 2797, PrimChecks.validator.checkArg('-', 2796, 2797, 1, PrimChecks.patch.getVariable(2791, 2795, "food")), 1));
    SelfManager.self().right(180);
    return PrimChecks.procedure.stop(2889, 2893);
  }
  if ((Prims.gte(PrimChecks.patch.getVariable(2965, 2973, "chemical"), 0.05) && Prims.lt(PrimChecks.patch.getVariable(2988, 2996, "chemical"), 2))) {
    var R = ProcedurePrims.callCommand("uphill-chemical"); if (R === DeathInterrupt) { return R; }
  }
}))
ProcedurePrims.defineCommand("uphill-chemical", 3093, 3397, (function() {
  let scentHahead = PrimChecks.procedure.callReporter(3148, 3171, "chemical-scent-at-angle", 0); ProcedurePrims.stack().currentContext().registerStringRunVar("SCENT-AHEAD", scentHahead);
  let scentHright = PrimChecks.procedure.callReporter(3194, 3217, "chemical-scent-at-angle", 45); ProcedurePrims.stack().currentContext().registerStringRunVar("SCENT-RIGHT", scentHright);
  let scentHleft = PrimChecks.procedure.callReporter(3240, 3263, "chemical-scent-at-angle", -45); ProcedurePrims.stack().currentContext().registerStringRunVar("SCENT-LEFT", scentHleft);
  if ((Prims.gt(scentHright, scentHahead) || Prims.gt(scentHleft, scentHahead))) {
    if (Prims.gt(scentHright, scentHleft)) {
      SelfManager.self().right(45);
    }
    else {
      SelfManager.self().right(-(45));
    }
  }
}))
ProcedurePrims.defineCommand("uphill-nest-scent", 3466, 3760, (function() {
  let scentHahead = PrimChecks.procedure.callReporter(3523, 3542, "nest-scent-at-angle", 0); ProcedurePrims.stack().currentContext().registerStringRunVar("SCENT-AHEAD", scentHahead);
  let scentHright = PrimChecks.procedure.callReporter(3565, 3584, "nest-scent-at-angle", 45); ProcedurePrims.stack().currentContext().registerStringRunVar("SCENT-RIGHT", scentHright);
  let scentHleft = PrimChecks.procedure.callReporter(3607, 3626, "nest-scent-at-angle", -45); ProcedurePrims.stack().currentContext().registerStringRunVar("SCENT-LEFT", scentHleft);
  if ((Prims.gt(scentHright, scentHahead) || Prims.gt(scentHleft, scentHahead))) {
    if (Prims.gt(scentHright, scentHleft)) {
      SelfManager.self().right(45);
    }
    else {
      SelfManager.self().right(-(45));
    }
  }
}))
ProcedurePrims.defineCommand("wiggle", 3768, 3858, (function() {
  SelfManager.self().right(RandomPrims.randomLong(40));
  SelfManager.self().right(-(RandomPrims.randomLong(40)));
  if (PrimChecks.math.not(SelfManager.self().canMove(1))) {
    SelfManager.self().right(180);
  }
}))
ProcedurePrims.defineReporter("nest-scent-at-angle", 3873, 3995, (function(angle) {
  let p = SelfManager.self().patchRightAndAhead(angle, 1); ProcedurePrims.stack().currentContext().registerStringRunVar("P", p);
  if (Prims.equality(p, Nobody)) {
    return PrimChecks.procedure.report(3957, 3963, 0);
  }
  return PrimChecks.procedure.report(3970, 3976, PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 3990, 3992, 1904, p), function() { return PrimChecks.patch.getVariable(3978, 3988, "nest-scent"); }));
}))
ProcedurePrims.defineReporter("chemical-scent-at-angle", 4010, 4134, (function(angle) {
  let p = SelfManager.self().patchRightAndAhead(angle, 1); ProcedurePrims.stack().currentContext().registerStringRunVar("P", p);
  if (Prims.equality(p, Nobody)) {
    return PrimChecks.procedure.report(4098, 4104, 0);
  }
  return PrimChecks.procedure.report(4111, 4117, PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 4129, 4131, 1904, p), function() { return PrimChecks.patch.getVariable(4119, 4127, "chemical"); }));
}))
world.observer.setGlobal("diffusion-rate", 50);
world.observer.setGlobal("evaporation-rate", 10);
world.observer.setGlobal("population", 125);