var AgentModel = tortoise_require('agentmodel');
var ColorModel = tortoise_require('engine/core/colormodel');
var Exception = tortoise_require('util/exception');
var Link = tortoise_require('engine/core/link');
var LinkSet = tortoise_require('engine/core/linkset');
var Meta = tortoise_require('meta');
var NLMath = tortoise_require('util/nlmath');
var NLType = tortoise_require('engine/core/typechecker');
var PatchSet = tortoise_require('engine/core/patchset');
var PenBundle = tortoise_require('engine/plot/pen');
var Plot = tortoise_require('engine/plot/plot');
var PlotOps = tortoise_require('engine/plot/plotops');
var StrictMath = tortoise_require('shim/strictmath');
var Tasks = tortoise_require('engine/prim/tasks');
var Turtle = tortoise_require('engine/core/turtle');
var TurtleSet = tortoise_require('engine/core/turtleset');
var notImplemented = tortoise_require('util/notimplemented');
var { DeathInterrupt, StopInterrupt } = tortoise_require('util/interrupts');

var linkShapes = {"default":{"name":"default","direction-indicator":{"name":"link direction","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":150,"x2":90,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":150,"x2":210,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"curviness":0,"lines":[{"x-offset":-0.2,"is-visible":false,"dash-pattern":[0,1]},{"x-offset":0,"is-visible":true,"dash-pattern":[1,0]},{"x-offset":0.2,"is-visible":false,"dash-pattern":[0,1]}]}};
var turtleShapes = {"default":{"name":"default","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,40,150,260],"ycors":[5,250,205,250],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"airplane":{"name":"airplane","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,135,120,120,15,15,120,135,105,120,150,180,210,165,180,285,285,180,180,165],"ycors":[0,15,60,105,165,195,180,240,270,285,270,285,270,240,180,195,165,105,60,15],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"arrow":{"name":"arrow","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,0,105,105,195,195,300],"ycors":[0,150,150,293,293,150,150],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"box":{"name":"box","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,285,285,150],"ycors":[285,225,75,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,15,150,285],"ycors":[135,75,15,75],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[15,15,150,150],"ycors":[75,225,285,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":285,"x2":150,"y2":135,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":15,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":285,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"bug":{"name":"bug","editableColorIndex":0,"rotate":true,"elements":[{"x":96,"y":182,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":127,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":75,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":100,"x2":80,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":100,"x2":220,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"butterfly":{"name":"butterfly","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,209,225,225,195,165,150],"ycors":[165,199,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,89,75,75,105,135,150],"ycors":[165,198,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[139,100,55,25,10,10,25,40,85,139],"ycors":[148,105,90,90,105,135,180,195,194,163],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[162,200,245,275,290,290,275,260,215,162],"ycors":[150,105,90,90,105,135,180,195,195,165],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,135,120,135,150,165,180,165],"ycors":[255,225,150,120,105,120,150,225],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":135,"y":90,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":105,"x2":195,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":105,"x2":105,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"car":{"name":"car","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[300,279,261,240,226,213,203,185,159,135,75,0,0,0,300,300],"ycors":[180,164,144,135,132,106,84,63,50,50,60,150,165,225,225,180],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":180,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":30,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[162,132,134,209,194,189,180],"ycors":[80,78,135,135,105,96,89],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":47,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":195,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle":{"name":"circle","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle 2":{"name":"circle 2","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"cow":{"name":"cow","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[200,197,179,177,166,140,93,78,72,49,48,37,25,25,45,103,179,198,252,272,293,285,255,242,224],"ycors":[193,249,249,196,187,189,191,179,211,209,181,149,120,89,72,84,75,76,64,81,103,121,121,118,167],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[73,86,62,48],"ycors":[210,251,249,208],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[25,16,9,23,25,39],"ycors":[114,195,204,213,200,123],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"cylinder":{"name":"cylinder","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"dot":{"name":"dot","editableColorIndex":0,"rotate":false,"elements":[{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"face happy":{"name":"face happy","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[255,239,213,191,179,203,218,225,218,203,181,194,217,240],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face neutral":{"name":"face neutral","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":7,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":60,"ymin":195,"xmax":240,"ymax":225,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face sad":{"name":"face sad","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[168,184,210,232,244,220,205,198,205,220,242,229,206,183],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"fish":{"name":"fish","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[44,21,15,0,15,0,13,20,45],"ycors":[131,87,86,120,150,180,214,212,166],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[135,119,95,76,46,60],"ycors":[195,235,218,210,204,165],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[75,83,71,86,166,135],"ycors":[45,77,103,114,78,60],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[30,151,226,280,292,292,287,270,195,151,30],"ycors":[136,77,81,119,146,160,170,195,210,212,166],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":215,"y":106,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"flag":{"name":"flag","editableColorIndex":0,"rotate":false,"elements":[{"xmin":60,"ymin":15,"xmax":75,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[90,270,90],"ycors":[150,90,30],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":75,"y1":135,"x2":90,"y2":135,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":75,"y1":45,"x2":90,"y2":45,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"flower":{"name":"flower","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[135,165,180,180,150,165,195,195,165],"ycors":[120,165,210,240,300,300,240,195,135],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"x":85,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":147,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":192,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":85,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":70,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":25,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":96,"y":51,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":113,"y":68,"diam":74,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[189,219,249,279,234],"ycors":[233,188,173,188,218],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[180,150,105,75,135],"ycors":[255,210,210,240,240],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false}]},"house":{"name":"house","editableColorIndex":0,"rotate":false,"elements":[{"xmin":45,"ymin":120,"xmax":255,"ymax":285,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":210,"xmax":180,"ymax":285,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[15,150,285],"ycors":[120,15,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":30,"y1":120,"x2":270,"y2":120,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"leaf":{"name":"leaf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,135,120,60,30,60,60,15,30,15,40,45,60,90,105,120,105,120,135,150,165,180,195,180,195,210,240,255,263,285,270,285,240,240,270,240,180,165],"ycors":[210,195,210,210,195,180,165,135,120,105,104,90,90,105,120,120,60,60,30,15,30,60,60,120,120,105,90,90,104,105,120,135,165,180,195,210,210,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,135,120,105,105,135,165,165],"ycors":[195,240,255,255,285,285,240,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"line":{"name":"line","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":300,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"line half":{"name":"line half","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"pentagon":{"name":"pentagon","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,60,240,285],"ycors":[15,120,285,285,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"person":{"name":"person","editableColorIndex":0,"rotate":false,"elements":[{"x":110,"y":5,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,120,90,105,135,150,165,195,210,180,195],"ycors":[90,195,285,300,300,225,300,300,285,195,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":127,"ymin":79,"xmax":172,"ymax":94,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[195,240,225,165],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,60,75,135],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"plant":{"name":"plant","editableColorIndex":0,"rotate":false,"elements":[{"xmin":135,"ymin":90,"xmax":165,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,210,255,225,165],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[180,135,120,180,210],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[180,210,180,120,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[105,60,45,105,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[105,135,105,45,60],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,120,150,180,165],"ycors":[90,45,15,45,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square":{"name":"square","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square 2":{"name":"square 2","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":60,"ymin":60,"xmax":240,"ymax":240,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"star":{"name":"star","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[151,185,298,207,242,151,59,94,3,116],"ycors":[1,108,108,175,282,216,282,175,108,108],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"target":{"name":"target","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":60,"y":60,"diam":180,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"tree":{"name":"tree","editableColorIndex":0,"rotate":false,"elements":[{"x":118,"y":3,"diam":94,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":195,"xmax":180,"ymax":300,"type":"rectangle","color":"rgba(157, 110, 72, 1)","filled":true,"marked":false},{"x":65,"y":21,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":116,"y":41,"diam":127,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":45,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":104,"y":74,"diam":152,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle":{"name":"triangle","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle 2":{"name":"triangle 2","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[151,225,75],"ycors":[99,223,224],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"truck":{"name":"truck","editableColorIndex":0,"rotate":false,"elements":[{"xmin":4,"ymin":45,"xmax":195,"ymax":187,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[296,296,259,244,208,207],"ycors":[193,150,134,104,104,194],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":195,"ymin":60,"xmax":195,"ymax":105,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[238,252,219,218],"ycors":[112,141,141,112],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":181,"ymin":185,"xmax":214,"ymax":194,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"turtle":{"name":"turtle","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[215,240,246,228,215,193],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[195,225,245,260,269,261,240,225,210],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[105,75,55,40,31,39,60,75,90],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[132,134,107,108,150,192,192,169,172],"ycors":[85,64,51,17,2,18,52,65,87],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[85,60,54,72,85,107],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[119,179,209,224,220,175,128,81,74,88],"ycors":[75,75,101,135,225,261,261,224,135,99],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"wheel":{"name":"wheel","editableColorIndex":0,"rotate":false,"elements":[{"x":3,"y":3,"diam":294,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":285,"x2":150,"y2":15,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":15,"y1":150,"x2":285,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":216,"y1":40,"x2":79,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":84,"x2":269,"y2":221,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":216,"x2":269,"y2":79,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":84,"y1":40,"x2":221,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"x":{"name":"x","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[270,225,30,75],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[30,75,270,225],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]}};
var modelConfig =
  (
    (typeof global !== "undefined" && global !== null) ? global :
    (typeof window !== "undefined" && window !== null) ? window :
    {}
  ).modelConfig || {};
var modelPlotOps = (typeof modelConfig.plotOps !== "undefined" && modelConfig.plotOps !== null) ? modelConfig.plotOps : {};
modelConfig.plots = [(function() {
  var name    = 'Number Happy';
  var plotOps = (typeof modelPlotOps[name] !== "undefined" && modelPlotOps[name] !== null) ? modelPlotOps[name] : new PlotOps(function() {}, function() {}, function() {}, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; });
  var pens    = [new PenBundle.Pen('Happy', plotOps.makePenOps, false, new PenBundle.State(55, 1, PenBundle.DisplayMode.Line), function() {}, function() {
    return ProcedurePrims.runInPlotContext('Number Happy', 'Happy', function() {
      plotManager.plotValue(PrimChecks.agentset.countWith(null, null, world.turtles(), function() { return PrimChecks.turtle.getVariable(58, 64, "happy?"); }));;
    });
  })];
  var setup   = function() {
    return ProcedurePrims.runInPlotContext('Number Happy', undefined, function() { plotManager.setYRange(0, world.observer.getGlobal("number"));; });
  };
  var update  = function() {};
  return new Plot(name, pens, plotOps, "clock", "", false, true, true, 0, 10, 0, 150, setup, update);
})(), (function() {
  var name    = 'Single Sex Groups';
  var plotOps = (typeof modelPlotOps[name] !== "undefined" && modelPlotOps[name] !== null) ? modelPlotOps[name] : new PlotOps(function() {}, function() {}, function() {}, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; });
  var pens    = [new PenBundle.Pen('Single Sex', plotOps.makePenOps, false, new PenBundle.State(15, 1, PenBundle.DisplayMode.Line), function() {}, function() {
    return ProcedurePrims.runInPlotContext('Single Sex Groups', 'Single Sex', function() { plotManager.plotValue(world.observer.getGlobal("boring-groups"));; });
  })];
  var setup   = function() {};
  var update  = function() {};
  return new Plot(name, pens, plotOps, "clock", "", false, true, true, 0, 10, 0, 12, setup, update);
})()];
var workspace = tortoise_require('engine/workspace')(modelConfig)([])(["happy?", "my-group-site"], [])('globals [   group-sites    ;; agentset of patches where groups are located   boring-groups  ;; how many groups are currently single-sex ]  turtles-own [   happy?         ;; true or false   my-group-site ]  to setup   clear-all   set group-sites patches with [group-site?]   set-default-shape turtles \"person\"   create-turtles number [     choose-sex                   ;; become a man or a woman     set size 3                   ;; be easier to see     set my-group-site one-of group-sites     move-to my-group-site   ]   ask turtles [ update-happiness ]   count-boring-groups   update-labels   ask turtles [ spread-out-vertically ]   reset-ticks end  to go   if all? turtles [happy?]     [ stop ]  ;; stop the simulation if everyone is happy   ask turtles [ move-to my-group-site ]  ;; put all people back to their group sites   ask turtles [ update-happiness ]   ask turtles [ leave-if-unhappy ]   find-new-groups   update-labels   count-boring-groups   ask turtles [     set my-group-site patch-here     spread-out-vertically   ]   tick end  to update-happiness  ;; turtle procedure   let total count turtles-here   let same count turtles-here with [color = [color] of myself]   let opposite (total - same)   ;; you are happy if the proportion of people of the opposite sex   ;; does not exceed your tolerance   set happy? (opposite / total) <= (tolerance / 100) end  to leave-if-unhappy  ;; turtle procedure   if not happy? [     set heading one-of [90 270]  ;; randomly face right or left     fd 1                         ;; leave old group   ] end  to find-new-groups   display   ;; force display update so we see animation   let malcontents turtles with [not member? patch-here group-sites]   if not any? malcontents [ stop ]   ask malcontents [ fd 1 ]   find-new-groups end  to-report group-site?  ;; patch procedure   ;; if your pycor is 0 and your pxcor is where a group should be located,   ;; then you\'re a group site.   ;; In this model (0,0) is near the right edge, so pxcor is usually   ;; negative.   ;; first figure out how many patches apart the groups will be   let group-interval floor (world-width / num-groups)   report     ;; all group sites are in the middle row     (pycor = 0) and     ;; leave a right margin of one patch, for legibility     (pxcor <= 0) and     ;; the distance between groups must divide evenly into     ;; our pxcor     (pxcor mod group-interval = 0) and     ;; finally, make sure we don\'t wind up with too many groups     (floor ((- pxcor) / group-interval) < num-groups) end  to spread-out-vertically  ;; turtle procedure   ifelse woman?     [ set heading 180 ]  ;; face south     [ set heading   0 ]  ;; face north   fd 4                   ;; leave a gap   while [any? other turtles-here] [     if-else can-move? 2 [       fd 1     ]     [ ;; else, if we reached the edge of the screen       set xcor xcor - 1  ;; take a step to the left       set ycor 0         ;; and move to the base a new stack       fd 4     ]   ] end  to count-boring-groups   ask group-sites [     ifelse boring?       [ set plabel-color gray  ]       [ set plabel-color white ]   ]   set boring-groups count group-sites with [plabel-color = gray] end  to-report boring?  ;; patch procedure   ;; To see whether this group is single sex, we collect the colors   ;; of the turtles into a list, then remove all the duplicates   ;; from the list.  If the result is a list with exactly one color   ;; in it, then the group is single sex.   report length remove-duplicates ([color] of turtles-here) = 1 end  to update-labels   ask group-sites [ set plabel count turtles-here ] end  ;;; ;;; color procedures ;;;  ;; Blue represents male, pink represents female. No stereotypes are meant ;; to be promoted. Simply change the colors right here if you\'d like.  to choose-sex  ;; turtle procedure   set color one-of [pink blue] end  to-report woman?  ;; turtle procedure   report color = pink end   ; Copyright 1997 Uri Wilensky. ; See Info tab for full copyright and license.')([{"x":265,"y":7,"width":414,"height":559,"dimensions":{"minPxcor":-80,"maxPxcor":1,"minPycor":-55,"maxPycor":55,"patchSize":5,"wrappingAllowedInX":true,"wrappingAllowedInY":false},"fontSize":14,"updateMode":"TickBased","showTickCounter":true,"tickCounterLabel":"ticks","frameRate":30,"type":"view","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 300; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"number","x":5,"y":4,"width":250,"height":50,"oldSize":false,"display":"number","min":"0","max":"300","default":70,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 99; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"tolerance","x":5,"y":175,"width":250,"height":50,"oldSize":false,"display":"tolerance","min":"0","max":"99","default":25,"step":"1","units":"%","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 5; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 20; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"num-groups","x":5,"y":60,"width":250,"height":50,"oldSize":false,"display":"num-groups","min":"5","max":"20","default":10,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"setup\"); if (R === StopInterrupt) { return R; }","type":"button","source":"setup","x":6,"y":120,"width":68,"height":44,"oldSize":false,"display":"setup","forever":false,"buttonKind":"Observer","disableUntilTicksStart":false,"compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","type":"button","source":"go","x":173,"y":120,"width":80,"height":45,"oldSize":false,"display":"go","forever":true,"buttonKind":"Observer","disableUntilTicksStart":true,"compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","type":"button","source":"go","x":83,"y":120,"width":81,"height":45,"oldSize":false,"display":"go once","forever":false,"buttonKind":"Observer","disableUntilTicksStart":true,"compilation":{"success":true,"messages":[]}}, {"compiledSource":"ProcedurePrims.rng.withAux(function() {   return PrimChecks.agentset.countWith(null, null, world.turtles(), function() { return PrimChecks.turtle.getVariable(69, 75, \"happy?\"); }); })","type":"monitor","source":"count turtles with [happy?]","x":757,"y":10,"width":125,"height":60,"oldSize":false,"display":"number happy","precision":3,"fontSize":11,"compilation":{"success":true,"messages":[]}}, {"compiledSource":"ProcedurePrims.rng.withAux(function() { return world.observer.getGlobal(\"boring-groups\"); })","type":"monitor","source":"boring-groups","x":760,"y":300,"width":125,"height":60,"oldSize":false,"display":"single sex groups","precision":3,"fontSize":11,"compilation":{"success":true,"messages":[]}}, {"compiledSetupCode":"function() {   return ProcedurePrims.runInPlotContext('Number Happy', undefined, function() { plotManager.setYRange(0, world.observer.getGlobal(\"number\"));; }); }","compiledUpdateCode":"function() {}","compiledPens":[{"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {   return ProcedurePrims.runInPlotContext('Number Happy', 'Happy', function() {     plotManager.plotValue(PrimChecks.agentset.countWith(null, null, world.turtles(), function() { return PrimChecks.turtle.getVariable(58, 64, \"happy?\"); }));;   }); }","type":"pen","display":"Happy","interval":1,"mode":0,"color":-10899396,"inLegend":true,"setupCode":"","updateCode":"plot count turtles with [happy?]","compilation":{"success":true,"messages":[]}}],"type":"plot","display":"Number Happy","x":695,"y":365,"width":265,"height":200,"oldSize":false,"xAxis":"clock","xmin":0,"xmax":10,"ymin":0,"ymax":150,"autoPlotX":true,"autoPlotY":true,"legendOn":false,"setupCode":"set-plot-y-range 0 number","updateCode":"","pens":[{"display":"Happy","interval":1,"mode":0,"color":-10899396,"inLegend":true,"setupCode":"","updateCode":"plot count turtles with [happy?]","type":"pen"}],"compilation":{"success":true,"messages":[]}}, {"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {}","compiledPens":[{"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {   return ProcedurePrims.runInPlotContext('Single Sex Groups', 'Single Sex', function() { plotManager.plotValue(world.observer.getGlobal(\"boring-groups\"));; }); }","type":"pen","display":"Single Sex","interval":1,"mode":0,"color":-2674135,"inLegend":true,"setupCode":"","updateCode":"plot boring-groups","compilation":{"success":true,"messages":[]}}],"type":"plot","display":"Single Sex Groups","x":690,"y":75,"width":265,"height":200,"oldSize":false,"xAxis":"clock","xmin":0,"xmax":10,"ymin":0,"ymax":12,"autoPlotX":true,"autoPlotY":true,"legendOn":false,"setupCode":"","updateCode":"","pens":[{"display":"Single Sex","interval":1,"mode":0,"color":-2674135,"inLegend":true,"setupCode":"","updateCode":"plot boring-groups","type":"pen"}],"compilation":{"success":true,"messages":[]}}])(tortoise_require("extensions/all").porters())(["number", "tolerance", "num-groups", "group-sites", "boring-groups"], ["number", "tolerance", "num-groups"], [], -80, 1, -55, 55, 5, true, false, turtleShapes, linkShapes, function(){});
var Extensions = tortoise_require('extensions/all').initialize(workspace);
var BreedManager = workspace.breedManager;
var ImportExportPrims = workspace.importExportPrims;
var InspectionPrims = workspace.inspectionPrims;
var LayoutManager = workspace.layoutManager;
var LinkPrims = workspace.linkPrims;
var ListPrims = workspace.listPrims;
var MousePrims = workspace.mousePrims;
var OutputPrims = workspace.outputPrims;
var PrimChecks = workspace.primChecks;
var Prims = workspace.prims;
var PrintPrims = workspace.printPrims;
var ProcedurePrims = workspace.procedurePrims;
var RandomPrims = workspace.randomPrims;
var SelfManager = workspace.selfManager;
var SelfPrims = workspace.selfPrims;
var StringPrims = workspace.stringPrims;
var Updater = workspace.updater;
var UserDialogPrims = workspace.userDialogPrims;
var plotManager = workspace.plotManager;
var world = workspace.world;
ProcedurePrims.defineCommand("setup", 209, 646, (function() {
  world.clearAll();
  world.observer.setGlobal("group-sites", PrimChecks.agentset.with(253, 257, world.patches(), function() { return PrimChecks.procedure.callReporter(259, 270, "group-site?"); }));
  BreedManager.setDefaultShape(world.turtles().getSpecialName(), "person")
  var R = ProcedurePrims.ask(world.turtleManager.createTurtles(world.observer.getGlobal("number"), ""), function() {
    var R = ProcedurePrims.callCommand("choose-sex"); if (R === DeathInterrupt) { return R; }
    PrimChecks.turtle.setVariable(403, 407, "size", 3);
    PrimChecks.turtle.setVariable(456, 469, "my-group-site", PrimChecks.list.oneOf(470, 476, PrimChecks.validator.checkArg('ONE-OF', 470, 476, 120, world.observer.getGlobal("group-sites"))));
    SelfManager.self().moveTo(PrimChecks.turtle.getVariable(501, 514, "my-group-site"));
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(311, 325, R); return R; }
  var R = ProcedurePrims.ask(world.turtles(), function() { var R = ProcedurePrims.callCommand("update-happiness"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(521, 524, R); return R; }
  var R = ProcedurePrims.callCommand("count-boring-groups"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.callCommand("update-labels"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.ask(world.turtles(), function() {
    var R = ProcedurePrims.callCommand("spread-out-vertically"); if (R === DeathInterrupt) { return R; }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(594, 597, R); return R; }
  world.ticker.reset();
}))
ProcedurePrims.defineCommand("go", 654, 1039, (function() {
  if (PrimChecks.agentset.all(662, 666, world.turtles(), function() { return PrimChecks.turtle.getVariable(676, 682, "happy?"); })) {
    return PrimChecks.procedure.stop(690, 694);
  }
  var R = ProcedurePrims.ask(world.turtles(), function() { SelfManager.self().moveTo(PrimChecks.turtle.getVariable(766, 779, "my-group-site")); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(744, 747, R); return R; }
  var R = ProcedurePrims.ask(world.turtles(), function() { var R = ProcedurePrims.callCommand("update-happiness"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(829, 832, R); return R; }
  var R = ProcedurePrims.ask(world.turtles(), function() { var R = ProcedurePrims.callCommand("leave-if-unhappy"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(864, 867, R); return R; }
  var R = ProcedurePrims.callCommand("find-new-groups"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.callCommand("update-labels"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.callCommand("count-boring-groups"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.ask(world.turtles(), function() {
    PrimChecks.turtle.setVariable(977, 990, "my-group-site", SelfManager.self().getPatchHere());
    var R = ProcedurePrims.callCommand("spread-out-vertically"); if (R === DeathInterrupt) { return R; }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(955, 958, R); return R; }
  world.ticker.tick();
}))
ProcedurePrims.defineCommand("update-happiness", 1047, 1365, (function() {
  let total = PrimChecks.agentset.count(SelfManager.self().turtlesHere()); ProcedurePrims.stack().currentContext().registerStringRunVar("TOTAL", total);
  let same = PrimChecks.agentset.countWith(null, null, SelfManager.self().turtlesHere(), function() {
    return Prims.equality(PrimChecks.turtleOrLink.getVariable(1152, 1157, "color"), PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.turtleOrLink.getVariable(1161, 1166, "color"); }));
  }); ProcedurePrims.stack().currentContext().registerStringRunVar("SAME", same);
  let opposite = PrimChecks.math.minus(1201, 1202, PrimChecks.validator.checkArg('-', 1201, 1202, 1, total), PrimChecks.validator.checkArg('-', 1201, 1202, 1, same)); ProcedurePrims.stack().currentContext().registerStringRunVar("OPPOSITE", opposite);
  PrimChecks.turtle.setVariable(1318, 1324, "happy?", Prims.lte(PrimChecks.math.div(1335, 1336, PrimChecks.validator.checkArg('/', 1335, 1336, 1, opposite), PrimChecks.validator.checkArg('/', 1335, 1336, 1, total)), PrimChecks.math.div(1358, 1359, PrimChecks.validator.checkArg('/', 1358, 1359, 1, world.observer.getGlobal("tolerance")), 100)));
}))
ProcedurePrims.defineCommand("leave-if-unhappy", 1373, 1549, (function() {
  if (PrimChecks.math.not(PrimChecks.validator.checkArg('NOT', 1416, 1419, 2, PrimChecks.turtle.getVariable(1420, 1426, "happy?")))) {
    PrimChecks.turtle.setVariable(1437, 1444, "heading", PrimChecks.list.oneOf(1445, 1451, [90, 270]));
    SelfManager.self()._optimalFdOne();
  }
}))
ProcedurePrims.defineCommand("find-new-groups", 1557, 1777, (function() {
  Prims.display();
  let malcontents = PrimChecks.agentset.with(1655, 1659, world.turtles(), function() {
    return PrimChecks.math.not(PrimChecks.list.member(SelfManager.self().getPatchHere(), PrimChecks.validator.checkArg('MEMBER?', 1665, 1672, 124, world.observer.getGlobal("group-sites"))));
  }); ProcedurePrims.stack().currentContext().registerStringRunVar("MALCONTENTS", malcontents);
  if (PrimChecks.math.not(PrimChecks.agentset.any(PrimChecks.validator.checkArg('ANY?', 1706, 1710, 112, malcontents)))) {
    return PrimChecks.procedure.stop(1725, 1729);
  }
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 1734, 1737, 1904, malcontents), function() { SelfManager.self()._optimalFdOne(); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1734, 1737, R); return R; }
  var R = ProcedurePrims.callCommand("find-new-groups"); if (R === DeathInterrupt) { return R; }
}))
ProcedurePrims.defineReporter("group-site?", 1792, 2517, (function() {
  let groupHinterval = PrimChecks.math.floor(PrimChecks.math.div(2118, 2119, world.topology.width, PrimChecks.validator.checkArg('/', 2118, 2119, 1, world.observer.getGlobal("num-groups")))); ProcedurePrims.stack().currentContext().registerStringRunVar("GROUP-INTERVAL", groupHinterval);
  return PrimChecks.procedure.report(2134, 2140, (((Prims.equality(PrimChecks.patch.getVariable(2191, 2196, "pycor"), 0) && Prims.lte(PrimChecks.patch.getVariable(2268, 2273, "pxcor"), 0)) && Prims.equality(PrimChecks.math.mod(2371, 2374, PrimChecks.validator.checkArg('MOD', 2371, 2374, 1, PrimChecks.patch.getVariable(2365, 2370, "pxcor")), PrimChecks.validator.checkArg('MOD', 2371, 2374, 1, groupHinterval)), 0)) && Prims.lt(PrimChecks.math.floor(PrimChecks.math.div(2485, 2486, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 2476, 2477, 1, PrimChecks.patch.getVariable(2478, 2483, "pxcor"))), PrimChecks.validator.checkArg('/', 2485, 2486, 1, groupHinterval))), world.observer.getGlobal("num-groups"))));
}))
ProcedurePrims.defineCommand("spread-out-vertically", 2525, 2967, (function() {
  if (PrimChecks.procedure.callReporter(2577, 2583, "woman?")) {
    PrimChecks.turtle.setVariable(2594, 2601, "heading", 180);
  }
  else {
    PrimChecks.turtle.setVariable(2633, 2640, "heading", 0);
  }
  SelfManager.self().fd(4);
  while (SelfPrims._optimalAnyOther(SelfManager.self().turtlesHere())) {
    if (SelfManager.self().canMove(2)) {
      SelfManager.self()._optimalFdOne();
    }
    else {
      PrimChecks.turtle.setVariable(2843, 2847, "xcor", PrimChecks.math.minus(2853, 2854, PrimChecks.validator.checkArg('-', 2853, 2854, 1, PrimChecks.turtle.getVariable(2848, 2852, "xcor")), 1));
      PrimChecks.turtle.setVariable(2895, 2899, "ycor", 0);
      SelfManager.self().fd(4);
    }
  }
}))
ProcedurePrims.defineCommand("count-boring-groups", 2975, 3169, (function() {
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 2997, 3000, 1904, world.observer.getGlobal("group-sites")), function() {
    if (PrimChecks.procedure.callReporter(3026, 3033, "boring?")) {
      PrimChecks.patch.setVariable(3046, 3058, "plabel-color", 5);
    }
    else {
      PrimChecks.patch.setVariable(3079, 3091, "plabel-color", 9.9);
    }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2997, 3000, R); return R; }
  world.observer.setGlobal("boring-groups", PrimChecks.agentset.countWith(null, null, world.observer.getGlobal("group-sites"), function() { return Prims.equality(PrimChecks.patch.getVariable(3148, 3160, "plabel-color"), 5); }));
}))
ProcedurePrims.defineReporter("boring?", 3184, 3518, (function() {
  return PrimChecks.procedure.report(3456, 3462, Prims.equality(PrimChecks.list.length(PrimChecks.list.removeDuplicates(PrimChecks.validator.checkArg('REMOVE-DUPLICATES', 3470, 3487, 8, PrimChecks.agentset.of(SelfManager.self().turtlesHere(), function() { return PrimChecks.turtleOrLink.getVariable(3490, 3495, "color"); })))), 1));
}))
ProcedurePrims.defineCommand("update-labels", 3526, 3592, (function() {
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 3542, 3545, 1904, world.observer.getGlobal("group-sites")), function() {
    PrimChecks.patch.setVariable(3564, 3570, "plabel", PrimChecks.agentset.count(SelfManager.self().turtlesHere()));
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3542, 3545, R); return R; }
}))
ProcedurePrims.defineCommand("choose-sex", 3775, 3838, (function() {
  PrimChecks.turtleOrLink.setVariable(3813, 3818, "color", PrimChecks.list.oneOf(3819, 3825, [135, 105]));
}))
ProcedurePrims.defineReporter("woman?", 3853, 3903, (function() {
  return PrimChecks.procedure.report(3883, 3889, Prims.equality(PrimChecks.turtleOrLink.getVariable(3890, 3895, "color"), 135));
}))
world.observer.setGlobal("number", 70);
world.observer.setGlobal("tolerance", 25);
world.observer.setGlobal("num-groups", 10);