var AgentModel = tortoise_require('agentmodel');
var ColorModel = tortoise_require('engine/core/colormodel');
var Exception = tortoise_require('util/exception');
var Link = tortoise_require('engine/core/link');
var LinkSet = tortoise_require('engine/core/linkset');
var Meta = tortoise_require('meta');
var NLMath = tortoise_require('util/nlmath');
var NLType = tortoise_require('engine/core/typechecker');
var PatchSet = tortoise_require('engine/core/patchset');
var PenBundle = tortoise_require('engine/plot/pen');
var Plot = tortoise_require('engine/plot/plot');
var PlotOps = tortoise_require('engine/plot/plotops');
var StrictMath = tortoise_require('shim/strictmath');
var Tasks = tortoise_require('engine/prim/tasks');
var Turtle = tortoise_require('engine/core/turtle');
var TurtleSet = tortoise_require('engine/core/turtleset');
var notImplemented = tortoise_require('util/notimplemented');
var { DeathInterrupt, StopInterrupt } = tortoise_require('util/interrupts');

var linkShapes = {"default":{"name":"default","direction-indicator":{"name":"link direction","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":150,"x2":90,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":150,"x2":210,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"curviness":0,"lines":[{"x-offset":-0.2,"is-visible":false,"dash-pattern":[0,1]},{"x-offset":0,"is-visible":true,"dash-pattern":[1,0]},{"x-offset":0.2,"is-visible":false,"dash-pattern":[0,1]}]}};
var turtleShapes = {"default":{"name":"default","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,40,150,260],"ycors":[5,250,205,250],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"airplane":{"name":"airplane","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,135,120,120,15,15,120,135,105,120,150,180,210,165,180,285,285,180,180,165],"ycors":[0,15,60,105,165,195,180,240,270,285,270,285,270,240,180,195,165,105,60,15],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"arrow":{"name":"arrow","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,0,105,105,195,195,300],"ycors":[0,150,150,293,293,150,150],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"box":{"name":"box","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,285,285,150],"ycors":[285,225,75,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,15,150,285],"ycors":[135,75,15,75],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[15,15,150,150],"ycors":[75,225,285,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":285,"x2":150,"y2":135,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":15,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":285,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"bug":{"name":"bug","editableColorIndex":0,"rotate":true,"elements":[{"x":96,"y":182,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":127,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":75,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":100,"x2":80,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":100,"x2":220,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"butterfly":{"name":"butterfly","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,209,225,225,195,165,150],"ycors":[165,199,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,89,75,75,105,135,150],"ycors":[165,198,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[139,100,55,25,10,10,25,40,85,139],"ycors":[148,105,90,90,105,135,180,195,194,163],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[162,200,245,275,290,290,275,260,215,162],"ycors":[150,105,90,90,105,135,180,195,195,165],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,135,120,135,150,165,180,165],"ycors":[255,225,150,120,105,120,150,225],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":135,"y":90,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":105,"x2":195,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":105,"x2":105,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"car":{"name":"car","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[300,279,261,240,226,213,203,185,159,135,75,0,0,0,300,300],"ycors":[180,164,144,135,132,106,84,63,50,50,60,150,165,225,225,180],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":180,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":30,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[162,132,134,209,194,189,180],"ycors":[80,78,135,135,105,96,89],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":47,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":195,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle":{"name":"circle","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle 2":{"name":"circle 2","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"cow":{"name":"cow","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[200,197,179,177,166,140,93,78,72,49,48,37,25,25,45,103,179,198,252,272,293,285,255,242,224],"ycors":[193,249,249,196,187,189,191,179,211,209,181,149,120,89,72,84,75,76,64,81,103,121,121,118,167],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[73,86,62,48],"ycors":[210,251,249,208],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[25,16,9,23,25,39],"ycors":[114,195,204,213,200,123],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"cylinder":{"name":"cylinder","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"dot":{"name":"dot","editableColorIndex":0,"rotate":false,"elements":[{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"face happy":{"name":"face happy","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[255,239,213,191,179,203,218,225,218,203,181,194,217,240],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face neutral":{"name":"face neutral","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":7,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":60,"ymin":195,"xmax":240,"ymax":225,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face sad":{"name":"face sad","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[168,184,210,232,244,220,205,198,205,220,242,229,206,183],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"fish":{"name":"fish","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[44,21,15,0,15,0,13,20,45],"ycors":[131,87,86,120,150,180,214,212,166],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[135,119,95,76,46,60],"ycors":[195,235,218,210,204,165],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[75,83,71,86,166,135],"ycors":[45,77,103,114,78,60],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[30,151,226,280,292,292,287,270,195,151,30],"ycors":[136,77,81,119,146,160,170,195,210,212,166],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":215,"y":106,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"flag":{"name":"flag","editableColorIndex":0,"rotate":false,"elements":[{"xmin":60,"ymin":15,"xmax":75,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[90,270,90],"ycors":[150,90,30],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":75,"y1":135,"x2":90,"y2":135,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":75,"y1":45,"x2":90,"y2":45,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"flower":{"name":"flower","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[135,165,180,180,150,165,195,195,165],"ycors":[120,165,210,240,300,300,240,195,135],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"x":85,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":147,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":192,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":85,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":70,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":25,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":96,"y":51,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":113,"y":68,"diam":74,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[189,219,249,279,234],"ycors":[233,188,173,188,218],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[180,150,105,75,135],"ycors":[255,210,210,240,240],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false}]},"house":{"name":"house","editableColorIndex":0,"rotate":false,"elements":[{"xmin":45,"ymin":120,"xmax":255,"ymax":285,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":210,"xmax":180,"ymax":285,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[15,150,285],"ycors":[120,15,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":30,"y1":120,"x2":270,"y2":120,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"leaf":{"name":"leaf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,135,120,60,30,60,60,15,30,15,40,45,60,90,105,120,105,120,135,150,165,180,195,180,195,210,240,255,263,285,270,285,240,240,270,240,180,165],"ycors":[210,195,210,210,195,180,165,135,120,105,104,90,90,105,120,120,60,60,30,15,30,60,60,120,120,105,90,90,104,105,120,135,165,180,195,210,210,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,135,120,105,105,135,165,165],"ycors":[195,240,255,255,285,285,240,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"line":{"name":"line","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":300,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"line half":{"name":"line half","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"pentagon":{"name":"pentagon","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,60,240,285],"ycors":[15,120,285,285,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"person":{"name":"person","editableColorIndex":0,"rotate":false,"elements":[{"x":110,"y":5,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,120,90,105,135,150,165,195,210,180,195],"ycors":[90,195,285,300,300,225,300,300,285,195,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":127,"ymin":79,"xmax":172,"ymax":94,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[195,240,225,165],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,60,75,135],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"plant":{"name":"plant","editableColorIndex":0,"rotate":false,"elements":[{"xmin":135,"ymin":90,"xmax":165,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,210,255,225,165],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[180,135,120,180,210],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[180,210,180,120,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[105,60,45,105,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[105,135,105,45,60],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,120,150,180,165],"ycors":[90,45,15,45,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square":{"name":"square","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square 2":{"name":"square 2","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":60,"ymin":60,"xmax":240,"ymax":240,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"star":{"name":"star","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[151,185,298,207,242,151,59,94,3,116],"ycors":[1,108,108,175,282,216,282,175,108,108],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"target":{"name":"target","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":60,"y":60,"diam":180,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"tree":{"name":"tree","editableColorIndex":0,"rotate":false,"elements":[{"x":118,"y":3,"diam":94,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":195,"xmax":180,"ymax":300,"type":"rectangle","color":"rgba(157, 110, 72, 1)","filled":true,"marked":false},{"x":65,"y":21,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":116,"y":41,"diam":127,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":45,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":104,"y":74,"diam":152,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle":{"name":"triangle","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle 2":{"name":"triangle 2","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[151,225,75],"ycors":[99,223,224],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"truck":{"name":"truck","editableColorIndex":0,"rotate":false,"elements":[{"xmin":4,"ymin":45,"xmax":195,"ymax":187,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[296,296,259,244,208,207],"ycors":[193,150,134,104,104,194],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":195,"ymin":60,"xmax":195,"ymax":105,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[238,252,219,218],"ycors":[112,141,141,112],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":181,"ymin":185,"xmax":214,"ymax":194,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"turtle":{"name":"turtle","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[215,240,246,228,215,193],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[195,225,245,260,269,261,240,225,210],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[105,75,55,40,31,39,60,75,90],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[132,134,107,108,150,192,192,169,172],"ycors":[85,64,51,17,2,18,52,65,87],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[85,60,54,72,85,107],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[119,179,209,224,220,175,128,81,74,88],"ycors":[75,75,101,135,225,261,261,224,135,99],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"wheel":{"name":"wheel","editableColorIndex":0,"rotate":false,"elements":[{"x":3,"y":3,"diam":294,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":285,"x2":150,"y2":15,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":15,"y1":150,"x2":285,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":216,"y1":40,"x2":79,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":84,"x2":269,"y2":221,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":216,"x2":269,"y2":79,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":84,"y1":40,"x2":221,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"x":{"name":"x","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[270,225,30,75],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[30,75,270,225],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]}};
var modelConfig =
  (
    (typeof global !== "undefined" && global !== null) ? global :
    (typeof window !== "undefined" && window !== null) ? window :
    {}
  ).modelConfig || {};
var modelPlotOps = (typeof modelConfig.plotOps !== "undefined" && modelConfig.plotOps !== null) ? modelConfig.plotOps : {};
modelConfig.plots = [];
var workspace = tortoise_require('engine/workspace')(modelConfig)([{ name: "atoms", singular: "atom", varNames: ["fx", "fy", "vx", "vy", "sigma"] }])([], [])('breed [atoms atom]  atoms-own [   fx     ; x-component of force vector   fy     ; y-component of force vector   vx     ; x-component of velocity vector   vy     ; y-component of velocity vector   sigma  ; distance at which the interatomic potential energy between two atoms is 0. Note, this is not the same as where it is a minimum. ]  globals [   r-min       ; the distance at which the potential energy between atoms is minimum (and therefore the force they exert on each other is zero).   cutoff-dist ; beyond this distance, we treat atoms as non-interacting   dt          ; the size of the time step   Kb          ; Boltzmann\'s constant for calculating the relationship between velocity and temperature. We are using arbitrary units, so this is chosen arbitrarily. ]  ;;;;;;;;;;;;;;;;;;;;;; ;; Setup Procedures ;; ;;;;;;;;;;;;;;;;;;;;;;  to setup   clear-all   set-default-shape turtles \"circle\"   set dt .1   set Kb (1 / 500)  ; just picking a random constant for Kb that makes things work reasonably   set r-min 1   set cutoff-dist 5 * r-min   setup-atoms   init-velocity   reset-timer   reset-ticks end   to setup-atoms   create-atoms num-atoms [     set shape \"circle\"     set sigma .899 ; Makes it so 1 is about the equilibrium bond length     set size sigma     set color blue   ]    if initial-arrangement = \"Hexagonal Close Packed\" [     let l sqrt(num-atoms) ;the # of atoms in a row     let x-dist r-min     let y-dist sqrt (x-dist ^ 2 - (x-dist / 2) ^ 2)     let ypos (- l * x-dist / 2) ;the y position of the first atom     let xpos (- l * x-dist / 2) ;the x position of the first atom     let r-num 0  ;the row number     ask turtles [  ;set the atoms; positions       if xpos > (l * x-dist / 2)  [  ;condition to start a new row         set r-num r-num + 1         set xpos (- l * x-dist / 2) + (r-num mod 2) * x-dist / 2         set ypos ypos + y-dist       ]       setxy xpos ypos  ;if we are still in the same row       set xpos xpos + x-dist     ]   ]    if initial-arrangement = \"Random\" [     ask atoms [       setxy random-xcor random-ycor     ]     remove-overlap ;make sure atoms aren\'t overlapping   ]  end  to init-velocity   let v-avg sqrt( 3 * Kb * temp)   ask atoms [     let a random-float 1  ; a random amount of the total velocity to go the x direction     set vx sqrt (a * v-avg ^ 2) * positive-or-negative     set vy sqrt( v-avg ^ 2 - vx ^ 2)  * positive-or-negative   ] end   to-report positive-or-negative   report ifelse-value random 2 = 0 [-1] [1] end   to remove-overlap   ask atoms [     while [overlapping] [       setxy random-xcor random-ycor     ]   ] end  to-report overlapping   report any? other turtles in-radius r-min end   ;;;;;;;;;;;;;;;;;;;;;;;; ;; Runtime Procedures ;; ;;;;;;;;;;;;;;;;;;;;;;;;  to go    ask atoms [move] ; Moving happens before velocity and force update in accordance with velocity verlet   ask atoms [update-force-and-velocity]  ; Only update force and velocity after all atoms have moved so that all atoms feel forces based on the same state of the system    if constant-temperature? [scale-velocities]   tick-advance dt   update-plots end   to-report current-temp   report (1 / (3 * Kb)) * mean [vx ^ 2 + vy ^ 2] of atoms end   to scale-velocities   let c-temp current-temp   (ifelse     c-temp = 0 and temp != 0 [       ask atoms [init-velocity]     ]     c-temp != 0 [       let scale-factor sqrt( temp / c-temp )  ; if \"external\" temperature is higher atoms will speed up and vice versa       ask atoms [         set vx vx * scale-factor         set vy vy * scale-factor       ]     ]   ) end  to update-force-and-velocity  ; atom procedure   let new-fx 0   let new-fy 0   ask other atoms in-radius cutoff-dist [     let r distance myself     let force calc-force r     face myself     rt 180     set new-fx new-fx + (force * dx)     set new-fy new-fy + (force * dy)]    set vx velocity-verlet-velocity vx fx new-fx   set vy velocity-verlet-velocity vy fy new-fy   set fx new-fx   set fy new-fy  end  to-report calc-force [r]   ;; This procedure reports the force between two atoms using the Lennard-Jones potential.   ;; The Lennard-Jones potential gives a potential energy value. The derivative gives a force function.   ;; The force function contains many powers of (sigma / r). To compute these more efficiently, the third power   ;; is computed which is then squared and then squared again. This decreases the number of computations compared   ;; to directly computing (sigma / r) ^ 12 and substantially speeds up the model.   ;; Another way of speeding up the model is by only having atoms interact with the cutoff distance (cutoff-dist)   ;; To make it so that the force atoms feel at the cut off-dist is zero, a fact or 0.0001 is added to the end of the force function.   let third-power (sigma / r) ^ 3   let sixth-power third-power ^ 2   let twelfth-power sixth-power ^ 2   ;; Note, the Lennard-Jones potential traditionally uses the greek letter epsilon (ε) times a constant to represent bond-strength   report (-1 * bond-strength / r ) * (twelfth-power - (1 / 2) * sixth-power) + .0001 end  to move  ; atom procedure   ;; Uses velocity-verlet algorithm   set xcor velocity-verlet-pos xcor vx fx   set ycor velocity-verlet-pos ycor vy fy end  to-report velocity-verlet-pos [pos v a]  ; position, velocity and acceleration   report pos + v * dt + (1 / 2) * a * (dt ^ 2) end  to-report velocity-verlet-velocity [v a new-a]  ; position and velocity   report v + (1 / 2) * (new-a + a) * dt end   ; Copyright 2022 Uri Wilensky. ; See Info tab for full copyright and license.')([{"x":192,"y":10,"width":371,"height":372,"dimensions":{"minPxcor":-5,"maxPxcor":5,"minPycor":-5,"maxPycor":5,"patchSize":33,"wrappingAllowedInX":true,"wrappingAllowedInY":true},"fontSize":18,"updateMode":"TickBased","showTickCounter":true,"tickCounterLabel":"ticks","frameRate":30,"type":"view","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"setup\"); if (R === StopInterrupt) { return R; }","source":"setup","x":10,"y":175,"width":85,"height":33,"forever":false,"buttonKind":"Observer","disableUntilTicksStart":false,"type":"button","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","source":"go","x":105,"y":175,"width":80,"height":33,"forever":true,"buttonKind":"Observer","disableUntilTicksStart":true,"type":"button","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 50; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","variable":"num-atoms","x":10,"y":95,"width":175,"height":33,"display":"num-atoms","min":"0","max":"50","default":50,"step":"1","direction":"horizontal","type":"slider","compilation":{"success":true,"messages":[]}}, {"variable":"initial-arrangement","x":10,"y":45,"width":174,"height":45,"display":"initial-arrangement","choices":["Hexagonal Close Packed","Random"],"currentChoice":0,"type":"chooser","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 10; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 0.1; })","variable":"temp","x":10,"y":215,"width":175,"height":33,"display":"temp","min":"0.00","max":"10","default":2,"step":".1","direction":"horizontal","type":"slider","compilation":{"success":true,"messages":[]}}, {"variable":"constant-temperature?","x":10,"y":255,"width":175,"height":33,"display":"constant-temperature?","on":true,"type":"switch","compilation":{"success":true,"messages":[]}}, {"compiledSource":"ProcedurePrims.rng.withAux(function() { return PrimChecks.procedure.callReporter(49, 61, \"current-temp\"); })","source":"current-temp","x":45,"y":295,"width":87,"height":45,"display":"temperature","precision":3,"fontSize":11,"type":"monitor","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0.1; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 3; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 0.1; })","variable":"bond-strength","x":10,"y":135,"width":172,"height":33,"display":"bond-strength","min":".1","max":"3","default":1,"step":".1","direction":"horizontal","type":"slider","compilation":{"success":true,"messages":[]}}])(tortoise_require("extensions/all").porters())(["num-atoms", "initial-arrangement", "temp", "constant-temperature?", "bond-strength", "r-min", "cutoff-dist", "dt", "kb"], ["num-atoms", "initial-arrangement", "temp", "constant-temperature?", "bond-strength"], [], -5, 5, -5, 5, 33, true, true, turtleShapes, linkShapes, function(){});
var Extensions = tortoise_require('extensions/all').initialize(workspace);
var BreedManager = workspace.breedManager;
var ImportExportPrims = workspace.importExportPrims;
var InspectionPrims = workspace.inspectionPrims;
var LayoutManager = workspace.layoutManager;
var LinkPrims = workspace.linkPrims;
var ListPrims = workspace.listPrims;
var MousePrims = workspace.mousePrims;
var OutputPrims = workspace.outputPrims;
var PrimChecks = workspace.primChecks;
var Prims = workspace.prims;
var PrintPrims = workspace.printPrims;
var ProcedurePrims = workspace.procedurePrims;
var RandomPrims = workspace.randomPrims;
var SelfManager = workspace.selfManager;
var SelfPrims = workspace.selfPrims;
var StringPrims = workspace.stringPrims;
var Updater = workspace.updater;
var UserDialogPrims = workspace.userDialogPrims;
var plotManager = workspace.plotManager;
var world = workspace.world;
ProcedurePrims.defineCommand("setup", 845, 1106, (function() {
  world.clearAll();
  BreedManager.setDefaultShape(world.turtles().getSpecialName(), "circle")
  world.observer.setGlobal("dt", 0.1);
  world.observer.setGlobal("kb", PrimChecks.math.div(924, 925, 1, 500));
  world.observer.setGlobal("r-min", 1);
  world.observer.setGlobal("cutoff-dist", PrimChecks.math.mult(1040, 1041, 5, PrimChecks.validator.checkArg('*', 1040, 1041, 1, world.observer.getGlobal("r-min"))));
  var R = ProcedurePrims.callCommand("setup-atoms"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.callCommand("init-velocity"); if (R === DeathInterrupt) { return R; }
  workspace.timer.reset();
  world.ticker.reset();
}))
ProcedurePrims.defineCommand("setup-atoms", 1115, 2131, (function() {
  var R = ProcedurePrims.ask(world.turtleManager.createTurtles(world.observer.getGlobal("num-atoms"), "ATOMS"), function() {
    PrimChecks.turtleOrLink.setVariable(1162, 1167, "shape", "circle");
    PrimChecks.turtle.setVariable(1185, 1190, "sigma", 0.899);
    PrimChecks.turtle.setVariable(1257, 1261, "size", PrimChecks.turtle.getVariable(1262, 1267, "sigma"));
    PrimChecks.turtleOrLink.setVariable(1276, 1281, "color", 105);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1129, 1141, R); return R; }
  if (Prims.equality(world.observer.getGlobal("initial-arrangement"), "Hexagonal Close Packed")) {
    let l = PrimChecks.math.sqrt(1356, 1360, PrimChecks.validator.checkArg('SQRT', 1356, 1360, 1, world.observer.getGlobal("num-atoms"))); ProcedurePrims.stack().currentContext().registerStringRunVar("L", l);
    let xHdist = world.observer.getGlobal("r-min"); ProcedurePrims.stack().currentContext().registerStringRunVar("X-DIST", xHdist);
    let yHdist = PrimChecks.math.sqrt(1433, 1437, PrimChecks.math.minus(1450, 1451, PrimChecks.math.pow(1446, 1447, PrimChecks.validator.checkArg('^', 1446, 1447, 1, xHdist), 2), PrimChecks.math.pow(1465, 1466, PrimChecks.math.div(1460, 1461, PrimChecks.validator.checkArg('/', 1460, 1461, 1, xHdist), 2), 2))); ProcedurePrims.stack().currentContext().registerStringRunVar("Y-DIST", yHdist);
    let ypos = PrimChecks.math.div(1497, 1498, PrimChecks.math.mult(1488, 1489, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 1484, 1485, 1, l)), PrimChecks.validator.checkArg('*', 1488, 1489, 1, xHdist)), 2); ProcedurePrims.stack().currentContext().registerStringRunVar("YPOS", ypos);
    let xpos = PrimChecks.math.div(1563, 1564, PrimChecks.math.mult(1554, 1555, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 1550, 1551, 1, l)), PrimChecks.validator.checkArg('*', 1554, 1555, 1, xHdist)), 2); ProcedurePrims.stack().currentContext().registerStringRunVar("XPOS", xpos);
    let rHnum = 0; ProcedurePrims.stack().currentContext().registerStringRunVar("R-NUM", rHnum);
    var R = ProcedurePrims.ask(world.turtles(), function() {
      if (Prims.gt(xpos, PrimChecks.math.div(1708, 1709, PrimChecks.math.mult(1699, 1700, PrimChecks.validator.checkArg('*', 1699, 1700, 1, l), PrimChecks.validator.checkArg('*', 1699, 1700, 1, xHdist)), 2))) {
        rHnum = PrimChecks.math.plus(1771, 1772, PrimChecks.validator.checkArg('+', 1771, 1772, 1, rHnum), 1); ProcedurePrims.stack().currentContext().updateStringRunVar("R-NUM", rHnum);
        xpos = PrimChecks.math.plus(1811, 1812, PrimChecks.math.div(1806, 1807, PrimChecks.math.mult(1797, 1798, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 1793, 1794, 1, l)), PrimChecks.validator.checkArg('*', 1797, 1798, 1, xHdist)), 2), PrimChecks.math.div(1836, 1837, PrimChecks.math.mult(1827, 1828, PrimChecks.math.mod(1820, 1823, PrimChecks.validator.checkArg('MOD', 1820, 1823, 1, rHnum), 2), PrimChecks.validator.checkArg('*', 1827, 1828, 1, xHdist)), 2)); ProcedurePrims.stack().currentContext().updateStringRunVar("XPOS", xpos);
        ypos = PrimChecks.math.plus(1862, 1863, PrimChecks.validator.checkArg('+', 1862, 1863, 1, ypos), PrimChecks.validator.checkArg('+', 1862, 1863, 1, yHdist)); ProcedurePrims.stack().currentContext().updateStringRunVar("YPOS", ypos);
      }
      PrimChecks.turtle.setXY(1885, 1890, PrimChecks.validator.checkArg('SETXY', 1885, 1890, 1, xpos), PrimChecks.validator.checkArg('SETXY', 1885, 1890, 1, ypos));
      xpos = PrimChecks.math.plus(1955, 1956, PrimChecks.validator.checkArg('+', 1955, 1956, 1, xpos), PrimChecks.validator.checkArg('+', 1955, 1956, 1, xHdist)); ProcedurePrims.stack().currentContext().updateStringRunVar("XPOS", xpos);
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1639, 1642, R); return R; }
  }
  if (Prims.equality(world.observer.getGlobal("initial-arrangement"), "Random")) {
    var R = ProcedurePrims.ask(world.turtleManager.turtlesOfBreed("ATOMS"), function() {
      PrimChecks.turtle.setXY(2035, 2040, RandomPrims.randomFloatInRange(world.topology.minPxcor, world.topology.maxPxcor), RandomPrims.randomFloatInRange(world.topology.minPycor, world.topology.maxPycor));
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2017, 2020, R); return R; }
    var R = ProcedurePrims.callCommand("remove-overlap"); if (R === DeathInterrupt) { return R; }
  }
}))
ProcedurePrims.defineCommand("init-velocity", 2139, 2408, (function() {
  let vHavg = PrimChecks.math.sqrt(2165, 2169, PrimChecks.math.mult(2178, 2179, PrimChecks.math.mult(2173, 2174, 3, PrimChecks.validator.checkArg('*', 2173, 2174, 1, world.observer.getGlobal("kb"))), PrimChecks.validator.checkArg('*', 2178, 2179, 1, world.observer.getGlobal("temp")))); ProcedurePrims.stack().currentContext().registerStringRunVar("V-AVG", vHavg);
  var R = ProcedurePrims.ask(world.turtleManager.turtlesOfBreed("ATOMS"), function() {
    let a = PrimChecks.math.randomFloat(1); ProcedurePrims.stack().currentContext().registerStringRunVar("A", a);
    PrimChecks.turtle.setVariable(2296, 2298, "vx", PrimChecks.math.mult(2320, 2321, PrimChecks.math.sqrt(2299, 2303, PrimChecks.math.mult(2307, 2308, PrimChecks.validator.checkArg('*', 2307, 2308, 1, a), PrimChecks.math.pow(2315, 2316, PrimChecks.validator.checkArg('^', 2315, 2316, 1, vHavg), 2))), PrimChecks.validator.checkArg('*', 2320, 2321, 1, PrimChecks.procedure.callReporter(2322, 2342, "positive-or-negative"))));
    PrimChecks.turtle.setVariable(2351, 2353, "vy", PrimChecks.math.mult(2381, 2382, PrimChecks.math.sqrt(2354, 2358, PrimChecks.math.minus(2370, 2371, PrimChecks.math.pow(2366, 2367, PrimChecks.validator.checkArg('^', 2366, 2367, 1, vHavg), 2), PrimChecks.math.pow(2375, 2376, PrimChecks.validator.checkArg('^', 2375, 2376, 1, PrimChecks.turtle.getVariable(2372, 2374, "vx")), 2))), PrimChecks.validator.checkArg('*', 2381, 2382, 1, PrimChecks.procedure.callReporter(2383, 2403, "positive-or-negative"))));
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2188, 2191, R); return R; }
}))
ProcedurePrims.defineReporter("positive-or-negative", 2424, 2489, (function() {
  return PrimChecks.procedure.report(2447, 2453, (Prims.ifElseValueBooleanCheck(Prims.equality(RandomPrims.randomLong(2), 0)) ? -1 : 1));
}))
ProcedurePrims.defineCommand("remove-overlap", 2498, 2599, (function() {
  var R = ProcedurePrims.ask(world.turtleManager.turtlesOfBreed("ATOMS"), function() {
    while (PrimChecks.procedure.callReporter(2538, 2549, "overlapping")) {
      PrimChecks.turtle.setXY(2559, 2564, RandomPrims.randomFloatInRange(world.topology.minPxcor, world.topology.maxPxcor), RandomPrims.randomFloatInRange(world.topology.minPycor, world.topology.maxPycor));
    }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2515, 2518, R); return R; }
}))
ProcedurePrims.defineReporter("overlapping", 2614, 2670, (function() {
  return PrimChecks.procedure.report(2628, 2634, SelfPrims._optimalAnyOther(SelfManager.self().inRadius(world.turtles(), world.observer.getGlobal("r-min"))));
}))
ProcedurePrims.defineCommand("go", 2755, 3112, (function() {
  var R = ProcedurePrims.ask(world.turtleManager.turtlesOfBreed("ATOMS"), function() { var R = ProcedurePrims.callCommand("move"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2761, 2764, R); return R; }
  var R = ProcedurePrims.ask(world.turtleManager.turtlesOfBreed("ATOMS"), function() {
    var R = ProcedurePrims.callCommand("update-force-and-velocity"); if (R === DeathInterrupt) { return R; }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2865, 2868, R); return R; }
  if (world.observer.getGlobal("constant-temperature?")) {
    var R = ProcedurePrims.callCommand("scale-velocities"); if (R === DeathInterrupt) { return R; }
  }
  world.ticker.tickAdvance(world.observer.getGlobal("dt"));
  plotManager.updatePlots();
}))
ProcedurePrims.defineReporter("current-temp", 3128, 3199, (function() {
  return PrimChecks.procedure.report(3143, 3149, PrimChecks.math.mult(3165, 3166, PrimChecks.math.div(3153, 3154, 1, PrimChecks.math.mult(3158, 3159, 3, PrimChecks.validator.checkArg('*', 3158, 3159, 1, world.observer.getGlobal("kb")))), PrimChecks.list.mean(3167, 3171, PrimChecks.validator.checkArg('MEAN', 3167, 3171, 8, PrimChecks.agentset.of(world.turtleManager.turtlesOfBreed("ATOMS"), function() {
    return PrimChecks.math.plus(3180, 3181, PrimChecks.math.pow(3176, 3177, PrimChecks.validator.checkArg('^', 3176, 3177, 1, PrimChecks.turtle.getVariable(3173, 3175, "vx")), 2), PrimChecks.math.pow(3185, 3186, PrimChecks.validator.checkArg('^', 3185, 3186, 1, PrimChecks.turtle.getVariable(3182, 3184, "vy")), 2));
  })))));
}))
ProcedurePrims.defineCommand("scale-velocities", 3208, 3569, (function() {
  let cHtemp = PrimChecks.procedure.callReporter(3238, 3250, "current-temp"); ProcedurePrims.stack().currentContext().registerStringRunVar("C-TEMP", cHtemp);
  if ((Prims.equality(cHtemp, 0) && !Prims.equality(world.observer.getGlobal("temp"), 0))) {
    var R = ProcedurePrims.ask(world.turtleManager.turtlesOfBreed("ATOMS"), function() { var R = ProcedurePrims.callCommand("init-velocity"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3298, 3301, R); return R; }
  } else if (!Prims.equality(cHtemp, 0)) {
    let scaleHfactor = PrimChecks.math.sqrt(3371, 3375, PrimChecks.math.div(3382, 3383, PrimChecks.validator.checkArg('/', 3382, 3383, 1, world.observer.getGlobal("temp")), PrimChecks.validator.checkArg('/', 3382, 3383, 1, cHtemp))); ProcedurePrims.stack().currentContext().registerStringRunVar("SCALE-FACTOR", scaleHfactor);
    var R = ProcedurePrims.ask(world.turtleManager.turtlesOfBreed("ATOMS"), function() {
      PrimChecks.turtle.setVariable(3497, 3499, "vx", PrimChecks.math.mult(3503, 3504, PrimChecks.validator.checkArg('*', 3503, 3504, 1, PrimChecks.turtle.getVariable(3500, 3502, "vx")), PrimChecks.validator.checkArg('*', 3503, 3504, 1, scaleHfactor)));
      PrimChecks.turtle.setVariable(3530, 3532, "vy", PrimChecks.math.mult(3536, 3537, PrimChecks.validator.checkArg('*', 3536, 3537, 1, PrimChecks.turtle.getVariable(3533, 3535, "vy")), PrimChecks.validator.checkArg('*', 3536, 3537, 1, scaleHfactor)));
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3473, 3476, R); return R; }
  }
}))
ProcedurePrims.defineCommand("update-force-and-velocity", 3577, 3976, (function() {
  let newHfx = 0; ProcedurePrims.stack().currentContext().registerStringRunVar("NEW-FX", newHfx);
  let newHfy = 0; ProcedurePrims.stack().currentContext().registerStringRunVar("NEW-FY", newHfy);
  var R = ProcedurePrims.ask(SelfPrims.other(SelfManager.self().inRadius(world.turtleManager.turtlesOfBreed("ATOMS"), world.observer.getGlobal("cutoff-dist"))), function() {
    let r = SelfManager.self().distance(SelfManager.myself()); ProcedurePrims.stack().currentContext().registerStringRunVar("R", r);
    let force = PrimChecks.procedure.callReporter(3733, 3743, "calc-force", r); ProcedurePrims.stack().currentContext().registerStringRunVar("FORCE", force);
    SelfManager.self().face(PrimChecks.validator.checkArg('FACE', 3750, 3754, 768, SelfManager.myself()));
    SelfManager.self().right(180);
    newHfx = PrimChecks.math.plus(3795, 3796, PrimChecks.validator.checkArg('+', 3795, 3796, 1, newHfx), PrimChecks.math.mult(3804, 3805, PrimChecks.validator.checkArg('*', 3804, 3805, 1, force), SelfManager.self().dx())); ProcedurePrims.stack().currentContext().updateStringRunVar("NEW-FX", newHfx);
    newHfy = PrimChecks.math.plus(3832, 3833, PrimChecks.validator.checkArg('+', 3832, 3833, 1, newHfy), PrimChecks.math.mult(3841, 3842, PrimChecks.validator.checkArg('*', 3841, 3842, 1, force), SelfManager.self().dy())); ProcedurePrims.stack().currentContext().updateStringRunVar("NEW-FY", newHfy);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3653, 3656, R); return R; }
  PrimChecks.turtle.setVariable(3855, 3857, "vx", PrimChecks.procedure.callReporter(3858, 3882, "velocity-verlet-velocity", PrimChecks.turtle.getVariable(3883, 3885, "vx"), PrimChecks.turtle.getVariable(3886, 3888, "fx"), newHfx));
  PrimChecks.turtle.setVariable(3902, 3904, "vy", PrimChecks.procedure.callReporter(3905, 3929, "velocity-verlet-velocity", PrimChecks.turtle.getVariable(3930, 3932, "vy"), PrimChecks.turtle.getVariable(3933, 3935, "fy"), newHfy));
  PrimChecks.turtle.setVariable(3949, 3951, "fx", newHfx);
  PrimChecks.turtle.setVariable(3965, 3967, "fy", newHfy);
}))
ProcedurePrims.defineReporter("calc-force", 3991, 5078, (function(r) {
  let thirdHpower = PrimChecks.math.pow(4788, 4789, PrimChecks.math.div(4783, 4784, PrimChecks.validator.checkArg('/', 4783, 4784, 1, PrimChecks.turtle.getVariable(4777, 4782, "sigma")), PrimChecks.validator.checkArg('/', 4783, 4784, 1, r)), 3); ProcedurePrims.stack().currentContext().registerStringRunVar("THIRD-POWER", thirdHpower);
  let sixthHpower = PrimChecks.math.pow(4822, 4823, PrimChecks.validator.checkArg('^', 4822, 4823, 1, thirdHpower), 2); ProcedurePrims.stack().currentContext().registerStringRunVar("SIXTH-POWER", sixthHpower);
  let twelfthHpower = PrimChecks.math.pow(4858, 4859, PrimChecks.validator.checkArg('^', 4858, 4859, 1, sixthHpower), 2); ProcedurePrims.stack().currentContext().registerStringRunVar("TWELFTH-POWER", twelfthHpower);
  return PrimChecks.procedure.report(4995, 5001, PrimChecks.math.plus(5070, 5071, PrimChecks.math.mult(5028, 5029, PrimChecks.math.div(5022, 5023, PrimChecks.math.mult(5006, 5007, -1, PrimChecks.validator.checkArg('*', 5006, 5007, 1, world.observer.getGlobal("bond-strength"))), PrimChecks.validator.checkArg('/', 5022, 5023, 1, r)), PrimChecks.math.minus(5045, 5046, PrimChecks.validator.checkArg('-', 5045, 5046, 1, twelfthHpower), PrimChecks.math.mult(5055, 5056, PrimChecks.math.div(5050, 5051, 1, 2), PrimChecks.validator.checkArg('*', 5055, 5056, 1, sixthHpower)))), 0.0001));
}))
ProcedurePrims.defineCommand("move", 5086, 5229, (function() {
  PrimChecks.turtle.setVariable(5151, 5155, "xcor", PrimChecks.procedure.callReporter(5156, 5175, "velocity-verlet-pos", PrimChecks.turtle.getVariable(5176, 5180, "xcor"), PrimChecks.turtle.getVariable(5181, 5183, "vx"), PrimChecks.turtle.getVariable(5184, 5186, "fx")));
  PrimChecks.turtle.setVariable(5193, 5197, "ycor", PrimChecks.procedure.callReporter(5198, 5217, "velocity-verlet-pos", PrimChecks.turtle.getVariable(5218, 5222, "ycor"), PrimChecks.turtle.getVariable(5223, 5225, "vy"), PrimChecks.turtle.getVariable(5226, 5228, "fy")));
}))
ProcedurePrims.defineReporter("velocity-verlet-pos", 5244, 5360, (function(pos, v, a) {
  return PrimChecks.procedure.report(5315, 5321, PrimChecks.math.plus(5335, 5336, PrimChecks.math.plus(5326, 5327, PrimChecks.validator.checkArg('+', 5326, 5327, 1, pos), PrimChecks.math.mult(5330, 5331, PrimChecks.validator.checkArg('*', 5330, 5331, 1, v), PrimChecks.validator.checkArg('*', 5330, 5331, 1, world.observer.getGlobal("dt")))), PrimChecks.math.mult(5349, 5350, PrimChecks.math.mult(5345, 5346, PrimChecks.math.div(5340, 5341, 1, 2), PrimChecks.validator.checkArg('*', 5345, 5346, 1, a)), PrimChecks.math.pow(5355, 5356, PrimChecks.validator.checkArg('^', 5355, 5356, 1, world.observer.getGlobal("dt")), 2))));
}))
ProcedurePrims.defineReporter("velocity-verlet-velocity", 5375, 5477, (function(v, a, newHa) {
  return PrimChecks.procedure.report(5439, 5445, PrimChecks.math.plus(5448, 5449, PrimChecks.validator.checkArg('+', 5448, 5449, 1, v), PrimChecks.math.mult(5472, 5473, PrimChecks.math.mult(5458, 5459, PrimChecks.math.div(5453, 5454, 1, 2), PrimChecks.math.plus(5467, 5468, PrimChecks.validator.checkArg('+', 5467, 5468, 1, newHa), PrimChecks.validator.checkArg('+', 5467, 5468, 1, a))), PrimChecks.validator.checkArg('*', 5472, 5473, 1, world.observer.getGlobal("dt")))));
}))
world.observer.setGlobal("num-atoms", 50);
world.observer.setGlobal("initial-arrangement", "Hexagonal Close Packed");
world.observer.setGlobal("temp", 2);
world.observer.setGlobal("constant-temperature?", true);
world.observer.setGlobal("bond-strength", 1);