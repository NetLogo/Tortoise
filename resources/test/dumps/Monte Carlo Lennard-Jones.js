var AgentModel = tortoise_require('agentmodel');
var ColorModel = tortoise_require('engine/core/colormodel');
var Exception = tortoise_require('util/exception');
var Link = tortoise_require('engine/core/link');
var LinkSet = tortoise_require('engine/core/linkset');
var Meta = tortoise_require('meta');
var NLMath = tortoise_require('util/nlmath');
var NLType = tortoise_require('engine/core/typechecker');
var PatchSet = tortoise_require('engine/core/patchset');
var PenBundle = tortoise_require('engine/plot/pen');
var Plot = tortoise_require('engine/plot/plot');
var PlotOps = tortoise_require('engine/plot/plotops');
var StrictMath = tortoise_require('shim/strictmath');
var Tasks = tortoise_require('engine/prim/tasks');
var Turtle = tortoise_require('engine/core/turtle');
var TurtleSet = tortoise_require('engine/core/turtleset');
var notImplemented = tortoise_require('util/notimplemented');
var { DeathInterrupt, StopInterrupt } = tortoise_require('util/interrupts');

var linkShapes = {"default":{"name":"default","direction-indicator":{"name":"link direction","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":150,"x2":90,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":150,"x2":210,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"curviness":0,"lines":[{"x-offset":-0.2,"is-visible":false,"dash-pattern":[0,1]},{"x-offset":0,"is-visible":true,"dash-pattern":[1,0]},{"x-offset":0.2,"is-visible":false,"dash-pattern":[0,1]}]}};
var turtleShapes = {"default":{"name":"default","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,40,150,260],"ycors":[5,250,205,250],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"airplane":{"name":"airplane","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,135,120,120,15,15,120,135,105,120,150,180,210,165,180,285,285,180,180,165],"ycors":[0,15,60,105,165,195,180,240,270,285,270,285,270,240,180,195,165,105,60,15],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"arrow":{"name":"arrow","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,0,105,105,195,195,300],"ycors":[0,150,150,293,293,150,150],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"box":{"name":"box","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,285,285,150],"ycors":[285,225,75,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,15,150,285],"ycors":[135,75,15,75],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[15,15,150,150],"ycors":[75,225,285,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":285,"x2":150,"y2":135,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":15,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":285,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"bug":{"name":"bug","editableColorIndex":0,"rotate":true,"elements":[{"x":96,"y":182,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":127,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":75,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":100,"x2":80,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":100,"x2":220,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"butterfly":{"name":"butterfly","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,209,225,225,195,165,150],"ycors":[165,199,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,89,75,75,105,135,150],"ycors":[165,198,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[139,100,55,25,10,10,25,40,85,139],"ycors":[148,105,90,90,105,135,180,195,194,163],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[162,200,245,275,290,290,275,260,215,162],"ycors":[150,105,90,90,105,135,180,195,195,165],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,135,120,135,150,165,180,165],"ycors":[255,225,150,120,105,120,150,225],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":135,"y":90,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":105,"x2":195,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":105,"x2":105,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"car":{"name":"car","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[300,279,261,240,226,213,203,185,159,135,75,0,0,0,300,300],"ycors":[180,164,144,135,132,106,84,63,50,50,60,150,165,225,225,180],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":180,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":30,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[162,132,134,209,194,189,180],"ycors":[80,78,135,135,105,96,89],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":47,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":195,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle":{"name":"circle","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle 2":{"name":"circle 2","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"cow":{"name":"cow","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[200,197,179,177,166,140,93,78,72,49,48,37,25,25,45,103,179,198,252,272,293,285,255,242,224],"ycors":[193,249,249,196,187,189,191,179,211,209,181,149,120,89,72,84,75,76,64,81,103,121,121,118,167],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[73,86,62,48],"ycors":[210,251,249,208],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[25,16,9,23,25,39],"ycors":[114,195,204,213,200,123],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"cylinder":{"name":"cylinder","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"dot":{"name":"dot","editableColorIndex":0,"rotate":false,"elements":[{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"face happy":{"name":"face happy","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[255,239,213,191,179,203,218,225,218,203,181,194,217,240],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face neutral":{"name":"face neutral","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":7,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":60,"ymin":195,"xmax":240,"ymax":225,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face sad":{"name":"face sad","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[168,184,210,232,244,220,205,198,205,220,242,229,206,183],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"fish":{"name":"fish","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[44,21,15,0,15,0,13,20,45],"ycors":[131,87,86,120,150,180,214,212,166],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[135,119,95,76,46,60],"ycors":[195,235,218,210,204,165],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[75,83,71,86,166,135],"ycors":[45,77,103,114,78,60],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[30,151,226,280,292,292,287,270,195,151,30],"ycors":[136,77,81,119,146,160,170,195,210,212,166],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":215,"y":106,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"flag":{"name":"flag","editableColorIndex":0,"rotate":false,"elements":[{"xmin":60,"ymin":15,"xmax":75,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[90,270,90],"ycors":[150,90,30],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":75,"y1":135,"x2":90,"y2":135,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":75,"y1":45,"x2":90,"y2":45,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"flower":{"name":"flower","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[135,165,180,180,150,165,195,195,165],"ycors":[120,165,210,240,300,300,240,195,135],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"x":85,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":147,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":192,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":85,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":70,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":25,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":96,"y":51,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":113,"y":68,"diam":74,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[189,219,249,279,234],"ycors":[233,188,173,188,218],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[180,150,105,75,135],"ycors":[255,210,210,240,240],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false}]},"house":{"name":"house","editableColorIndex":0,"rotate":false,"elements":[{"xmin":45,"ymin":120,"xmax":255,"ymax":285,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":210,"xmax":180,"ymax":285,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[15,150,285],"ycors":[120,15,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":30,"y1":120,"x2":270,"y2":120,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"leaf":{"name":"leaf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,135,120,60,30,60,60,15,30,15,40,45,60,90,105,120,105,120,135,150,165,180,195,180,195,210,240,255,263,285,270,285,240,240,270,240,180,165],"ycors":[210,195,210,210,195,180,165,135,120,105,104,90,90,105,120,120,60,60,30,15,30,60,60,120,120,105,90,90,104,105,120,135,165,180,195,210,210,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,135,120,105,105,135,165,165],"ycors":[195,240,255,255,285,285,240,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"line":{"name":"line","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":300,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"line half":{"name":"line half","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"pentagon":{"name":"pentagon","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,60,240,285],"ycors":[15,120,285,285,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"person":{"name":"person","editableColorIndex":0,"rotate":false,"elements":[{"x":110,"y":5,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,120,90,105,135,150,165,195,210,180,195],"ycors":[90,195,285,300,300,225,300,300,285,195,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":127,"ymin":79,"xmax":172,"ymax":94,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[195,240,225,165],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,60,75,135],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"plant":{"name":"plant","editableColorIndex":0,"rotate":false,"elements":[{"xmin":135,"ymin":90,"xmax":165,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,210,255,225,165],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[180,135,120,180,210],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[180,210,180,120,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[105,60,45,105,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[105,135,105,45,60],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,120,150,180,165],"ycors":[90,45,15,45,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"sheep":{"name":"sheep","editableColorIndex":15,"rotate":false,"elements":[{"x":203,"y":65,"diam":88,"type":"circle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"x":70,"y":65,"diam":162,"type":"circle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"x":150,"y":105,"diam":120,"type":"circle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xcors":[218,240,255,278],"ycors":[120,165,165,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":false},{"x":214,"y":72,"diam":67,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":false},{"xmin":164,"ymin":223,"xmax":179,"ymax":298,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xcors":[45,30,30,15,45],"ycors":[285,285,240,195,210],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"x":3,"y":83,"diam":150,"type":"circle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xmin":65,"ymin":221,"xmax":80,"ymax":296,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xcors":[195,210,210,240,195],"ycors":[285,285,240,210,210],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xcors":[276,285,302,294],"ycors":[85,105,99,83],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":false},{"xcors":[219,210,193,201],"ycors":[85,105,99,83],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":false}]},"square":{"name":"square","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square 2":{"name":"square 2","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":60,"ymin":60,"xmax":240,"ymax":240,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"star":{"name":"star","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[151,185,298,207,242,151,59,94,3,116],"ycors":[1,108,108,175,282,216,282,175,108,108],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"target":{"name":"target","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":60,"y":60,"diam":180,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"tree":{"name":"tree","editableColorIndex":0,"rotate":false,"elements":[{"x":118,"y":3,"diam":94,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":195,"xmax":180,"ymax":300,"type":"rectangle","color":"rgba(157, 110, 72, 1)","filled":true,"marked":false},{"x":65,"y":21,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":116,"y":41,"diam":127,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":45,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":104,"y":74,"diam":152,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle":{"name":"triangle","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle 2":{"name":"triangle 2","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[151,225,75],"ycors":[99,223,224],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"truck":{"name":"truck","editableColorIndex":0,"rotate":false,"elements":[{"xmin":4,"ymin":45,"xmax":195,"ymax":187,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[296,296,259,244,208,207],"ycors":[193,150,134,104,104,194],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":195,"ymin":60,"xmax":195,"ymax":105,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[238,252,219,218],"ycors":[112,141,141,112],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":181,"ymin":185,"xmax":214,"ymax":194,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"turtle":{"name":"turtle","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[215,240,246,228,215,193],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[195,225,245,260,269,261,240,225,210],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[105,75,55,40,31,39,60,75,90],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[132,134,107,108,150,192,192,169,172],"ycors":[85,64,51,17,2,18,52,65,87],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[85,60,54,72,85,107],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[119,179,209,224,220,175,128,81,74,88],"ycors":[75,75,101,135,225,261,261,224,135,99],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"wheel":{"name":"wheel","editableColorIndex":0,"rotate":false,"elements":[{"x":3,"y":3,"diam":294,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":285,"x2":150,"y2":15,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":15,"y1":150,"x2":285,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":216,"y1":40,"x2":79,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":84,"x2":269,"y2":221,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":216,"x2":269,"y2":79,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":84,"y1":40,"x2":221,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"wolf":{"name":"wolf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[253,245,245],"ycors":[133,131,133],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[2,13,30,38,38,20,20,27,38,40,31,31,60,68,75,66,65,82,84,100,103,77,79,100,98,119,143,160,166,172,173,167,160,154,169,178,186,198,200,217,219,207,195,192,210,227,242,259,284,277,293,299,297,273,270],"ycors":[194,197,191,193,205,226,257,265,266,260,253,230,206,198,209,228,243,261,268,267,261,239,231,207,196,201,202,195,210,213,238,251,248,265,264,247,240,260,271,271,262,258,230,198,184,164,144,145,151,141,140,134,127,119,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[-1,14,36,40,53,82,134,159,188,227,236,238,268,269,281,269,269],"ycors":[195,180,166,153,140,131,133,126,115,108,102,98,86,92,87,103,113],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"x":{"name":"x","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[270,225,30,75],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[30,75,270,225],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]}};
var modelConfig =
  (
    (typeof global !== "undefined" && global !== null) ? global :
    (typeof window !== "undefined" && window !== null) ? window :
    {}
  ).modelConfig || {};
var modelPlotOps = (typeof modelConfig.plotOps !== "undefined" && modelConfig.plotOps !== null) ? modelConfig.plotOps : {};
modelConfig.plots = [(function() {
  var name    = 'energy per particle';
  var plotOps = (typeof modelPlotOps[name] !== "undefined" && modelPlotOps[name] !== null) ? modelPlotOps[name] : new PlotOps(function() {}, function() {}, function() {}, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; });
  var pens    = [new PenBundle.Pen('default', plotOps.makePenOps, false, new PenBundle.State(0, 1, PenBundle.DisplayMode.Line), function() {}, function() {
    return ProcedurePrims.runInPlotContext('energy per particle', 'default', function() {
      if (Prims.gt(world.ticker.tickCount(), 3)) {
        plotManager.plotValue(PrimChecks.math.div(63, 64, PrimChecks.validator.checkArg('/', 63, 64, 1, world.observer.getGlobal("v-total")), PrimChecks.validator.checkArg('/', 63, 64, 1, world.observer.getGlobal("num-atoms"))));
      };
    });
  })];
  var setup   = function() {};
  var update  = function() {};
  return new Plot(name, pens, plotOps, "", "", false, true, true, 0, 10, -2, 2, setup, update);
})()];
var workspace = tortoise_require('engine/workspace')(modelConfig)([])([], [])('globals [   max-move-dist   cutoff-dist   v-total   eps   total-move-attempts   total-successful-moves   diameter   pot-offset ; This offsets the LJ potential so that it is 0 at the cutoff distance   current-move-attempts   current-successful-moves ]  to setup   clear-all   reset-ticks   set eps 1   ;Set the diameter of particles based on density   set diameter sqrt(density * world-width * world-height / num-atoms)   set max-move-dist diameter   set cutoff-dist 2.5 * diameter   set pot-offset (- (4 * ((diameter / cutoff-dist) ^ 12 - (diameter / cutoff-dist) ^ 6)))   set v-total calc-v-total  ;calculate the initial energy   create-turtles num-atoms [     set shape \"circle\"     set size diameter     set color blue   ]   setup-atoms end  to go   ;Each tick, attempt N moves. On average, every particle moves each tick   repeat num-atoms [     ask one-of turtles [       attempt-move     ]   ]    ;tune the move distance to adjust the acceptance rate every NUM-ATOMS ticks   if ticks mod num-atoms = 1 [     tune-acceptance-rate   ]    tick end  to attempt-move   set total-move-attempts total-move-attempts + 1  ;the is the total running average   set current-move-attempts current-move-attempts + 1 ;this is just since the last max-move-distance adjustment   let v-old calc-v; calculate current energy   let delta-x (random-float 2 * max-move-dist) - max-move-dist  ; pick random x distance   let delta-y (random-float 2 * max-move-dist) - max-move-dist ; pick random y distance   setxy (xcor + delta-x) (ycor + delta-y) ;move the random x and y distances   let v-new calc-v ;Calculate the new energy    let delta-v v-new - v-old   ifelse (v-new < v-old) or (random-float 1 < exp( - delta-v / temperature) ) [     set total-successful-moves total-successful-moves + 1   ;the is the total running average     set current-successful-moves current-successful-moves + 1   ;this is just since the last max-move-distance adjustment     set v-total v-total + delta-v   ] [     setxy (xcor - delta-x) (ycor - delta-y) ;reset position   ] end  to-report calc-v-total   report sum [ calc-v ] of turtles / 2 ;divide by two because each particle has been counted twice end  to-report calc-v   let v 0    ask other turtles in-radius cutoff-dist [     let rsquare (distance myself) ^ 2     let dsquare diameter * diameter     let attract-term dsquare ^ 3 / rsquare ^ 3     let repel-term attract-term * attract-term     ;NOTE could do this a little faster by attract-term * (attract-term -1)     let vi 4 * eps * (repel-term - attract-term) + pot-offset     set v v + vi   ]   report v end  to-report accept-rate   report current-successful-moves / current-move-attempts end  to tune-acceptance-rate   ifelse accept-rate < 0.5 [     set max-move-dist max-move-dist * .95   ] [     set max-move-dist max-move-dist * 1.05     if max-move-dist > diameter [       set max-move-dist diameter     ]   ]   set current-successful-moves 0   set current-move-attempts 0 end  to-report energy-per-particle   report v-total / num-atoms end  ;*********setup procedures*************  to setup-atoms   if initial-config = \"HCP\" [     let l sqrt(num-atoms) ;the # of atoms in a row     let row-dist (2 ^ (1 / 6)) * diameter ;this is the distance with minimum energy     let ypos (- l * row-dist / 2) ;the y position of the first atom     let xpos (- l * row-dist / 2) ;the x position of the first atom     let r-num 0  ;the row number     ask turtles [  ;set the atoms; positions       if xpos > (l * row-dist / 2)  [  ;condition to start a new row         set r-num r-num + 1         set xpos (- l * row-dist / 2) + (r-num mod 2) * row-dist / 2         set ypos ypos + row-dist       ]       setxy xpos ypos  ;if we are still in the same row       set xpos xpos + row-dist     ]   ]    if initial-config = \"random\" [     ask turtles [       setxy random-xcor random-ycor     ]     remove-overlap ;make sure atoms aren\'t overlapping   ] end  to remove-overlap   let r-min 0.7 * diameter   ask turtles [     while [overlapping r-min] [       setxy random-xcor random-ycor     ]   ] end  to-report overlapping [r-min]   report any? other turtles in-radius r-min end   ; Copyright 2015 Uri Wilensky. ; See Info tab for full copyright and license.')([{"x":305,"y":7,"width":524,"height":524,"dimensions":{"minPxcor":-16,"maxPxcor":16,"minPycor":-16,"maxPycor":16,"patchSize":15.76,"wrappingAllowedInX":true,"wrappingAllowedInY":true},"fontSize":10,"updateMode":"TickBased","showTickCounter":true,"tickCounterLabel":"ticks","frameRate":30,"type":"view","compilation":{"success":true,"messages":[]}}, {"display":"1","x":5,"y":7,"width":20,"height":36,"fontSize":30,"markdown":false,"textColorLight":-2674135,"textColorDark":-1,"backgroundLight":0,"backgroundDark":0,"type":"textBox","compilation":{"success":true,"messages":[]}}, {"display":"Model starting point. You can choose the number of atoms, the density and the initial configuration (random or hexagonally-close-packed)","x":30,"y":7,"width":270,"height":55,"fontSize":11,"markdown":false,"textColorLight":-16777216,"textColorDark":-1,"backgroundLight":0,"backgroundDark":0,"type":"textBox","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 1; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 1000; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"num-atoms","x":30,"y":70,"width":250,"height":50,"oldSize":false,"display":"num-atoms","min":"1","max":"1000","default":250,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0.01; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 0.6; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 0.01; })","type":"slider","variable":"density","x":30,"y":125,"width":250,"height":50,"oldSize":false,"display":"density","min":"0.01","max":".6","default":0.25,"step":".01","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"variable":"initial-config","x":30,"y":180,"width":250,"height":60,"oldSize":false,"display":"initial-config","choices":["HCP","random"],"currentChoice":0,"type":"chooser","compilation":{"success":true,"messages":[]}}, {"display":"2","x":5,"y":242,"width":24,"height":36,"fontSize":30,"markdown":false,"textColorLight":-2674135,"textColorDark":-1,"backgroundLight":0,"backgroundDark":0,"type":"textBox","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"setup\"); if (R === StopInterrupt) { return R; }","type":"button","source":"setup","x":32,"y":245,"width":75,"height":35,"oldSize":false,"forever":false,"buttonKind":"Observer","disableUntilTicksStart":false,"compilation":{"success":true,"messages":[]}}, {"display":"Temperature can be adjusted during model run ","x":30,"y":290,"width":260,"height":20,"fontSize":11,"markdown":false,"textColorLight":-16777216,"textColorDark":-1,"backgroundLight":0,"backgroundDark":0,"type":"textBox","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0.01; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 2; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 0.01; })","type":"slider","variable":"temperature","x":30,"y":315,"width":250,"height":50,"oldSize":false,"display":"temperature","min":".01","max":"2","default":1.1,"step":".01","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","type":"button","source":"go","x":200,"y":245,"width":80,"height":35,"oldSize":false,"forever":true,"buttonKind":"Observer","disableUntilTicksStart":true,"compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","type":"button","source":"go","x":110,"y":245,"width":85,"height":35,"oldSize":false,"display":"go-once","forever":false,"buttonKind":"Observer","disableUntilTicksStart":true,"compilation":{"success":true,"messages":[]}}, {"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {}","compiledPens":[{"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {   return ProcedurePrims.runInPlotContext('energy per particle', 'default', function() {     if (Prims.gt(world.ticker.tickCount(), 3)) {       plotManager.plotValue(PrimChecks.math.div(63, 64, PrimChecks.validator.checkArg('/', 63, 64, 1, world.observer.getGlobal(\"v-total\")), PrimChecks.validator.checkArg('/', 63, 64, 1, world.observer.getGlobal(\"num-atoms\"))));     };   }); }","type":"pen","display":"default","interval":1,"mode":0,"color":-16777216,"inLegend":true,"setupCode":"","updateCode":"if ticks > 3 [   plot v-total / num-atoms ]","compilation":{"success":true,"messages":[]}}],"type":"plot","display":"energy per particle","x":30,"y":370,"width":255,"height":160,"oldSize":false,"xmin":0,"xmax":10,"ymin":-2,"ymax":2,"autoPlotX":true,"autoPlotY":true,"legendOn":false,"setupCode":"","updateCode":"","pens":[{"display":"default","interval":1,"mode":0,"color":-16777216,"inLegend":true,"setupCode":"","updateCode":"if ticks > 3 [   plot v-total / num-atoms ]","type":"pen"}],"compilation":{"success":true,"messages":[]}}])(tortoise_require("extensions/all").porters())(["num-atoms", "density", "initial-config", "temperature", "max-move-dist", "cutoff-dist", "v-total", "eps", "total-move-attempts", "total-successful-moves", "diameter", "pot-offset", "current-move-attempts", "current-successful-moves"], ["num-atoms", "density", "initial-config", "temperature"], [], -16, 16, -16, 16, 15.76, true, true, turtleShapes, linkShapes, function(){});
var Extensions = tortoise_require('extensions/all').initialize(workspace);
var BreedManager = workspace.breedManager;
var ImportExportPrims = workspace.importExportPrims;
var InspectionPrims = workspace.inspectionPrims;
var LayoutManager = workspace.layoutManager;
var LinkPrims = workspace.linkPrims;
var ListPrims = workspace.listPrims;
var MousePrims = workspace.mousePrims;
var OutputPrims = workspace.outputPrims;
var PrimChecks = workspace.primChecks;
var Prims = workspace.prims;
var PrintPrims = workspace.printPrims;
var ProcedurePrims = workspace.procedurePrims;
var RandomPrims = workspace.randomPrims;
var SelfManager = workspace.selfManager;
var SelfPrims = workspace.selfPrims;
var StringPrims = workspace.stringPrims;
var Updater = workspace.updater;
var UserDialogPrims = workspace.userDialogPrims;
var plotManager = workspace.plotManager;
var world = workspace.world;
ProcedurePrims.defineCommand("setup", 255, 740, (function() {
  world.clearAll();
  world.ticker.reset();
  world.observer.setGlobal("eps", 1);
  world.observer.setGlobal("diameter", PrimChecks.math.sqrt(364, 368, PrimChecks.math.div(406, 407, PrimChecks.math.mult(391, 392, PrimChecks.math.mult(377, 378, PrimChecks.validator.checkArg('*', 377, 378, 1, world.observer.getGlobal("density")), world.topology.width), world.topology.height), PrimChecks.validator.checkArg('/', 406, 407, 1, world.observer.getGlobal("num-atoms")))));
  world.observer.setGlobal("max-move-dist", world.observer.getGlobal("diameter"));
  world.observer.setGlobal("cutoff-dist", PrimChecks.math.mult(470, 471, 2.5, PrimChecks.validator.checkArg('*', 470, 471, 1, world.observer.getGlobal("diameter"))));
  world.observer.setGlobal("pot-offset", PrimChecks.math.unaryminus(PrimChecks.math.mult(504, 505, 4, PrimChecks.math.minus(537, 538, PrimChecks.math.pow(532, 533, PrimChecks.math.div(517, 518, PrimChecks.validator.checkArg('/', 517, 518, 1, world.observer.getGlobal("diameter")), PrimChecks.validator.checkArg('/', 517, 518, 1, world.observer.getGlobal("cutoff-dist"))), 12), PrimChecks.math.pow(564, 565, PrimChecks.math.div(549, 550, PrimChecks.validator.checkArg('/', 549, 550, 1, world.observer.getGlobal("diameter")), PrimChecks.validator.checkArg('/', 549, 550, 1, world.observer.getGlobal("cutoff-dist"))), 6)))));
  world.observer.setGlobal("v-total", PrimChecks.procedure.callReporter(585, 597, "calc-v-total"));
  var R = ProcedurePrims.ask(world.turtleManager.createTurtles(world.observer.getGlobal("num-atoms"), ""), function() {
    PrimChecks.turtleOrLink.setVariable(666, 671, "shape", "circle");
    PrimChecks.turtle.setVariable(689, 693, "size", world.observer.getGlobal("diameter"));
    PrimChecks.turtleOrLink.setVariable(711, 716, "color", 105);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(631, 645, R); return R; }
  var R = ProcedurePrims.callCommand("setup-atoms"); if (R === DeathInterrupt) { return R; }
}))
ProcedurePrims.defineCommand("go", 748, 1047, (function() {
  for (let _index_827_833 = 0, _repeatcount_827_833 = StrictMath.floor(world.observer.getGlobal("num-atoms")); _index_827_833 < _repeatcount_827_833; _index_827_833++) {
    var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 850, 853, 1904, PrimChecks.list.oneOf(854, 860, world.turtles())), function() { var R = ProcedurePrims.callCommand("attempt-move"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(850, 853, R); return R; }
  }
  if (Prims.equality(PrimChecks.math.mod(990, 993, world.ticker.tickCount(), PrimChecks.validator.checkArg('MOD', 990, 993, 1, world.observer.getGlobal("num-atoms"))), 1)) {
    var R = ProcedurePrims.callCommand("tune-acceptance-rate"); if (R === DeathInterrupt) { return R; }
  }
  world.ticker.tick();
}))
ProcedurePrims.defineCommand("attempt-move", 1055, 2038, (function() {
  world.observer.setGlobal("total-move-attempts", PrimChecks.math.plus(1114, 1115, PrimChecks.validator.checkArg('+', 1114, 1115, 1, world.observer.getGlobal("total-move-attempts")), 1));
  world.observer.setGlobal("current-move-attempts", PrimChecks.math.plus(1203, 1204, PrimChecks.validator.checkArg('+', 1203, 1204, 1, world.observer.getGlobal("current-move-attempts")), 1));
  let vHold = PrimChecks.procedure.callReporter(1277, 1283, "calc-v"); ProcedurePrims.stack().currentContext().registerStringRunVar("V-OLD", vHold);
  let deltaHx = PrimChecks.math.minus(1357, 1358, PrimChecks.math.mult(1340, 1341, PrimChecks.math.randomFloat(2), PrimChecks.validator.checkArg('*', 1340, 1341, 1, world.observer.getGlobal("max-move-dist"))), PrimChecks.validator.checkArg('-', 1357, 1358, 1, world.observer.getGlobal("max-move-dist"))); ProcedurePrims.stack().currentContext().registerStringRunVar("DELTA-X", deltaHx);
  let deltaHy = PrimChecks.math.minus(1446, 1447, PrimChecks.math.mult(1429, 1430, PrimChecks.math.randomFloat(2), PrimChecks.validator.checkArg('*', 1429, 1430, 1, world.observer.getGlobal("max-move-dist"))), PrimChecks.validator.checkArg('-', 1446, 1447, 1, world.observer.getGlobal("max-move-dist"))); ProcedurePrims.stack().currentContext().registerStringRunVar("DELTA-Y", deltaHy);
  PrimChecks.turtle.setXY(1489, 1494, PrimChecks.math.plus(1501, 1502, PrimChecks.validator.checkArg('+', 1501, 1502, 1, PrimChecks.turtle.getVariable(1496, 1500, "xcor")), PrimChecks.validator.checkArg('+', 1501, 1502, 1, deltaHx)), PrimChecks.math.plus(1518, 1519, PrimChecks.validator.checkArg('+', 1518, 1519, 1, PrimChecks.turtle.getVariable(1513, 1517, "ycor")), PrimChecks.validator.checkArg('+', 1518, 1519, 1, deltaHy)));
  let vHnew = PrimChecks.procedure.callReporter(1576, 1582, "calc-v"); ProcedurePrims.stack().currentContext().registerStringRunVar("V-NEW", vHnew);
  let deltaHv = PrimChecks.math.minus(1630, 1631, PrimChecks.validator.checkArg('-', 1630, 1631, 1, vHnew), PrimChecks.validator.checkArg('-', 1630, 1631, 1, vHold)); ProcedurePrims.stack().currentContext().registerStringRunVar("DELTA-V", deltaHv);
  if ((Prims.lt(vHnew, vHold) || Prims.lt(PrimChecks.math.randomFloat(1), PrimChecks.math.exp(1684, 1687, PrimChecks.math.div(1699, 1700, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 1689, 1690, 1, deltaHv)), PrimChecks.validator.checkArg('/', 1699, 1700, 1, world.observer.getGlobal("temperature"))))))) {
    world.observer.setGlobal("total-successful-moves", PrimChecks.math.plus(1772, 1773, PrimChecks.validator.checkArg('+', 1772, 1773, 1, world.observer.getGlobal("total-successful-moves")), 1));
    world.observer.setGlobal("current-successful-moves", PrimChecks.math.plus(1870, 1871, PrimChecks.validator.checkArg('+', 1870, 1871, 1, world.observer.getGlobal("current-successful-moves")), 1));
    world.observer.setGlobal("v-total", PrimChecks.math.plus(1958, 1959, PrimChecks.validator.checkArg('+', 1958, 1959, 1, world.observer.getGlobal("v-total")), PrimChecks.validator.checkArg('+', 1958, 1959, 1, deltaHv)));
  }
  else {
    PrimChecks.turtle.setXY(1978, 1983, PrimChecks.math.minus(1990, 1991, PrimChecks.validator.checkArg('-', 1990, 1991, 1, PrimChecks.turtle.getVariable(1985, 1989, "xcor")), PrimChecks.validator.checkArg('-', 1990, 1991, 1, deltaHx)), PrimChecks.math.minus(2007, 2008, PrimChecks.validator.checkArg('-', 2007, 2008, 1, PrimChecks.turtle.getVariable(2002, 2006, "ycor")), PrimChecks.validator.checkArg('-', 2007, 2008, 1, deltaHy)));
  }
}))
ProcedurePrims.defineReporter("calc-v-total", 2053, 2165, (function() {
  return PrimChecks.procedure.report(2068, 2074, PrimChecks.math.div(2101, 2102, PrimChecks.list.sum(2075, 2078, PrimChecks.validator.checkArg('SUM', 2075, 2078, 8, PrimChecks.agentset.of(world.turtles(), function() { return PrimChecks.procedure.callReporter(2081, 2087, "calc-v"); }))), 2));
}))
ProcedurePrims.defineReporter("calc-v", 2180, 2580, (function() {
  let v = 0; ProcedurePrims.stack().currentContext().registerStringRunVar("V", v);
  var R = ProcedurePrims.ask(SelfPrims.other(SelfManager.self().inRadius(world.turtles(), world.observer.getGlobal("cutoff-dist"))), function() {
    let rsquare = PrimChecks.math.pow(2276, 2277, SelfManager.self().distance(SelfManager.myself()), 2); ProcedurePrims.stack().currentContext().registerStringRunVar("RSQUARE", rsquare);
    let dsquare = PrimChecks.math.mult(2305, 2306, PrimChecks.validator.checkArg('*', 2305, 2306, 1, world.observer.getGlobal("diameter")), PrimChecks.validator.checkArg('*', 2305, 2306, 1, world.observer.getGlobal("diameter"))); ProcedurePrims.stack().currentContext().registerStringRunVar("DSQUARE", dsquare);
    let attractHterm = PrimChecks.math.div(2349, 2350, PrimChecks.math.pow(2345, 2346, PrimChecks.validator.checkArg('^', 2345, 2346, 1, dsquare), 3), PrimChecks.math.pow(2359, 2360, PrimChecks.validator.checkArg('^', 2359, 2360, 1, rsquare), 3)); ProcedurePrims.stack().currentContext().registerStringRunVar("ATTRACT-TERM", attractHterm);
    let repelHterm = PrimChecks.math.mult(2395, 2396, PrimChecks.validator.checkArg('*', 2395, 2396, 1, attractHterm), PrimChecks.validator.checkArg('*', 2395, 2396, 1, attractHterm)); ProcedurePrims.stack().currentContext().registerStringRunVar("REPEL-TERM", repelHterm);
    let vi = PrimChecks.math.plus(2535, 2536, PrimChecks.math.mult(2505, 2506, PrimChecks.math.mult(2499, 2500, 4, PrimChecks.validator.checkArg('*', 2499, 2500, 1, world.observer.getGlobal("eps"))), PrimChecks.math.minus(2519, 2520, PrimChecks.validator.checkArg('-', 2519, 2520, 1, repelHterm), PrimChecks.validator.checkArg('-', 2519, 2520, 1, attractHterm))), PrimChecks.validator.checkArg('+', 2535, 2536, 1, world.observer.getGlobal("pot-offset"))); ProcedurePrims.stack().currentContext().registerStringRunVar("VI", vi);
    v = PrimChecks.math.plus(2560, 2561, PrimChecks.validator.checkArg('+', 2560, 2561, 1, v), PrimChecks.validator.checkArg('+', 2560, 2561, 1, vi)); ProcedurePrims.stack().currentContext().updateStringRunVar("V", v);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2200, 2203, R); return R; }
  return PrimChecks.procedure.report(2571, 2577, v);
}))
ProcedurePrims.defineReporter("accept-rate", 2595, 2665, (function() {
  return PrimChecks.procedure.report(2609, 2615, PrimChecks.math.div(2641, 2642, PrimChecks.validator.checkArg('/', 2641, 2642, 1, world.observer.getGlobal("current-successful-moves")), PrimChecks.validator.checkArg('/', 2641, 2642, 1, world.observer.getGlobal("current-move-attempts"))));
}))
ProcedurePrims.defineCommand("tune-acceptance-rate", 2673, 2954, (function() {
  if (Prims.lt(PrimChecks.procedure.callReporter(2703, 2714, "accept-rate"), 0.5)) {
    world.observer.setGlobal("max-move-dist", PrimChecks.math.mult(2759, 2760, PrimChecks.validator.checkArg('*', 2759, 2760, 1, world.observer.getGlobal("max-move-dist")), 0.95));
  }
  else {
    world.observer.setGlobal("max-move-dist", PrimChecks.math.mult(2807, 2808, PrimChecks.validator.checkArg('*', 2807, 2808, 1, world.observer.getGlobal("max-move-dist")), 1.05));
    if (Prims.gt(world.observer.getGlobal("max-move-dist"), world.observer.getGlobal("diameter"))) {
      world.observer.setGlobal("max-move-dist", world.observer.getGlobal("diameter"));
    }
  }
  world.observer.setGlobal("current-successful-moves", 0);
  world.observer.setGlobal("current-move-attempts", 0);
}))
ProcedurePrims.defineReporter("energy-per-particle", 2969, 3018, (function() {
  return PrimChecks.procedure.report(2991, 2997, PrimChecks.math.div(3006, 3007, PrimChecks.validator.checkArg('/', 3006, 3007, 1, world.observer.getGlobal("v-total")), PrimChecks.validator.checkArg('/', 3006, 3007, 1, world.observer.getGlobal("num-atoms"))));
}))
ProcedurePrims.defineCommand("setup-atoms", 3067, 3915, (function() {
  if (Prims.equality(world.observer.getGlobal("initial-config"), "HCP")) {
    let l = PrimChecks.math.sqrt(3119, 3123, PrimChecks.validator.checkArg('SQRT', 3119, 3123, 1, world.observer.getGlobal("num-atoms"))); ProcedurePrims.stack().currentContext().registerStringRunVar("L", l);
    let rowHdist = PrimChecks.math.mult(3191, 3192, PrimChecks.math.pow(3180, 3181, 2, PrimChecks.math.div(3185, 3186, 1, 6)), PrimChecks.validator.checkArg('*', 3191, 3192, 1, world.observer.getGlobal("diameter"))); ProcedurePrims.stack().currentContext().registerStringRunVar("ROW-DIST", rowHdist);
    let ypos = PrimChecks.math.div(3273, 3274, PrimChecks.math.mult(3262, 3263, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 3258, 3259, 1, l)), PrimChecks.validator.checkArg('*', 3262, 3263, 1, rowHdist)), 2); ProcedurePrims.stack().currentContext().registerStringRunVar("YPOS", ypos);
    let xpos = PrimChecks.math.div(3341, 3342, PrimChecks.math.mult(3330, 3331, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 3326, 3327, 1, l)), PrimChecks.validator.checkArg('*', 3330, 3331, 1, rowHdist)), 2); ProcedurePrims.stack().currentContext().registerStringRunVar("XPOS", xpos);
    let rHnum = 0; ProcedurePrims.stack().currentContext().registerStringRunVar("R-NUM", rHnum);
    var R = ProcedurePrims.ask(world.turtles(), function() {
      if (Prims.gt(xpos, PrimChecks.math.div(3488, 3489, PrimChecks.math.mult(3477, 3478, PrimChecks.validator.checkArg('*', 3477, 3478, 1, l), PrimChecks.validator.checkArg('*', 3477, 3478, 1, rowHdist)), 2))) {
        rHnum = PrimChecks.math.plus(3551, 3552, PrimChecks.validator.checkArg('+', 3551, 3552, 1, rHnum), 1); ProcedurePrims.stack().currentContext().updateStringRunVar("R-NUM", rHnum);
        xpos = PrimChecks.math.plus(3593, 3594, PrimChecks.math.div(3588, 3589, PrimChecks.math.mult(3577, 3578, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 3573, 3574, 1, l)), PrimChecks.validator.checkArg('*', 3577, 3578, 1, rowHdist)), 2), PrimChecks.math.div(3620, 3621, PrimChecks.math.mult(3609, 3610, PrimChecks.math.mod(3602, 3605, PrimChecks.validator.checkArg('MOD', 3602, 3605, 1, rHnum), 2), PrimChecks.validator.checkArg('*', 3609, 3610, 1, rowHdist)), 2)); ProcedurePrims.stack().currentContext().updateStringRunVar("XPOS", xpos);
        ypos = PrimChecks.math.plus(3646, 3647, PrimChecks.validator.checkArg('+', 3646, 3647, 1, ypos), PrimChecks.validator.checkArg('+', 3646, 3647, 1, rowHdist)); ProcedurePrims.stack().currentContext().updateStringRunVar("YPOS", ypos);
      }
      PrimChecks.turtle.setXY(3671, 3676, PrimChecks.validator.checkArg('SETXY', 3671, 3676, 1, xpos), PrimChecks.validator.checkArg('SETXY', 3671, 3676, 1, ypos));
      xpos = PrimChecks.math.plus(3741, 3742, PrimChecks.validator.checkArg('+', 3741, 3742, 1, xpos), PrimChecks.validator.checkArg('+', 3741, 3742, 1, rowHdist)); ProcedurePrims.stack().currentContext().updateStringRunVar("XPOS", xpos);
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3417, 3420, R); return R; }
  }
  if (Prims.equality(world.observer.getGlobal("initial-config"), "random")) {
    var R = ProcedurePrims.ask(world.turtles(), function() {
      PrimChecks.turtle.setXY(3820, 3825, RandomPrims.randomFloatInRange(world.topology.minPxcor, world.topology.maxPxcor), RandomPrims.randomFloatInRange(world.topology.minPycor, world.topology.maxPycor));
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3800, 3803, R); return R; }
    var R = ProcedurePrims.callCommand("remove-overlap"); if (R === DeathInterrupt) { return R; }
  }
}))
ProcedurePrims.defineCommand("remove-overlap", 3923, 4059, (function() {
  let rHmin = PrimChecks.math.mult(3954, 3955, 0.7, PrimChecks.validator.checkArg('*', 3954, 3955, 1, world.observer.getGlobal("diameter"))); ProcedurePrims.stack().currentContext().registerStringRunVar("R-MIN", rHmin);
  var R = ProcedurePrims.ask(world.turtles(), function() {
    while (PrimChecks.procedure.callReporter(3992, 4003, "overlapping", rHmin)) {
      PrimChecks.turtle.setXY(4019, 4024, RandomPrims.randomFloatInRange(world.topology.minPxcor, world.topology.maxPxcor), RandomPrims.randomFloatInRange(world.topology.minPycor, world.topology.maxPycor));
    }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3967, 3970, R); return R; }
}))
ProcedurePrims.defineReporter("overlapping", 4074, 4138, (function(rHmin) {
  return PrimChecks.procedure.report(4096, 4102, SelfPrims._optimalAnyOther(SelfManager.self().inRadius(world.turtles(), rHmin)));
}))
world.observer.setGlobal("num-atoms", 250);
world.observer.setGlobal("density", 0.25);
world.observer.setGlobal("initial-config", "HCP");
world.observer.setGlobal("temperature", 1.1);