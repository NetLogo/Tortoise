var AgentModel = tortoise_require('agentmodel');
var ColorModel = tortoise_require('engine/core/colormodel');
var Exception = tortoise_require('util/exception');
var Link = tortoise_require('engine/core/link');
var LinkSet = tortoise_require('engine/core/linkset');
var Meta = tortoise_require('meta');
var NLMath = tortoise_require('util/nlmath');
var NLType = tortoise_require('engine/core/typechecker');
var PatchSet = tortoise_require('engine/core/patchset');
var PenBundle = tortoise_require('engine/plot/pen');
var Plot = tortoise_require('engine/plot/plot');
var PlotOps = tortoise_require('engine/plot/plotops');
var StrictMath = tortoise_require('shim/strictmath');
var Tasks = tortoise_require('engine/prim/tasks');
var Turtle = tortoise_require('engine/core/turtle');
var TurtleSet = tortoise_require('engine/core/turtleset');
var notImplemented = tortoise_require('util/notimplemented');
var { DeathInterrupt, StopInterrupt } = tortoise_require('util/interrupts');

var linkShapes = {"default":{"name":"default","direction-indicator":{"name":"link direction","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":150,"x2":90,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":150,"x2":210,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"curviness":0,"lines":[{"x-offset":-0.2,"is-visible":false,"dash-pattern":[0,1]},{"x-offset":0,"is-visible":true,"dash-pattern":[1,0]},{"x-offset":0.2,"is-visible":false,"dash-pattern":[0,1]}]}};
var turtleShapes = {"default":{"name":"default","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,40,150,260],"ycors":[5,250,205,250],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"airplane":{"name":"airplane","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,135,120,120,15,15,120,135,105,120,150,180,210,165,180,285,285,180,180,165],"ycors":[0,15,60,105,165,195,180,240,270,285,270,285,270,240,180,195,165,105,60,15],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"arrow":{"name":"arrow","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,0,105,105,195,195,300],"ycors":[0,150,150,293,293,150,150],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"box":{"name":"box","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,285,285,150],"ycors":[285,225,75,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,15,150,285],"ycors":[135,75,15,75],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[15,15,150,150],"ycors":[75,225,285,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":285,"x2":150,"y2":135,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":15,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":285,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"bug":{"name":"bug","editableColorIndex":0,"rotate":true,"elements":[{"x":96,"y":182,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":127,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":75,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":100,"x2":80,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":100,"x2":220,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"butterfly":{"name":"butterfly","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,209,225,225,195,165,150],"ycors":[165,199,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,89,75,75,105,135,150],"ycors":[165,198,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[139,100,55,25,10,10,25,40,85,139],"ycors":[148,105,90,90,105,135,180,195,194,163],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[162,200,245,275,290,290,275,260,215,162],"ycors":[150,105,90,90,105,135,180,195,195,165],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,135,120,135,150,165,180,165],"ycors":[255,225,150,120,105,120,150,225],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":135,"y":90,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":105,"x2":195,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":105,"x2":105,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"car":{"name":"car","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[300,279,261,240,226,213,203,185,159,135,75,0,0,0,300,300],"ycors":[180,164,144,135,132,106,84,63,50,50,60,150,165,225,225,180],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":180,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":30,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[162,132,134,209,194,189,180],"ycors":[80,78,135,135,105,96,89],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":47,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":195,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle":{"name":"circle","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle 2":{"name":"circle 2","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"cow":{"name":"cow","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[200,197,179,177,166,140,93,78,72,49,48,37,25,25,45,103,179,198,252,272,293,285,255,242,224],"ycors":[193,249,249,196,187,189,191,179,211,209,181,149,120,89,72,84,75,76,64,81,103,121,121,118,167],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[73,86,62,48],"ycors":[210,251,249,208],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[25,16,9,23,25,39],"ycors":[114,195,204,213,200,123],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"cylinder":{"name":"cylinder","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"dot":{"name":"dot","editableColorIndex":0,"rotate":false,"elements":[{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"face happy":{"name":"face happy","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[255,239,213,191,179,203,218,225,218,203,181,194,217,240],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face neutral":{"name":"face neutral","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":7,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":60,"ymin":195,"xmax":240,"ymax":225,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face sad":{"name":"face sad","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[168,184,210,232,244,220,205,198,205,220,242,229,206,183],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"fish":{"name":"fish","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[44,21,15,0,15,0,13,20,45],"ycors":[131,87,86,120,150,180,214,212,166],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[135,119,95,76,46,60],"ycors":[195,235,218,210,204,165],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[75,83,71,86,166,135],"ycors":[45,77,103,114,78,60],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[30,151,226,280,292,292,287,270,195,151,30],"ycors":[136,77,81,119,146,160,170,195,210,212,166],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":215,"y":106,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"flag":{"name":"flag","editableColorIndex":0,"rotate":false,"elements":[{"xmin":60,"ymin":15,"xmax":75,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[90,270,90],"ycors":[150,90,30],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":75,"y1":135,"x2":90,"y2":135,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":75,"y1":45,"x2":90,"y2":45,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"flower":{"name":"flower","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[135,165,180,180,150,165,195,195,165],"ycors":[120,165,210,240,300,300,240,195,135],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"x":85,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":147,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":192,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":85,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":70,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":25,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":96,"y":51,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":113,"y":68,"diam":74,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[189,219,249,279,234],"ycors":[233,188,173,188,218],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[180,150,105,75,135],"ycors":[255,210,210,240,240],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false}]},"frame":{"name":"frame","editableColorIndex":0,"rotate":false,"elements":[{"xmin":-1,"ymin":1,"xmax":15,"ymax":301,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":1,"ymin":-5,"xmax":303,"ymax":16,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":285,"ymin":0,"xmax":315,"ymax":305,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":0,"ymin":285,"xmax":297,"ymax":299,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":13,"ymin":10,"xmax":30,"ymax":292,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":9,"ymin":31,"xmax":11,"ymax":32,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":16,"ymin":8,"xmax":293,"ymax":30,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":270,"ymin":23,"xmax":299,"ymax":292,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":14,"ymin":273,"xmax":15,"ymax":274,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":15,"ymin":272,"xmax":16,"ymax":272,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":15,"ymin":271,"xmax":290,"ymax":289,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"house":{"name":"house","editableColorIndex":0,"rotate":false,"elements":[{"xmin":45,"ymin":120,"xmax":255,"ymax":285,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":210,"xmax":180,"ymax":285,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[15,150,285],"ycors":[120,15,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":30,"y1":120,"x2":270,"y2":120,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"leaf":{"name":"leaf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,135,120,60,30,60,60,15,30,15,40,45,60,90,105,120,105,120,135,150,165,180,195,180,195,210,240,255,263,285,270,285,240,240,270,240,180,165],"ycors":[210,195,210,210,195,180,165,135,120,105,104,90,90,105,120,120,60,60,30,15,30,60,60,120,120,105,90,90,104,105,120,135,165,180,195,210,210,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,135,120,105,105,135,165,165],"ycors":[195,240,255,255,285,285,240,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"line":{"name":"line","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":300,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"line half":{"name":"line half","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"pentagon":{"name":"pentagon","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,60,240,285],"ycors":[15,120,285,285,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"person":{"name":"person","editableColorIndex":0,"rotate":false,"elements":[{"x":110,"y":5,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,120,90,105,135,150,165,195,210,180,195],"ycors":[90,195,285,300,300,225,300,300,285,195,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":127,"ymin":79,"xmax":172,"ymax":94,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[195,240,225,165],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,60,75,135],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"plant":{"name":"plant","editableColorIndex":0,"rotate":false,"elements":[{"xmin":135,"ymin":90,"xmax":165,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,210,255,225,165],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[180,135,120,180,210],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[180,210,180,120,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[105,60,45,105,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[105,135,105,45,60],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,120,150,180,165],"ycors":[90,45,15,45,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square":{"name":"square","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square 2":{"name":"square 2","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":60,"ymin":60,"xmax":240,"ymax":240,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"star":{"name":"star","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[151,185,298,207,242,151,59,94,3,116],"ycors":[1,108,108,175,282,216,282,175,108,108],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"target":{"name":"target","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":60,"y":60,"diam":180,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"tree":{"name":"tree","editableColorIndex":0,"rotate":false,"elements":[{"x":118,"y":3,"diam":94,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":195,"xmax":180,"ymax":300,"type":"rectangle","color":"rgba(157, 110, 72, 1)","filled":true,"marked":false},{"x":65,"y":21,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":116,"y":41,"diam":127,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":45,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":104,"y":74,"diam":152,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle":{"name":"triangle","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle 2":{"name":"triangle 2","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[151,225,75],"ycors":[99,223,224],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"truck":{"name":"truck","editableColorIndex":0,"rotate":false,"elements":[{"xmin":4,"ymin":45,"xmax":195,"ymax":187,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[296,296,259,244,208,207],"ycors":[193,150,134,104,104,194],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":195,"ymin":60,"xmax":195,"ymax":105,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[238,252,219,218],"ycors":[112,141,141,112],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":181,"ymin":185,"xmax":214,"ymax":194,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"turtle":{"name":"turtle","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[215,240,246,228,215,193],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[195,225,245,260,269,261,240,225,210],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[105,75,55,40,31,39,60,75,90],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[132,134,107,108,150,192,192,169,172],"ycors":[85,64,51,17,2,18,52,65,87],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[85,60,54,72,85,107],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[119,179,209,224,220,175,128,81,74,88],"ycors":[75,75,101,135,225,261,261,224,135,99],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"wheel":{"name":"wheel","editableColorIndex":0,"rotate":false,"elements":[{"x":3,"y":3,"diam":294,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":285,"x2":150,"y2":15,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":15,"y1":150,"x2":285,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":216,"y1":40,"x2":79,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":84,"x2":269,"y2":221,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":216,"x2":269,"y2":79,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":84,"y1":40,"x2":221,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"x":{"name":"x","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[270,225,30,75],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[30,75,270,225],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]}};
var modelConfig =
  (
    (typeof global !== "undefined" && global !== null) ? global :
    (typeof window !== "undefined" && window !== null) ? window :
    {}
  ).modelConfig || {};
var modelPlotOps = (typeof modelConfig.plotOps !== "undefined" && modelConfig.plotOps !== null) ? modelConfig.plotOps : {};
modelConfig.plots = [];
var workspace = tortoise_require('engine/workspace')(modelConfig)([{ name: "column-counters", singular: "column-counter", varNames: ["my-column", "my-column-patches"] }, { name: "frames", singular: "frame", varNames: [] }, { name: "messengers", singular: "messenger", varNames: [] }])([], [])('globals [   time-to-stop?   ;; boolean that discontinues run when columns reach to top   the-messenger       ;; holds identity of the single turtle of breed \'messengers\'                   ;; (see EXTENDING THE MODEL)   max-y-histogram ;; how high the columns can rise (or how far up the yellow goes) ]  breed [ column-counters column-counter ] ;; they keep track of their respective histogram columns breed [ frames frame ]    ;; square frames that indicate events in histogram columns breed [ messengers messenger  ]  ;; carry the random value to its column                   ;; (currently just one single messenger implemented)   column-counters-own [   ;; if you choose a sample-space 7 then you get 7 column-counters   ;; and their respective my-columns will be 1 thru 7   my-column   ;; each column-counter holds all patches that are in its column as an agentset   my-column-patches ]  to setup   clear-all   ;; computes the height the user has requested so as to get the value that makes sense   ;; in this model because the histogram grows from the negative-y values and not from 0   set max-y-histogram (min-pycor + height)   create-histogram-width   setup-column-counters   set time-to-stop? false   reset-ticks end  to create-histogram-width   ask patches   [     ;; deals with both even and odd sample-spaces     ;; this is one way of centering the histogram.     ;; that means that the \'50\' of the red-green slider     ;; will always be aligned with the middle of the histogram     ifelse (pxcor >= (- sample-space) / 2) and (pxcor < sample-space / 2)             and (pycor < max-y-histogram) ;; this shapes the top of the yellow zone     [ set pcolor yellow ]     [ set pcolor brown ]   ] end      ;; column-counters are turtles who form \"place-holders\" so that     ;; the messenger will \"know\" where to take its value.     ;; they are like the values on the x-axis of your sample space. to setup-column-counters   ask patches with [(pycor = min-pycor) ;; bottom of the view                        and pcolor = yellow]      ;; and in the histogram band width   [     sprout-column-counters 1     [       hide-turtle  ;; it is nice to see them but probably visually redundant       set heading 0       ;; this assigns a column name to column-counters that       ;; corresponds with the parameter setting of sample-space       set my-column floor (pxcor + sample-space / 2 + 1)       set my-column-patches patches with [ pxcor = [pxcor] of myself ]     ]   ]  end  to go ;; forever button   if time-to-stop? [ stop ]   select-random-value   send-messenger-to-its-column   ifelse colors?     [ paint ]     [ ask patches with [pcolor != brown] [ set pcolor yellow ]]   tick end      ;; \'messenger\' is a turtle who carries the random value     ;; on its back as a label to select-random-value   ask patch 0 (max-y-histogram + 4)   [     sprout-messengers 1     [       set shape \"default\"       set color black       set heading 180       set size 12       set label 1 + random sample-space       ;; currently there is just one messenger, so we assign it to a \'messenger\'       ;; variable. this will save time when the model run. if the user chooses       ;; to add more messengers then this shortcut may have to be done away with       set the-messenger self     ]   ] end      ;; messenger is the dart-shaped large turtle that carries the random value     ;; on its back. it takes this value directly to the appropriate column to send-messenger-to-its-column                 ;; \'it\' holds the column-counter who is master of the                 ;; column towards which the messenger orients and advances                 ;; to dispatch its event   let it one-of column-counters with [ my-column = [label] of the-messenger ]    ask the-messenger   [     face it     ;; keep advancing until you\'re all but covering your destination     while [ distance it > 3 ]     [       fd 1 ;; to the patch above you to prepare for next event       display     ]     die   ]   ask it   [ create-frame     fd 1     ;; if the histogram has become too high, we just stop.     ;; this could be extended so as to have the whole population     ;; of events collapse down one patch, as in Galton Box     if ycor = max-y-histogram [ set time-to-stop? true ]   ]  end  ;; make the square frames that look like accumulating cubes to create-frame ;; turtle procedure   ask patch-here   [     sprout-frames 1     [       set shape \"frame\"       set color black     ]   ] end      ;; patches are red if they are as far to the right within the sample-space     ;; as indexed by the red-green slider; otherwise, the are green     ;; Note that currently there is no rounding -- just a cut-off contour. to paint   ask column-counters   [     ifelse my-column <= (red-green * sample-space / 100)     [ ask my-column-patches with [ pycor < [pycor] of myself ] [ set pcolor red ] ]     [ ask my-column-patches with [ pycor < [pycor] of myself ] [ set pcolor green ] ]   ] end  ;; reports the percentage of red patches out of all patches that have frames ;; so we know what percent of events are to the left of the cut off line to-report %-red   report precision (100 * count patches with [pcolor = red] / count frames) 2 end  to-report %-full   report precision ( 100 * (count frames ) / ( height * sample-space ) ) 2  end  ;; biggest-gap is the greatest difference in height between all columns to-report biggest-gap   let max-column max [count my-column-patches with [pycor < [pycor] of myself] ] of column-counters    let min-column min [count my-column-patches with [pycor < [pycor] of myself] ] of column-counters    report max-column - min-column end   ; Copyright 2004 Uri Wilensky. ; See Info tab for full copyright and license.')([{"x":178,"y":10,"width":715,"height":436,"dimensions":{"minPxcor":-50,"maxPxcor":50,"minPycor":-30,"maxPycor":30,"patchSize":7,"wrappingAllowedInX":false,"wrappingAllowedInY":false},"fontSize":10,"updateMode":"TickBased","showTickCounter":true,"tickCounterLabel":"ticks","frameRate":30,"type":"view","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 100; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","variable":"red-green","x":173,"y":469,"width":717,"height":33,"display":"red-green","min":"0","max":"100","default":50,"step":"1","units":"%","direction":"horizontal","type":"slider","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"setup\"); if (R === StopInterrupt) { return R; }","source":"setup","x":12,"y":109,"width":63,"height":33,"display":"Setup","forever":false,"buttonKind":"Observer","disableUntilTicksStart":false,"type":"button","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","source":"go","x":78,"y":109,"width":63,"height":33,"display":"Go","forever":true,"buttonKind":"Observer","disableUntilTicksStart":true,"type":"button","compilation":{"success":true,"messages":[]}}, {"variable":"colors?","x":33,"y":266,"width":90,"height":33,"display":"colors?","on":true,"type":"switch","compilation":{"success":true,"messages":[]}}, {"compiledSource":"ProcedurePrims.rng.withAux(function() { return PrimChecks.procedure.callReporter(49, 54, \"%-red\"); })","source":"%-red","x":32,"y":212,"width":92,"height":45,"display":"%-red","precision":3,"fontSize":11,"type":"monitor","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 1; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 100; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","variable":"sample-space","x":1,"y":36,"width":172,"height":33,"display":"sample-space","min":"1","max":"100","default":100,"step":"1","direction":"horizontal","type":"slider","compilation":{"success":true,"messages":[]}}, {"compiledSource":"ProcedurePrims.rng.withAux(function() { return PrimChecks.procedure.callReporter(49, 60, \"biggest-gap\"); })","source":"biggest-gap","x":32,"y":150,"width":92,"height":45,"display":"biggest gap","precision":3,"fontSize":11,"type":"monitor","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 1; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 50; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","variable":"height","x":1,"y":70,"width":172,"height":33,"display":"height","min":"1","max":"50","default":30,"step":"1","direction":"horizontal","type":"slider","compilation":{"success":true,"messages":[]}}, {"compiledSource":"ProcedurePrims.rng.withAux(function() { return PrimChecks.procedure.callReporter(49, 55, \"%-full\"); })","source":"%-full","x":47,"y":320,"width":57,"height":45,"precision":3,"fontSize":11,"type":"monitor","compilation":{"success":true,"messages":[]}}])(tortoise_require("extensions/all").porters())(["red-green", "colors?", "sample-space", "height", "time-to-stop?", "the-messenger", "max-y-histogram"], ["red-green", "colors?", "sample-space", "height"], [], -50, 50, -30, 30, 7, false, false, turtleShapes, linkShapes, function(){});
var Extensions = tortoise_require('extensions/all').initialize(workspace);
var BreedManager = workspace.breedManager;
var ImportExportPrims = workspace.importExportPrims;
var InspectionPrims = workspace.inspectionPrims;
var LayoutManager = workspace.layoutManager;
var LinkPrims = workspace.linkPrims;
var ListPrims = workspace.listPrims;
var MousePrims = workspace.mousePrims;
var OutputPrims = workspace.outputPrims;
var PrimChecks = workspace.primChecks;
var Prims = workspace.prims;
var PrintPrims = workspace.printPrims;
var ProcedurePrims = workspace.procedurePrims;
var RandomPrims = workspace.randomPrims;
var SelfManager = workspace.selfManager;
var SelfPrims = workspace.selfPrims;
var StringPrims = workspace.stringPrims;
var Updater = workspace.updater;
var UserDialogPrims = workspace.userDialogPrims;
var plotManager = workspace.plotManager;
var world = workspace.world;
ProcedurePrims.defineCommand("setup", 894, 1221, (function() {
  world.clearAll();
  world.observer.setGlobal("max-y-histogram", PrimChecks.math.plus(1122, 1123, world.topology.minPycor, PrimChecks.validator.checkArg('+', 1122, 1123, 1, world.observer.getGlobal("height"))));
  var R = ProcedurePrims.callCommand("create-histogram-width"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.callCommand("setup-column-counters"); if (R === DeathInterrupt) { return R; }
  world.observer.setGlobal("time-to-stop?", false);
  world.ticker.reset();
}))
ProcedurePrims.defineCommand("create-histogram-width", 1229, 1703, (function() {
  var R = ProcedurePrims.ask(world.patches(), function() {
    if (((Prims.gte(PrimChecks.patch.getVariable(1502, 1507, "pxcor"), PrimChecks.math.div(1528, 1529, PrimChecks.math.unaryminus(PrimChecks.validator.checkArg('-', 1512, 1513, 1, world.observer.getGlobal("sample-space"))), 2)) && Prims.lt(PrimChecks.patch.getVariable(1538, 1543, "pxcor"), PrimChecks.math.div(1559, 1560, PrimChecks.validator.checkArg('/', 1559, 1560, 1, world.observer.getGlobal("sample-space")), 2))) && Prims.lt(PrimChecks.patch.getVariable(1581, 1586, "pycor"), world.observer.getGlobal("max-y-histogram")))) {
      PrimChecks.patch.setVariable(1658, 1664, "pcolor", 45);
    }
    else {
      PrimChecks.patch.setVariable(1684, 1690, "pcolor", 35);
    }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1254, 1257, R); return R; }
}))
ProcedurePrims.defineCommand("setup-column-counters", 1905, 2472, (function() {
  var R = ProcedurePrims.ask(PrimChecks.agentset.with(1941, 1945, world.patches(), function() {
    return (Prims.equality(PrimChecks.patch.getVariable(1948, 1953, "pycor"), world.topology.minPycor) && Prims.equality(PrimChecks.patch.getVariable(2016, 2022, "pcolor"), 45));
  }), function() {
    var R = ProcedurePrims.ask(SelfManager.self().sprout(1, "COLUMN-COUNTERS"), function() {
      SelfManager.self().hideTurtle(true);
      PrimChecks.turtle.setVariable(2199, 2206, "heading", 0);
      PrimChecks.turtle.setVariable(2343, 2352, "my-column", PrimChecks.math.floor(PrimChecks.math.plus(2385, 2386, PrimChecks.math.plus(2366, 2367, PrimChecks.validator.checkArg('+', 2366, 2367, 1, PrimChecks.patch.getVariable(2360, 2365, "pxcor")), PrimChecks.math.div(2381, 2382, PrimChecks.validator.checkArg('/', 2381, 2382, 1, world.observer.getGlobal("sample-space")), 2)), 1)));
      PrimChecks.turtle.setVariable(2400, 2417, "my-column-patches", PrimChecks.agentset.with(2426, 2430, world.patches(), function() {
        return Prims.equality(PrimChecks.patch.getVariable(2433, 2438, "pxcor"), PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(2442, 2447, "pxcor"); }));
      }));
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2081, 2103, R); return R; }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1929, 1932, R); return R; }
}))
ProcedurePrims.defineCommand("go", 2480, 2684, (function() {
  if (world.observer.getGlobal("time-to-stop?")) {
    return PrimChecks.procedure.stop(2522, 2526);
  }
  var R = ProcedurePrims.callCommand("select-random-value"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.callCommand("send-messenger-to-its-column"); if (R === DeathInterrupt) { return R; }
  if (world.observer.getGlobal("colors?")) {
    var R = ProcedurePrims.callCommand("paint"); if (R === DeathInterrupt) { return R; }
  }
  else {
    var R = ProcedurePrims.ask(PrimChecks.agentset.with(2631, 2635, world.patches(), function() { return !Prims.equality(PrimChecks.patch.getVariable(2637, 2643, "pcolor"), 35); }), function() { PrimChecks.patch.setVariable(2660, 2666, "pcolor", 45); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2619, 2622, R); return R; }
  }
  world.ticker.tick();
}))
ProcedurePrims.defineCommand("select-random-value", 2782, 3280, (function() {
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 2804, 2807, 1904, world.getPatchAt(0, PrimChecks.math.plus(2833, 2834, PrimChecks.validator.checkArg('+', 2833, 2834, 1, world.observer.getGlobal("max-y-histogram")), 4))), function() {
    var R = ProcedurePrims.ask(SelfManager.self().sprout(1, "MESSENGERS"), function() {
      PrimChecks.turtleOrLink.setVariable(2882, 2887, "shape", "default");
      PrimChecks.turtleOrLink.setVariable(2908, 2913, "color", 0);
      PrimChecks.turtle.setVariable(2930, 2937, "heading", 180);
      PrimChecks.turtle.setVariable(2952, 2956, "size", 12);
      PrimChecks.turtleOrLink.setVariable(2970, 2975, "label", PrimChecks.math.plus(2978, 2979, 1, PrimChecks.math.random(2980, 2986, PrimChecks.validator.checkArg('RANDOM', 2980, 2986, 1, world.observer.getGlobal("sample-space")))));
      world.observer.setGlobal("the-messenger", SelfManager.self());
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2846, 2863, R); return R; }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2804, 2807, R); return R; }
}))
ProcedurePrims.defineCommand("send-messenger-to-its-column", 3442, 4252, (function() {
  let it = PrimChecks.agentset.oneOfWith(null, null, world.turtleManager.turtlesOfBreed("COLUMN-COUNTERS"), function() {
    return Prims.equality(PrimChecks.turtle.getVariable(3696, 3705, "my-column"), PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 3716, 3718, 1904, world.observer.getGlobal("the-messenger")), function() { return PrimChecks.turtleOrLink.getVariable(3709, 3714, "label"); }));
  }); ProcedurePrims.stack().currentContext().registerStringRunVar("IT", it);
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 3738, 3741, 1904, world.observer.getGlobal("the-messenger")), function() {
    SelfManager.self().face(PrimChecks.validator.checkArg('FACE', 3764, 3768, 768, it));
    while (Prims.gt(SelfManager.self().distance(it), 3)) {
      SelfManager.self()._optimalFdOne();
      Prims.display();
    }
    return SelfManager.self().die();
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3738, 3741, R); return R; }
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 3974, 3977, 1904, it), function() {
    var R = ProcedurePrims.callCommand("create-frame"); if (R === DeathInterrupt) { return R; }
    SelfManager.self()._optimalFdOne();
    if (Prims.equality(PrimChecks.turtle.getVariable(4197, 4201, "ycor"), world.observer.getGlobal("max-y-histogram"))) {
      world.observer.setGlobal("time-to-stop?", true);
    }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3974, 3977, R); return R; }
}))
ProcedurePrims.defineCommand("create-frame", 4320, 4456, (function() {
  var R = ProcedurePrims.ask(SelfManager.self().getPatchHere(), function() {
    var R = ProcedurePrims.ask(SelfManager.self().sprout(1, "FRAMES"), function() {
      PrimChecks.turtleOrLink.setVariable(4410, 4415, "shape", "frame");
      PrimChecks.turtleOrLink.setVariable(4434, 4439, "color", 0);
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(4378, 4391, R); return R; }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(4355, 4358, R); return R; }
}))
ProcedurePrims.defineCommand("paint", 4686, 4949, (function() {
  var R = ProcedurePrims.ask(world.turtleManager.turtlesOfBreed("COLUMN-COUNTERS"), function() {
    if (Prims.lte(PrimChecks.turtle.getVariable(4729, 4738, "my-column"), PrimChecks.math.div(4768, 4769, PrimChecks.math.mult(4753, 4754, PrimChecks.validator.checkArg('*', 4753, 4754, 1, world.observer.getGlobal("red-green")), PrimChecks.validator.checkArg('*', 4753, 4754, 1, world.observer.getGlobal("sample-space"))), 100))) {
      var R = ProcedurePrims.ask(PrimChecks.agentset.with(4803, 4807, PrimChecks.validator.checkArg('WITH', 4803, 4807, 112, PrimChecks.turtle.getVariable(4785, 4802, "my-column-patches")), function() {
        return Prims.lt(PrimChecks.patch.getVariable(4810, 4815, "pycor"), PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(4819, 4824, "pycor"); }));
      }), function() { PrimChecks.patch.setVariable(4844, 4850, "pcolor", 15); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(4781, 4784, R); return R; }
    }
    else {
      var R = ProcedurePrims.ask(PrimChecks.agentset.with(4887, 4891, PrimChecks.validator.checkArg('WITH', 4887, 4891, 112, PrimChecks.turtle.getVariable(4869, 4886, "my-column-patches")), function() {
        return Prims.lt(PrimChecks.patch.getVariable(4894, 4899, "pycor"), PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(4903, 4908, "pycor"); }));
      }), function() { PrimChecks.patch.setVariable(4928, 4934, "pcolor", 55); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(4865, 4868, R); return R; }
    }
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(4694, 4697, R); return R; }
}))
ProcedurePrims.defineReporter("%-red", 5114, 5198, (function() {
  return PrimChecks.procedure.report(5122, 5128, PrimChecks.math.precision(PrimChecks.math.div(5180, 5181, PrimChecks.math.mult(5144, 5145, 100, PrimChecks.agentset.countWith(null, null, world.patches(), function() { return Prims.equality(PrimChecks.patch.getVariable(5166, 5172, "pcolor"), 15); })), PrimChecks.agentset.count(world.turtleManager.turtlesOfBreed("FRAMES"))), 2));
}))
ProcedurePrims.defineReporter("%-full", 5213, 5296, (function() {
  return PrimChecks.procedure.report(5222, 5228, PrimChecks.math.precision(PrimChecks.math.div(5263, 5264, PrimChecks.math.mult(5245, 5246, 100, PrimChecks.agentset.count(world.turtleManager.turtlesOfBreed("FRAMES"))), PrimChecks.math.mult(5274, 5275, PrimChecks.validator.checkArg('*', 5274, 5275, 1, world.observer.getGlobal("height")), PrimChecks.validator.checkArg('*', 5274, 5275, 1, world.observer.getGlobal("sample-space")))), 2));
}))
ProcedurePrims.defineReporter("biggest-gap", 5383, 5630, (function() {
  let maxHcolumn = PrimChecks.list.max(5412, 5415, PrimChecks.validator.checkArg('MAX', 5412, 5415, 8, PrimChecks.agentset.of(world.turtleManager.turtlesOfBreed("COLUMN-COUNTERS"), function() {
    return PrimChecks.agentset.countWith(null, null, PrimChecks.turtle.getVariable(5423, 5440, "my-column-patches"), function() {
      return Prims.lt(PrimChecks.patch.getVariable(5447, 5452, "pycor"), PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(5456, 5461, "pycor"); }));
    });
  }))); ProcedurePrims.stack().currentContext().registerStringRunVar("MAX-COLUMN", maxHcolumn);
  let minHcolumn = PrimChecks.list.min(5513, 5516, PrimChecks.validator.checkArg('MIN', 5513, 5516, 8, PrimChecks.agentset.of(world.turtleManager.turtlesOfBreed("COLUMN-COUNTERS"), function() {
    return PrimChecks.agentset.countWith(null, null, PrimChecks.turtle.getVariable(5524, 5541, "my-column-patches"), function() {
      return Prims.lt(PrimChecks.patch.getVariable(5548, 5553, "pycor"), PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(5557, 5562, "pycor"); }));
    });
  }))); ProcedurePrims.stack().currentContext().registerStringRunVar("MIN-COLUMN", minHcolumn);
  return PrimChecks.procedure.report(5599, 5605, PrimChecks.math.minus(5617, 5618, PrimChecks.validator.checkArg('-', 5617, 5618, 1, maxHcolumn), PrimChecks.validator.checkArg('-', 5617, 5618, 1, minHcolumn)));
}))
world.observer.setGlobal("red-green", 50);
world.observer.setGlobal("colors?", true);
world.observer.setGlobal("sample-space", 100);
world.observer.setGlobal("height", 30);