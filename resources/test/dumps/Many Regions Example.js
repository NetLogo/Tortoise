var AgentModel = tortoise_require('agentmodel');
var ColorModel = tortoise_require('engine/core/colormodel');
var Exception = tortoise_require('util/exception');
var Link = tortoise_require('engine/core/link');
var LinkSet = tortoise_require('engine/core/linkset');
var Meta = tortoise_require('meta');
var NLMath = tortoise_require('util/nlmath');
var NLType = tortoise_require('engine/core/typechecker');
var PatchSet = tortoise_require('engine/core/patchset');
var PenBundle = tortoise_require('engine/plot/pen');
var Plot = tortoise_require('engine/plot/plot');
var PlotOps = tortoise_require('engine/plot/plotops');
var StrictMath = tortoise_require('shim/strictmath');
var Tasks = tortoise_require('engine/prim/tasks');
var Turtle = tortoise_require('engine/core/turtle');
var TurtleSet = tortoise_require('engine/core/turtleset');
var notImplemented = tortoise_require('util/notimplemented');
var { DeathInterrupt, StopInterrupt } = tortoise_require('util/interrupts');

var linkShapes = {"default":{"name":"default","direction-indicator":{"name":"link direction","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":150,"x2":90,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":150,"x2":210,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"curviness":0,"lines":[{"x-offset":-0.2,"is-visible":false,"dash-pattern":[0,1]},{"x-offset":0,"is-visible":true,"dash-pattern":[1,0]},{"x-offset":0.2,"is-visible":false,"dash-pattern":[0,1]}]}};
var turtleShapes = {"default":{"name":"default","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,40,150,260],"ycors":[5,250,205,250],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"airplane":{"name":"airplane","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,135,120,120,15,15,120,135,105,120,150,180,210,165,180,285,285,180,180,165],"ycors":[0,15,60,105,165,195,180,240,270,285,270,285,270,240,180,195,165,105,60,15],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"arrow":{"name":"arrow","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,0,105,105,195,195,300],"ycors":[0,150,150,293,293,150,150],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"box":{"name":"box","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,285,285,150],"ycors":[285,225,75,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,15,150,285],"ycors":[135,75,15,75],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[15,15,150,150],"ycors":[75,225,285,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":285,"x2":150,"y2":135,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":15,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":285,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"bug":{"name":"bug","editableColorIndex":0,"rotate":true,"elements":[{"x":96,"y":182,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":127,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":75,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":100,"x2":80,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":100,"x2":220,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"butterfly":{"name":"butterfly","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,209,225,225,195,165,150],"ycors":[165,199,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,89,75,75,105,135,150],"ycors":[165,198,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[139,100,55,25,10,10,25,40,85,139],"ycors":[148,105,90,90,105,135,180,195,194,163],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[162,200,245,275,290,290,275,260,215,162],"ycors":[150,105,90,90,105,135,180,195,195,165],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,135,120,135,150,165,180,165],"ycors":[255,225,150,120,105,120,150,225],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":135,"y":90,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":105,"x2":195,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":105,"x2":105,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"car":{"name":"car","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[300,279,261,240,226,213,203,185,159,135,75,0,0,0,300,300],"ycors":[180,164,144,135,132,106,84,63,50,50,60,150,165,225,225,180],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":180,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":30,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[162,132,134,209,194,189,180],"ycors":[80,78,135,135,105,96,89],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":47,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":195,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle":{"name":"circle","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle 2":{"name":"circle 2","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"cow":{"name":"cow","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[200,197,179,177,166,140,93,78,72,49,48,37,25,25,45,103,179,198,252,272,293,285,255,242,224],"ycors":[193,249,249,196,187,189,191,179,211,209,181,149,120,89,72,84,75,76,64,81,103,121,121,118,167],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[73,86,62,48],"ycors":[210,251,249,208],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[25,16,9,23,25,39],"ycors":[114,195,204,213,200,123],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"cylinder":{"name":"cylinder","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"dot":{"name":"dot","editableColorIndex":0,"rotate":false,"elements":[{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"face happy":{"name":"face happy","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[255,239,213,191,179,203,218,225,218,203,181,194,217,240],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face neutral":{"name":"face neutral","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":7,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":60,"ymin":195,"xmax":240,"ymax":225,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face sad":{"name":"face sad","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[168,184,210,232,244,220,205,198,205,220,242,229,206,183],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"fish":{"name":"fish","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[44,21,15,0,15,0,13,20,45],"ycors":[131,87,86,120,150,180,214,212,166],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[135,119,95,76,46,60],"ycors":[195,235,218,210,204,165],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[75,83,71,86,166,135],"ycors":[45,77,103,114,78,60],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[30,151,226,280,292,292,287,270,195,151,30],"ycors":[136,77,81,119,146,160,170,195,210,212,166],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":215,"y":106,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"flag":{"name":"flag","editableColorIndex":0,"rotate":false,"elements":[{"xmin":60,"ymin":15,"xmax":75,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[90,270,90],"ycors":[150,90,30],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":75,"y1":135,"x2":90,"y2":135,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":75,"y1":45,"x2":90,"y2":45,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"flower":{"name":"flower","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[135,165,180,180,150,165,195,195,165],"ycors":[120,165,210,240,300,300,240,195,135],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"x":85,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":147,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":192,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":85,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":70,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":25,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":96,"y":51,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":113,"y":68,"diam":74,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[189,219,249,279,234],"ycors":[233,188,173,188,218],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[180,150,105,75,135],"ycors":[255,210,210,240,240],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false}]},"house":{"name":"house","editableColorIndex":0,"rotate":false,"elements":[{"xmin":45,"ymin":120,"xmax":255,"ymax":285,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":210,"xmax":180,"ymax":285,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[15,150,285],"ycors":[120,15,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":30,"y1":120,"x2":270,"y2":120,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"leaf":{"name":"leaf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,135,120,60,30,60,60,15,30,15,40,45,60,90,105,120,105,120,135,150,165,180,195,180,195,210,240,255,263,285,270,285,240,240,270,240,180,165],"ycors":[210,195,210,210,195,180,165,135,120,105,104,90,90,105,120,120,60,60,30,15,30,60,60,120,120,105,90,90,104,105,120,135,165,180,195,210,210,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,135,120,105,105,135,165,165],"ycors":[195,240,255,255,285,285,240,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"line":{"name":"line","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":300,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"line half":{"name":"line half","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"pentagon":{"name":"pentagon","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,60,240,285],"ycors":[15,120,285,285,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"person":{"name":"person","editableColorIndex":0,"rotate":false,"elements":[{"x":110,"y":5,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,120,90,105,135,150,165,195,210,180,195],"ycors":[90,195,285,300,300,225,300,300,285,195,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":127,"ymin":79,"xmax":172,"ymax":94,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[195,240,225,165],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,60,75,135],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"plant":{"name":"plant","editableColorIndex":0,"rotate":false,"elements":[{"xmin":135,"ymin":90,"xmax":165,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,210,255,225,165],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[180,135,120,180,210],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[180,210,180,120,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[105,60,45,105,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[105,135,105,45,60],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,120,150,180,165],"ycors":[90,45,15,45,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"sheep":{"name":"sheep","editableColorIndex":15,"rotate":false,"elements":[{"x":203,"y":65,"diam":88,"type":"circle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"x":70,"y":65,"diam":162,"type":"circle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"x":150,"y":105,"diam":120,"type":"circle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xcors":[218,240,255,278],"ycors":[120,165,165,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":false},{"x":214,"y":72,"diam":67,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":false},{"xmin":164,"ymin":223,"xmax":179,"ymax":298,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xcors":[45,30,30,15,45],"ycors":[285,285,240,195,210],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"x":3,"y":83,"diam":150,"type":"circle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xmin":65,"ymin":221,"xmax":80,"ymax":296,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xcors":[195,210,210,240,195],"ycors":[285,285,240,210,210],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":true},{"xcors":[276,285,302,294],"ycors":[85,105,99,83],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":false},{"xcors":[219,210,193,201],"ycors":[85,105,99,83],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":false}]},"square":{"name":"square","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square 2":{"name":"square 2","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":60,"ymin":60,"xmax":240,"ymax":240,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"star":{"name":"star","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[151,185,298,207,242,151,59,94,3,116],"ycors":[1,108,108,175,282,216,282,175,108,108],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"target":{"name":"target","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":60,"y":60,"diam":180,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"tree":{"name":"tree","editableColorIndex":0,"rotate":false,"elements":[{"x":118,"y":3,"diam":94,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":195,"xmax":180,"ymax":300,"type":"rectangle","color":"rgba(157, 110, 72, 1)","filled":true,"marked":false},{"x":65,"y":21,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":116,"y":41,"diam":127,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":45,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":104,"y":74,"diam":152,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle":{"name":"triangle","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle 2":{"name":"triangle 2","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[151,225,75],"ycors":[99,223,224],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"truck":{"name":"truck","editableColorIndex":0,"rotate":false,"elements":[{"xmin":4,"ymin":45,"xmax":195,"ymax":187,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[296,296,259,244,208,207],"ycors":[193,150,134,104,104,194],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":195,"ymin":60,"xmax":195,"ymax":105,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[238,252,219,218],"ycors":[112,141,141,112],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":181,"ymin":185,"xmax":214,"ymax":194,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"turtle":{"name":"turtle","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[215,240,246,228,215,193],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[195,225,245,260,269,261,240,225,210],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[105,75,55,40,31,39,60,75,90],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[132,134,107,108,150,192,192,169,172],"ycors":[85,64,51,17,2,18,52,65,87],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[85,60,54,72,85,107],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[119,179,209,224,220,175,128,81,74,88],"ycors":[75,75,101,135,225,261,261,224,135,99],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"wheel":{"name":"wheel","editableColorIndex":0,"rotate":false,"elements":[{"x":3,"y":3,"diam":294,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":285,"x2":150,"y2":15,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":15,"y1":150,"x2":285,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":216,"y1":40,"x2":79,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":84,"x2":269,"y2":221,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":216,"x2":269,"y2":79,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":84,"y1":40,"x2":221,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"wolf":{"name":"wolf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[253,245,245],"ycors":[133,131,133],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[2,13,30,38,38,20,20,27,38,40,31,31,60,68,75,66,65,82,84,100,103,77,79,100,98,119,143,160,166,172,173,167,160,154,169,178,186,198,200,217,219,207,195,192,210,227,242,259,284,277,293,299,297,273,270],"ycors":[194,197,191,193,205,226,257,265,266,260,253,230,206,198,209,228,243,261,268,267,261,239,231,207,196,201,202,195,210,213,238,251,248,265,264,247,240,260,271,271,262,258,230,198,184,164,144,145,151,141,140,134,127,119,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[-1,14,36,40,53,82,134,159,188,227,236,238,268,269,281,269,269],"ycors":[195,180,166,153,140,131,133,126,115,108,102,98,86,92,87,103,113],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"x":{"name":"x","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[270,225,30,75],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[30,75,270,225],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]}};
var modelConfig =
  (
    (typeof global !== "undefined" && global !== null) ? global :
    (typeof window !== "undefined" && window !== null) ? window :
    {}
  ).modelConfig || {};
var modelPlotOps = (typeof modelConfig.plotOps !== "undefined" && modelConfig.plotOps !== null) ? modelConfig.plotOps : {};
modelConfig.plots = [];
var workspace = tortoise_require('engine/workspace')(modelConfig)([])([], [])('globals [   region-boundaries ; a list of regions definitions, where each region is a list of its min pxcor and max pxcor ]  patches-own [   region ; the number of the region that the patch is in, patches outside all regions have region = 0 ]  to setup   clear-all    ; First, create the desired number of regions.   ; If you want to use many regions in your own   ; model, this is the crucial part.   setup-regions number-of-regions    ; Color all the regions differently. In your own   ; model, things would probably look different   color-regions    ; Finally, distribute the turtles in the different regions   setup-turtles    reset-ticks end  to color-regions   ; The patches with region = 0 act as dividers and are   ; not part of any region. All other patches get colored   ; according to the region they\'re in.   ask patches with [ region != 0 ] [     set pcolor 2 + region * 10     set plabel-color pcolor + 1     set plabel region   ] end  to setup-turtles   ; This procedure simply creates turtles in the different regions.   ; The `foreach` pattern shown can be used whenever you   ; need to do something for each different region.   foreach (range 1 (length region-boundaries + 1)) [ region-number ->     let region-patches patches with [ region = region-number ]     create-turtles number-of-turtles-per-region [       move-to one-of region-patches       set color pcolor + 3     ]   ] end  to go   ask turtles [ move ]   tick end  to move ; turtle procedure    ; Turtles will move differently in different models, but   ; the general pattern shown here should be applied for all   ; movements of turtles that need to stay in a specific region.    ; First, save the region that the turtle is currently in:   let current-region region   ; Then, after saving the region, we can move the turtle:   right random 30   left random 30   forward 0.25   ; Finally, after moving, make sure the turtle   ; stays in the region it was in before:   keep-in-region current-region  end  to setup-regions [ num-regions ]   ; First, draw some dividers at the intervals reported by `region-divisions`:   foreach region-divisions num-regions draw-region-division   ; Store our region definitions globally for faster access:   set region-boundaries calculate-region-boundaries num-regions   ; Set the `region` variable for all patches included in regions:   let region-numbers (range 1 (num-regions + 1))   (foreach region-boundaries region-numbers [ [boundaries region-number] ->     ask patches with [ pxcor >= first boundaries and pxcor <= last boundaries ] [       set region region-number     ]   ]) end  to-report calculate-region-boundaries [ num-regions ]   ; The region definitions are built from the region divisions:   let divisions region-divisions num-regions   ; Each region definition lists the min-pxcor and max-pxcor of the region.   ; To get those, we use `map` on two \"shifted\" copies of the division list,   ; which allow us to scan through all pairs of dividers   ; and built our list of definitions from those pairs:   report (map [ [d1 d2] -> list (d1 + 1) (d2 - 1) ] (but-last divisions) (but-first divisions)) end  to-report region-divisions [ num-regions ]   ; This procedure reports a list of pxcor that should be outside every region.   ; Patches with these pxcor will act as \"dividers\" between regions.   report n-values (num-regions + 1) [ n ->     [ pxcor ] of patch (min-pxcor + (n * ((max-pxcor - min-pxcor) / num-regions))) 0   ] end  to draw-region-division [ x ]   ; This procedure makes the division patches grey   ; and draw a vertical line in the middle. This is   ; arbitrary and could be modified to your liking.   ask patches with [ pxcor = x ] [     set pcolor grey + 1.5   ]   create-turtles 1 [     ; use a temporary turtle to draw a line in the middle of our division     setxy x max-pycor + 0.5     set heading 0     set color grey - 3     pen-down     forward world-height     set xcor xcor + 1 / patch-size     right 180     set color grey + 3     forward world-height     die ; our turtle has done its job and is no longer needed   ] end  to keep-in-region [ which-region ] ; turtle procedure    ; This is the procedure that make sure that turtles don\'t leave the region they\'re   ; supposed to be in. It is your responsibility to call this whenever a turtle moves.   if region != which-region [     ; Get our region boundaries from the global region list:     let region-min-pxcor first item (which-region - 1) region-boundaries     let region-max-pxcor last item (which-region - 1) region-boundaries     ; The total width is (min - max) + 1 because `pxcor`s are in the middle of patches:     let region-width (region-max-pxcor - region-min-pxcor) + 1     ifelse xcor < region-min-pxcor [ ; if we crossed to the left,       set xcor xcor + region-width   ; jump to the right boundary     ] [       if xcor > region-max-pxcor [   ; if we crossed to the right,         set xcor xcor - region-width ; jump to the left boundary       ]     ]   ]  end   ; Public Domain: ; To the extent possible under law, Uri Wilensky has waived all ; copyright and related or neighboring rights to this model.')([{"x":245,"y":10,"width":849,"height":433,"dimensions":{"minPxcor":-32,"maxPxcor":32,"minPycor":-16,"maxPycor":16,"patchSize":13,"wrappingAllowedInX":true,"wrappingAllowedInY":true},"fontSize":10,"updateMode":"TickBased","showTickCounter":true,"tickCounterLabel":"ticks","frameRate":30,"type":"view","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 1; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 32; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"number-of-regions","x":10,"y":10,"width":225,"height":33,"oldSize":true,"display":"number-of-regions","min":"1","max":"32","default":4,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"setup\"); if (R === StopInterrupt) { return R; }","type":"button","source":"setup","x":10,"y":90,"width":73,"height":33,"oldSize":true,"forever":false,"buttonKind":"Observer","disableUntilTicksStart":false,"compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 1; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 100; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"number-of-turtles-per-region","x":10,"y":46,"width":225,"height":33,"oldSize":true,"display":"number-of-turtles-per-region","min":"1","max":"100","default":10,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","type":"button","source":"go","x":105,"y":90,"width":63,"height":33,"oldSize":true,"forever":false,"buttonKind":"Observer","disableUntilTicksStart":true,"compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","type":"button","source":"go","x":170,"y":90,"width":63,"height":33,"oldSize":true,"forever":true,"buttonKind":"Observer","disableUntilTicksStart":true,"compilation":{"success":true,"messages":[]}}])(tortoise_require("extensions/all").porters())(["number-of-regions", "number-of-turtles-per-region", "region-boundaries"], ["number-of-regions", "number-of-turtles-per-region"], ["region"], -32, 32, -16, 16, 13, true, true, turtleShapes, linkShapes, function(){});
var Extensions = tortoise_require('extensions/all').initialize(workspace);
var BreedManager = workspace.breedManager;
var ImportExportPrims = workspace.importExportPrims;
var InspectionPrims = workspace.inspectionPrims;
var LayoutManager = workspace.layoutManager;
var LinkPrims = workspace.linkPrims;
var ListPrims = workspace.listPrims;
var MousePrims = workspace.mousePrims;
var OutputPrims = workspace.outputPrims;
var PrimChecks = workspace.primChecks;
var Prims = workspace.prims;
var PrintPrims = workspace.printPrims;
var ProcedurePrims = workspace.procedurePrims;
var RandomPrims = workspace.randomPrims;
var SelfManager = workspace.selfManager;
var SelfPrims = workspace.selfPrims;
var StringPrims = workspace.stringPrims;
var Updater = workspace.updater;
var UserDialogPrims = workspace.userDialogPrims;
var plotManager = workspace.plotManager;
var world = workspace.world;
ProcedurePrims.defineCommand("setup", 247, 643, (function() {
  world.clearAll();
  var R = ProcedurePrims.callCommand("setup-regions", world.observer.getGlobal("number-of-regions")); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.callCommand("color-regions"); if (R === DeathInterrupt) { return R; }
  var R = ProcedurePrims.callCommand("setup-turtles"); if (R === DeathInterrupt) { return R; }
  world.ticker.reset();
}))
ProcedurePrims.defineCommand("color-regions", 651, 945, (function() {
  var R = ProcedurePrims.ask(PrimChecks.agentset.with(833, 837, world.patches(), function() { return !Prims.equality(PrimChecks.patch.getVariable(840, 846, "region"), 0); }), function() {
    PrimChecks.patch.setVariable(864, 870, "pcolor", PrimChecks.math.plus(873, 874, 2, PrimChecks.math.mult(882, 883, PrimChecks.validator.checkArg('*', 882, 883, 1, PrimChecks.patch.getVariable(875, 881, "region")), 10)));
    PrimChecks.patch.setVariable(895, 907, "plabel-color", PrimChecks.math.plus(915, 916, PrimChecks.validator.checkArg('+', 915, 916, 1, PrimChecks.patch.getVariable(908, 914, "pcolor")), 1));
    PrimChecks.patch.setVariable(927, 933, "plabel", PrimChecks.patch.getVariable(934, 940, "region"));
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(821, 824, R); return R; }
}))
ProcedurePrims.defineCommand("setup-turtles", 953, 1400, (function() {
  var R = PrimChecks.task.forEach(1146, 1153, ListPrims.rangeBinary(1, PrimChecks.math.plus(1189, 1190, PrimChecks.list.length(PrimChecks.validator.checkArg('LENGTH', 1164, 1170, 12, world.observer.getGlobal("region-boundaries"))), 1)), PrimChecks.task.checked(1195, 1196, function(regionHnumber) {
    PrimChecks.procedure.runArgCountCheck('run', 1195, 1399, 1, arguments.length);
    let regionHpatches = PrimChecks.agentset.with(1245, 1249, world.patches(), function() { return Prims.equality(PrimChecks.patch.getVariable(1252, 1258, "region"), regionHnumber); }); ProcedurePrims.stack().currentContext().registerStringRunVar("REGION-PATCHES", regionHpatches);
    var R = ProcedurePrims.ask(world.turtleManager.createTurtles(world.observer.getGlobal("number-of-turtles-per-region"), ""), function() {
      SelfManager.self().moveTo(PrimChecks.list.oneOf(1341, 1347, PrimChecks.validator.checkArg('ONE-OF', 1341, 1347, 120, regionHpatches)));
      PrimChecks.turtleOrLink.setVariable(1373, 1378, "color", PrimChecks.math.plus(1386, 1387, PrimChecks.validator.checkArg('+', 1386, 1387, 1, PrimChecks.patch.getVariable(1379, 1385, "pcolor")), 3));
    }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1281, 1295, R); return R; }
  }, "[ region-number -> let region-patches patches with [ region = region-number ] create-turtles number-of-turtles-per-region [ move-to one-of region-patches set color pcolor + 3 ] ]", false, false)); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1146, 1153, R); return R; }
}))
ProcedurePrims.defineCommand("go", 1408, 1441, (function() {
  var R = ProcedurePrims.ask(world.turtles(), function() { var R = ProcedurePrims.callCommand("move"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1413, 1416, R); return R; }
  world.ticker.tick();
}))
ProcedurePrims.defineCommand("move", 1449, 1980, (function() {
  let currentHregion = PrimChecks.patch.getVariable(1741, 1747, "region"); ProcedurePrims.stack().currentContext().registerStringRunVar("CURRENT-REGION", currentHregion);
  SelfManager.self().right(RandomPrims.randomLong(30));
  SelfManager.self().right(-(RandomPrims.randomLong(30)));
  SelfManager.self()._optimalFdLessThan1(0.25);
  var R = ProcedurePrims.callCommand("keep-in-region", currentHregion); if (R === DeathInterrupt) { return R; }
}))
ProcedurePrims.defineCommand("setup-regions", 1988, 2598, (function(numHregions) {
  var R = PrimChecks.task.forEach(2099, 2106, PrimChecks.validator.checkArg('FOREACH', 2099, 2106, 8, PrimChecks.procedure.callReporter(2107, 2123, "region-divisions", numHregions)), PrimChecks.task.checked(2136, 2156, function(_0) {
    PrimChecks.procedure.runArgCountCheck('run', 2136, 2156, 1, arguments.length);
    var R = ProcedurePrims.callCommand("draw-region-division", _0); if (R === DeathInterrupt) { return R; }
  }, "draw-region-division", false, false)); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2099, 2106, R); return R; }
  world.observer.setGlobal("region-boundaries", PrimChecks.procedure.callReporter(2242, 2269, "calculate-region-boundaries", numHregions));
  let regionHnumbers = ListPrims.rangeBinary(1, PrimChecks.math.plus(2392, 2393, PrimChecks.validator.checkArg('+', 2392, 2393, 1, numHregions), 1)); ProcedurePrims.stack().currentContext().registerStringRunVar("REGION-NUMBERS", regionHnumbers);
  var R = PrimChecks.task.forEach(2401, 2408, PrimChecks.validator.checkArg('FOREACH', 2401, 2408, 8, world.observer.getGlobal("region-boundaries")), PrimChecks.validator.checkArg('FOREACH', 2401, 2408, 8, regionHnumbers), PrimChecks.task.checked(2442, 2443, function(boundaries, regionHnumber) {
    PrimChecks.procedure.runArgCountCheck('run', 2442, 2596, 2, arguments.length);
    var R = ProcedurePrims.ask(PrimChecks.agentset.with(2490, 2494, world.patches(), function() {
      return (Prims.gte(PrimChecks.patch.getVariable(2497, 2502, "pxcor"), PrimChecks.list.first(2506, 2511, PrimChecks.validator.checkArg('FIRST', 2506, 2511, 12, boundaries))) && Prims.lte(PrimChecks.patch.getVariable(2527, 2532, "pxcor"), PrimChecks.list.last(2536, 2540, PrimChecks.validator.checkArg('LAST', 2536, 2540, 12, boundaries))));
    }), function() { PrimChecks.patch.setVariable(2566, 2572, "region", regionHnumber); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2478, 2481, R); return R; }
  }, "[ [boundaries region-number] -> ask patches with [ pxcor >= first boundaries and pxcor <= last boundaries ] [ set region region-number ] ]", false, false)); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2401, 2408, R); return R; }
}))
ProcedurePrims.defineReporter("calculate-region-boundaries", 2613, 3128, (function(numHregions) {
  let divisions = PrimChecks.procedure.callReporter(2737, 2753, "region-divisions", numHregions); ProcedurePrims.stack().currentContext().registerStringRunVar("DIVISIONS", divisions);
  return PrimChecks.procedure.report(3034, 3040, PrimChecks.task.map(3042, 3045, PrimChecks.task.checked(3046, 3047, function(d1, d2) {
    PrimChecks.procedure.runArgCountCheck('runresult', 3059, 3081, 2, arguments.length);
    return ListPrims.list(PrimChecks.math.plus(3068, 3069, PrimChecks.validator.checkArg('+', 3068, 3069, 1, d1), 1), PrimChecks.math.minus(3077, 3078, PrimChecks.validator.checkArg('-', 3077, 3078, 1, d2), 1));
  }, "[ [d1 d2] -> list d1 + 1 d2 - 1 ]", true, false), PrimChecks.validator.checkArg('MAP', 3042, 3045, 8, PrimChecks.list.butLast('but-last', 3085, 3093, PrimChecks.validator.checkArg('BUT-LAST', 3085, 3093, 12, divisions))), PrimChecks.validator.checkArg('MAP', 3042, 3045, 8, PrimChecks.list.butFirst('but-first', 3106, 3115, PrimChecks.validator.checkArg('BUT-FIRST', 3106, 3115, 12, divisions)))));
}))
ProcedurePrims.defineReporter("region-divisions", 3143, 3457, (function(numHregions) {
  return PrimChecks.procedure.report(3327, 3333, PrimChecks.task.nValues(3334, 3342, PrimChecks.math.plus(3356, 3357, PrimChecks.validator.checkArg('+', 3356, 3357, 1, numHregions), 1), PrimChecks.task.checked(3361, 3362, function(n) {
    PrimChecks.procedure.runArgCountCheck('runresult', 3372, 3452, 1, arguments.length);
    return PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 3382, 3384, 1904, world.getPatchAt(PrimChecks.math.plus(3402, 3403, world.topology.minPxcor, PrimChecks.math.mult(3407, 3408, PrimChecks.validator.checkArg('*', 3407, 3408, 1, n), PrimChecks.math.div(3434, 3435, PrimChecks.math.minus(3421, 3422, world.topology.maxPxcor, world.topology.minPxcor), PrimChecks.validator.checkArg('/', 3434, 3435, 1, numHregions)))), 0)), function() { return PrimChecks.patch.getVariable(3374, 3379, "pxcor"); });
  }, "[ n -> [ pxcor ] of patch min-pxcor + n * max-pxcor - min-pxcor / num-regions 0 ]", true, false)));
}))
ProcedurePrims.defineCommand("draw-region-division", 3465, 4077, (function(x) {
  var R = ProcedurePrims.ask(world._optimalPatchCol(x), function() { PrimChecks.patch.setVariable(3690, 3696, "pcolor", PrimChecks.math.plus(3702, 3703, 5, 1.5)); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3649, 3652, R); return R; }
  var R = ProcedurePrims.ask(world.turtleManager.createTurtles(1, ""), function() {
    PrimChecks.turtle.setXY(3811, 3816, PrimChecks.validator.checkArg('SETXY', 3811, 3816, 1, x), PrimChecks.math.plus(3829, 3830, world.topology.maxPycor, 0.5));
    PrimChecks.turtle.setVariable(3843, 3850, "heading", 0);
    PrimChecks.turtleOrLink.setVariable(3861, 3866, "color", PrimChecks.math.minus(3872, 3873, 5, 3));
    SelfManager.self().penManager.lowerPen();
    SelfManager.self().fd(world.topology.height);
    PrimChecks.turtle.setVariable(3922, 3926, "xcor", PrimChecks.math.plus(3932, 3933, PrimChecks.validator.checkArg('+', 3932, 3933, 1, PrimChecks.turtle.getVariable(3927, 3931, "xcor")), PrimChecks.math.div(3936, 3937, 1, world.patchSize)));
    SelfManager.self().right(180);
    PrimChecks.turtleOrLink.setVariable(3971, 3976, "color", PrimChecks.math.plus(3982, 3983, 5, 3));
    SelfManager.self().fd(world.topology.height);
    return SelfManager.self().die();
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(3714, 3728, R); return R; }
}))
ProcedurePrims.defineCommand("keep-in-region", 4085, 4987, (function(whichHregion) {
  if (!Prims.equality(PrimChecks.patch.getVariable(4314, 4320, "region"), whichHregion)) {
    let regionHminHpxcor = PrimChecks.list.first(4425, 4430, PrimChecks.validator.checkArg('FIRST', 4425, 4430, 12, PrimChecks.list.item(4431, 4435, PrimChecks.math.minus(4450, 4451, PrimChecks.validator.checkArg('-', 4450, 4451, 1, whichHregion), 1), PrimChecks.validator.checkArg('ITEM', 4431, 4435, 12, world.observer.getGlobal("region-boundaries"))))); ProcedurePrims.stack().currentContext().registerStringRunVar("REGION-MIN-PXCOR", regionHminHpxcor);
    let regionHmaxHpxcor = PrimChecks.list.last(4498, 4502, PrimChecks.validator.checkArg('LAST', 4498, 4502, 12, PrimChecks.list.item(4503, 4507, PrimChecks.math.minus(4522, 4523, PrimChecks.validator.checkArg('-', 4522, 4523, 1, whichHregion), 1), PrimChecks.validator.checkArg('ITEM', 4503, 4507, 12, world.observer.getGlobal("region-boundaries"))))); ProcedurePrims.stack().currentContext().registerStringRunVar("REGION-MAX-PXCOR", regionHmaxHpxcor);
    let regionHwidth = PrimChecks.math.plus(4692, 4693, PrimChecks.math.minus(4672, 4673, PrimChecks.validator.checkArg('-', 4672, 4673, 1, regionHmaxHpxcor), PrimChecks.validator.checkArg('-', 4672, 4673, 1, regionHminHpxcor)), 1); ProcedurePrims.stack().currentContext().registerStringRunVar("REGION-WIDTH", regionHwidth);
    if (Prims.lt(PrimChecks.turtle.getVariable(4707, 4711, "xcor"), regionHminHpxcor)) {
      PrimChecks.turtle.setVariable(4772, 4776, "xcor", PrimChecks.math.plus(4782, 4783, PrimChecks.validator.checkArg('+', 4782, 4783, 1, PrimChecks.turtle.getVariable(4777, 4781, "xcor")), PrimChecks.validator.checkArg('+', 4782, 4783, 1, regionHwidth)));
    }
    else {
      if (Prims.gt(PrimChecks.turtle.getVariable(4845, 4849, "xcor"), regionHmaxHpxcor)) {
        PrimChecks.turtle.setVariable(4915, 4919, "xcor", PrimChecks.math.minus(4925, 4926, PrimChecks.validator.checkArg('-', 4925, 4926, 1, PrimChecks.turtle.getVariable(4920, 4924, "xcor")), PrimChecks.validator.checkArg('-', 4925, 4926, 1, regionHwidth)));
      }
    }
  }
}))
world.observer.setGlobal("number-of-regions", 4);
world.observer.setGlobal("number-of-turtles-per-region", 10);