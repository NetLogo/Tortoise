var AgentModel = tortoise_require('agentmodel');
var ColorModel = tortoise_require('engine/core/colormodel');
var Exception = tortoise_require('util/exception');
var Link = tortoise_require('engine/core/link');
var LinkSet = tortoise_require('engine/core/linkset');
var Meta = tortoise_require('meta');
var NLMath = tortoise_require('util/nlmath');
var NLType = tortoise_require('engine/core/typechecker');
var PatchSet = tortoise_require('engine/core/patchset');
var PenBundle = tortoise_require('engine/plot/pen');
var Plot = tortoise_require('engine/plot/plot');
var PlotOps = tortoise_require('engine/plot/plotops');
var StrictMath = tortoise_require('shim/strictmath');
var Tasks = tortoise_require('engine/prim/tasks');
var Turtle = tortoise_require('engine/core/turtle');
var TurtleSet = tortoise_require('engine/core/turtleset');
var notImplemented = tortoise_require('util/notimplemented');
var { DeathInterrupt, StopInterrupt } = tortoise_require('util/interrupts');

var linkShapes = {"default":{"name":"default","direction-indicator":{"name":"link direction","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":150,"x2":90,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":150,"x2":210,"y2":180,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"curviness":0,"lines":[{"x-offset":-0.2,"is-visible":false,"dash-pattern":[0,1]},{"x-offset":0,"is-visible":true,"dash-pattern":[1,0]},{"x-offset":0.2,"is-visible":false,"dash-pattern":[0,1]}]}};
var resources = {  };
var turtleShapes = {"default":{"name":"default","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,40,150,260],"ycors":[5,250,205,250],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"airplane":{"name":"airplane","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,135,120,120,15,15,120,135,105,120,150,180,210,165,180,285,285,180,180,165],"ycors":[0,15,60,105,165,195,180,240,270,285,270,285,270,240,180,195,165,105,60,15],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"arrow":{"name":"arrow","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,0,105,105,195,195,300],"ycors":[0,150,150,293,293,150,150],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"box":{"name":"box","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,285,285,150],"ycors":[285,225,75,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,15,150,285],"ycors":[135,75,15,75],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[15,15,150,150],"ycors":[75,225,285,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":285,"x2":150,"y2":135,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":15,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":135,"x2":285,"y2":75,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"bug":{"name":"bug","editableColorIndex":0,"rotate":true,"elements":[{"x":96,"y":182,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":127,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":110,"y":75,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":150,"y1":100,"x2":80,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":150,"y1":100,"x2":220,"y2":30,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"butterfly":{"name":"butterfly","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[150,209,225,225,195,165,150],"ycors":[165,199,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,89,75,75,105,135,150],"ycors":[165,198,225,255,270,255,240],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[139,100,55,25,10,10,25,40,85,139],"ycors":[148,105,90,90,105,135,180,195,194,163],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[162,200,245,275,290,290,275,260,215,162],"ycors":[150,105,90,90,105,135,180,195,195,165],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[150,135,120,135,150,165,180,165],"ycors":[255,225,150,120,105,120,150,225],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":135,"y":90,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":105,"x2":195,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false},{"x1":150,"y1":105,"x2":105,"y2":60,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"car":{"name":"car","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[300,279,261,240,226,213,203,185,159,135,75,0,0,0,300,300],"ycors":[180,164,144,135,132,106,84,63,50,50,60,150,165,225,225,180],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":180,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":30,"y":180,"diam":90,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[162,132,134,209,194,189,180],"ycors":[80,78,135,135,105,96,89],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":47,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":195,"y":195,"diam":58,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle":{"name":"circle","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"circle 2":{"name":"circle 2","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"cow":{"name":"cow","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[200,197,179,177,166,140,93,78,72,49,48,37,25,25,45,103,179,198,252,272,293,285,255,242,224],"ycors":[193,249,249,196,187,189,191,179,211,209,181,149,120,89,72,84,75,76,64,81,103,121,121,118,167],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[73,86,62,48],"ycors":[210,251,249,208],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[25,16,9,23,25,39],"ycors":[114,195,204,213,200,123],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"cylinder":{"name":"cylinder","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"dot":{"name":"dot","editableColorIndex":0,"rotate":false,"elements":[{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"face happy":{"name":"face happy","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[255,239,213,191,179,203,218,225,218,203,181,194,217,240],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face neutral":{"name":"face neutral","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":7,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":60,"ymin":195,"xmax":240,"ymax":225,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"face sad":{"name":"face sad","editableColorIndex":0,"rotate":false,"elements":[{"x":8,"y":8,"diam":285,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":60,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":180,"y":75,"diam":60,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[150,90,62,47,67,90,109,150,192,210,227,251,236,212],"ycors":[168,184,210,232,244,220,205,198,205,220,242,229,206,183],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"fish":{"name":"fish","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[44,21,15,0,15,0,13,20,45],"ycors":[131,87,86,120,150,180,214,212,166],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[135,119,95,76,46,60],"ycors":[195,235,218,210,204,165],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[75,83,71,86,166,135],"ycors":[45,77,103,114,78,60],"type":"polygon","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[30,151,226,280,292,292,287,270,195,151,30],"ycors":[136,77,81,119,146,160,170,195,210,212,166],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":215,"y":106,"diam":30,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"flag":{"name":"flag","editableColorIndex":0,"rotate":false,"elements":[{"xmin":60,"ymin":15,"xmax":75,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[90,270,90],"ycors":[150,90,30],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":75,"y1":135,"x2":90,"y2":135,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":75,"y1":45,"x2":90,"y2":45,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"flower":{"name":"flower","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[135,165,180,180,150,165,195,195,165],"ycors":[120,165,210,240,300,300,240,195,135],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"x":85,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":147,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":192,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":85,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":40,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":177,"y":132,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":70,"y":85,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":130,"y":25,"diam":38,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":96,"y":51,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":113,"y":68,"diam":74,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[189,219,249,279,234],"ycors":[233,188,173,188,218],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[180,150,105,75,135],"ycors":[255,210,210,240,240],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false}]},"house":{"name":"house","editableColorIndex":0,"rotate":false,"elements":[{"xmin":45,"ymin":120,"xmax":255,"ymax":285,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":210,"xmax":180,"ymax":285,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xcors":[15,150,285],"ycors":[120,15,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":30,"y1":120,"x2":270,"y2":120,"type":"line","color":"rgba(0, 0, 0, 1)","filled":false,"marked":false}]},"leaf":{"name":"leaf","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,135,120,60,30,60,60,15,30,15,40,45,60,90,105,120,105,120,135,150,165,180,195,180,195,210,240,255,263,285,270,285,240,240,270,240,180,165],"ycors":[210,195,210,210,195,180,165,135,120,105,104,90,90,105,120,120,60,60,30,15,30,60,60,120,120,105,90,90,104,105,120,135,165,180,195,210,210,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,135,120,105,105,135,165,165],"ycors":[195,240,255,255,285,285,240,195],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"line":{"name":"line","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":300,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"line half":{"name":"line half","editableColorIndex":0,"rotate":true,"elements":[{"x1":150,"y1":0,"x2":150,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"pentagon":{"name":"pentagon","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,60,240,285],"ycors":[15,120,285,285,120],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"person":{"name":"person","editableColorIndex":0,"rotate":false,"elements":[{"x":110,"y":5,"diam":80,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,120,90,105,135,150,165,195,210,180,195],"ycors":[90,195,285,300,300,225,300,300,285,195,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":127,"ymin":79,"xmax":172,"ymax":94,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[195,240,225,165],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[105,60,75,135],"ycors":[90,150,180,105],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"plant":{"name":"plant","editableColorIndex":0,"rotate":false,"elements":[{"xmin":135,"ymin":90,"xmax":165,"ymax":300,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,210,255,225,165],"ycors":[255,210,195,255,285],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[180,135,120,180,210],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[180,210,180,120,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,90,45,75,135],"ycors":[105,60,45,105,135],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[165,165,225,255,210],"ycors":[105,135,105,45,60],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[135,120,150,180,165],"ycors":[90,45,15,45,90],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square":{"name":"square","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"square 2":{"name":"square 2","editableColorIndex":0,"rotate":false,"elements":[{"xmin":30,"ymin":30,"xmax":270,"ymax":270,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":60,"ymin":60,"xmax":240,"ymax":240,"type":"rectangle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"star":{"name":"star","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[151,185,298,207,242,151,59,94,3,116],"ycors":[1,108,108,175,282,216,282,175,108,108],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"target":{"name":"target","editableColorIndex":0,"rotate":false,"elements":[{"x":0,"y":0,"diam":300,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":60,"y":60,"diam":180,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":90,"y":90,"diam":120,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"tree":{"name":"tree","editableColorIndex":0,"rotate":false,"elements":[{"x":118,"y":3,"diam":94,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":120,"ymin":195,"xmax":180,"ymax":300,"type":"rectangle","color":"rgba(157, 110, 72, 1)","filled":true,"marked":false},{"x":65,"y":21,"diam":108,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":116,"y":41,"diam":127,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":45,"y":90,"diam":120,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":104,"y":74,"diam":152,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle":{"name":"triangle","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"triangle 2":{"name":"triangle 2","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[150,15,285],"ycors":[30,255,255],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[151,225,75],"ycors":[99,223,224],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false}]},"truck":{"name":"truck","editableColorIndex":0,"rotate":false,"elements":[{"xmin":4,"ymin":45,"xmax":195,"ymax":187,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[296,296,259,244,208,207],"ycors":[193,150,134,104,104,194],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xmin":195,"ymin":60,"xmax":195,"ymax":105,"type":"rectangle","color":"rgba(255, 255, 255, 1)","filled":true,"marked":false},{"xcors":[238,252,219,218],"ycors":[112,141,141,112],"type":"polygon","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"xmin":181,"ymin":185,"xmax":214,"ymax":194,"type":"rectangle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x":24,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":144,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":234,"y":174,"diam":42,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"turtle":{"name":"turtle","editableColorIndex":0,"rotate":true,"elements":[{"xcors":[215,240,246,228,215,193],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[195,225,245,260,269,261,240,225,210],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[105,75,55,40,31,39,60,75,90],"ycors":[90,75,75,89,108,124,105,105,105],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[132,134,107,108,150,192,192,169,172],"ycors":[85,64,51,17,2,18,52,65,87],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[85,60,54,72,85,107],"ycors":[204,233,254,266,252,210],"type":"polygon","color":"rgba(89, 176, 60, 1)","filled":true,"marked":false},{"xcors":[119,179,209,224,220,175,128,81,74,88],"ycors":[75,75,101,135,225,261,261,224,135,99],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]},"wheel":{"name":"wheel","editableColorIndex":0,"rotate":false,"elements":[{"x":3,"y":3,"diam":294,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x":30,"y":30,"diam":240,"type":"circle","color":"rgba(0, 0, 0, 1)","filled":true,"marked":false},{"x1":150,"y1":285,"x2":150,"y2":15,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":15,"y1":150,"x2":285,"y2":150,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x":120,"y":120,"diam":60,"type":"circle","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"x1":216,"y1":40,"x2":79,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":84,"x2":269,"y2":221,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":40,"y1":216,"x2":269,"y2":79,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true},{"x1":84,"y1":40,"x2":221,"y2":269,"type":"line","color":"rgba(141, 141, 141, 1)","filled":false,"marked":true}]},"x":{"name":"x","editableColorIndex":0,"rotate":false,"elements":[{"xcors":[270,225,30,75],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true},{"xcors":[30,75,270,225],"ycors":[75,30,225,270],"type":"polygon","color":"rgba(141, 141, 141, 1)","filled":true,"marked":true}]}};
var modelConfig =
  (
    (typeof global !== "undefined" && global !== null) ? global :
    (typeof window !== "undefined" && window !== null) ? window :
    {}
  ).modelConfig || {};
var modelPlotOps = (typeof modelConfig.plotOps !== "undefined" && modelConfig.plotOps !== null) ? modelConfig.plotOps : {};
modelConfig.plots = [(function() {
  var name    = 'global energy';
  var plotOps = (typeof modelPlotOps[name] !== "undefined" && modelPlotOps[name] !== null) ? modelPlotOps[name] : new PlotOps(function() {}, function() {}, function() {}, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; }, function() { return function() {}; });
  var pens    = [new PenBundle.Pen('default', plotOps.makePenOps, false, new PenBundle.State(15, 1, PenBundle.DisplayMode.Line), function() {}, function() {
    return ProcedurePrims.runInPlotContext('global energy', 'default', function() { plotManager.plotValue(world.observer.getGlobal("global-energy"));; });
  })];
  var setup   = function() {};
  var update  = function() {};
  return new Plot(name, pens, plotOps, "time", "energy", false, true, true, 0, 10, 0, 10, setup, update);
})()];
var workspace = tortoise_require('engine/workspace')(modelConfig)([])([], [])('globals [ temperature global-energy ] patches-own [ brightness ]  to setup   clear-all   ask n-of ((count patches) / 2) patches   [     set brightness 1   ]   ask patches [ update-visual ]   set global-energy (sum [find-energy] of patches )   set temperature 1   reset-ticks end   to go   repeat 1000   [     ask one-of patches [       try-swap     ]   ]   ; we lower the temperature after 1000 attempted swaps   set temperature temperature * (1 - cooling-rate / 100)   set global-energy (sum [find-energy] of patches )   tick end  to update-visual   set pcolor brightness * 9.9  ; 0 = black, 9.9 = white end  ;; The swap (change in state) will always be accepted if the new energy level is lower. ;; There is a switch in the interface (accept-equal-changes) which determines whether ;;   to always accept swaps that lead to equal energy levels. ;; Lastly, even if the swap increases energy, it may be accepted (with probability ;;   proportional to the current \"temperature\" of the system.) to-report accept-change? [ old-energy new-energy ]   report (new-energy < old-energy)          or (accept-equal-changes? and new-energy = old-energy)          or ((random-float 1) < temperature) end  to try-swap   let p2 one-of (patches in-radius swap-radius)   if (brightness = [brightness] of p2) ; if same color, no point in swapping.     [ stop ]   ;; For efficiency, we only compute the change in energy in the region of patches   ;;    affected by the swap.   let affected-patches (patch-set self p2 neighbors4 ([neighbors4] of p2))   let old-energy sum [find-energy] of affected-patches   swap-values self p2   let new-energy sum [find-energy] of affected-patches   ifelse (accept-change? old-energy new-energy)   [     update-visual     ask p2 [ update-visual ]   ]   [     swap-values self p2   ] end  to swap-values [ p1 p2 ]   let temp [ brightness ] of p1   ask p1 [ set brightness [brightness] of p2 ]   ask p2 [ set brightness temp ] end  ;; this is the \"energy\" function for a single patch, which simulated annealing is ;; trying to minimize globally to-report find-energy  ; patch-procedure   let unhappiness 0   ask patch-at 0 1 [ set unhappiness unhappiness + (brightness - [brightness] of myself) ^ 2 ]   ask patch-at 0 -1 [ set unhappiness unhappiness + (brightness - [brightness] of myself) ^ 2 ]   ask patch-at 1 0 [ set unhappiness unhappiness + 1 - (brightness - [brightness] of myself) ^ 2 ]   ask patch-at -1 0 [ set unhappiness unhappiness + 1 - (brightness - [brightness] of myself) ^ 2 ]   ; maximum of 4, minimum of 0   report unhappiness end   ; Copyright 2009 Uri Wilensky. ; See Info tab for full copyright and license.')([{"x":205,"y":10,"width":424,"height":424,"dimensions":{"minPxcor":0,"maxPxcor":29,"minPycor":0,"maxPycor":29,"patchSize":14,"wrappingAllowedInX":true,"wrappingAllowedInY":true},"fontSize":10,"updateMode":"TickBased","showTickCounter":true,"tickCounterLabel":"ticks","frameRate":30,"type":"view","compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"setup\"); if (R === StopInterrupt) { return R; }","type":"button","source":"setup","x":10,"y":37,"width":90,"height":33,"oldSize":true,"forever":false,"buttonKind":"Observer","disableUntilTicksStart":false,"compilation":{"success":true,"messages":[]}}, {"compiledSource":"var R = ProcedurePrims.callCommand(\"go\"); if (R === StopInterrupt) { return R; }","type":"button","source":"go","x":105,"y":37,"width":90,"height":33,"oldSize":true,"forever":true,"buttonKind":"Observer","disableUntilTicksStart":true,"compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 0; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 50; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 0.1; })","type":"slider","variable":"cooling-rate","x":10,"y":127,"width":180,"height":33,"oldSize":true,"display":"cooling-rate","min":"0","max":"50","default":1,"step":"0.1","units":"%","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"compiledMin":"ProcedurePrims.rng.withAux(function() { return 1; })","compiledMax":"ProcedurePrims.rng.withAux(function() { return 5; })","compiledStep":"ProcedurePrims.rng.withAux(function() { return 1; })","type":"slider","variable":"swap-radius","x":10,"y":162,"width":180,"height":33,"oldSize":true,"display":"swap-radius","min":"1","max":"5","default":1,"step":"1","direction":"horizontal","compilation":{"success":true,"messages":[]}}, {"variable":"accept-equal-changes?","x":10,"y":197,"width":180,"height":33,"oldSize":true,"display":"accept-equal-changes?","on":false,"type":"switch","compilation":{"success":true,"messages":[]}}, {"compiledSource":"ProcedurePrims.rng.withAux(function() { return world.observer.getGlobal(\"temperature\"); })","type":"monitor","source":"temperature","x":50,"y":77,"width":100,"height":45,"oldSize":true,"precision":10,"fontSize":11,"compilation":{"success":true,"messages":[]}}, {"compiledSource":"ProcedurePrims.rng.withAux(function() { return world.observer.getGlobal(\"global-energy\"); })","type":"monitor","source":"global-energy","x":50,"y":237,"width":105,"height":45,"oldSize":true,"precision":4,"fontSize":11,"compilation":{"success":true,"messages":[]}}, {"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {}","compiledPens":[{"compiledSetupCode":"function() {}","compiledUpdateCode":"function() {   return ProcedurePrims.runInPlotContext('global energy', 'default', function() { plotManager.plotValue(world.observer.getGlobal(\"global-energy\"));; }); }","type":"pen","display":"default","interval":1,"mode":0,"color":-2674135,"inLegend":true,"setupCode":"","updateCode":"plot global-energy","compilation":{"success":true,"messages":[]}}],"type":"plot","display":"global energy","x":10,"y":287,"width":180,"height":150,"oldSize":true,"xAxis":"time","yAxis":"energy","xmin":0,"xmax":10,"ymin":0,"ymax":10,"autoPlotX":true,"autoPlotY":true,"legendOn":false,"setupCode":"","updateCode":"","pens":[{"display":"default","interval":1,"mode":0,"color":-2674135,"inLegend":true,"setupCode":"","updateCode":"plot global-energy","type":"pen"}],"compilation":{"success":true,"messages":[]}}])(resources)(tortoise_require("extensions/all").porters())(["cooling-rate", "swap-radius", "accept-equal-changes?", "temperature", "global-energy"], ["cooling-rate", "swap-radius", "accept-equal-changes?"], ["brightness"], 0, 29, 0, 29, 14, true, true, turtleShapes, linkShapes, function(){});
var Extensions = tortoise_require('extensions/all').initialize(workspace);
var BreedManager = workspace.breedManager;
var ImportExportPrims = workspace.importExportPrims;
var InspectionPrims = workspace.inspectionPrims;
var LayoutManager = workspace.layoutManager;
var LinkPrims = workspace.linkPrims;
var ListPrims = workspace.listPrims;
var MousePrims = workspace.mousePrims;
var OutputPrims = workspace.outputPrims;
var PrimChecks = workspace.primChecks;
var Prims = workspace.prims;
var PrintPrims = workspace.printPrims;
var ProcedurePrims = workspace.procedurePrims;
var RandomPrims = workspace.randomPrims;
var SelfManager = workspace.selfManager;
var SelfPrims = workspace.selfPrims;
var StringPrims = workspace.stringPrims;
var Updater = workspace.updater;
var UserDialogPrims = workspace.userDialogPrims;
var plotManager = workspace.plotManager;
var world = workspace.world;
ProcedurePrims.defineCommand("setup", 69, 275, (function() {
  world.clearAll();
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 89, 92, 1904, PrimChecks.list.nOf(93, 97, PrimChecks.math.div(115, 116, PrimChecks.agentset.count(world.patches()), 2), world.patches())), function() { PrimChecks.patch.setVariable(140, 150, "brightness", 1); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(89, 92, R); return R; }
  var R = ProcedurePrims.ask(world.patches(), function() { var R = ProcedurePrims.callCommand("update-visual"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(159, 162, R); return R; }
  world.observer.setGlobal("global-energy", PrimChecks.list.sum(210, 213, PrimChecks.validator.checkArg('SUM', 210, 213, 8, PrimChecks.agentset.of(world.patches(), function() { return PrimChecks.procedure.callReporter(215, 226, "find-energy"); }))));
  world.observer.setGlobal("temperature", 1);
  world.ticker.reset();
}))
ProcedurePrims.defineCommand("go", 284, 527, (function() {
  for (let _index_289_295 = 0, _repeatcount_289_295 = StrictMath.floor(1000); _index_289_295 < _repeatcount_289_295; _index_289_295++) {
    var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 309, 312, 1904, PrimChecks.list.oneOf(313, 319, world.patches())), function() { var R = ProcedurePrims.callCommand("try-swap"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(309, 312, R); return R; }
  }
  world.observer.setGlobal("temperature", PrimChecks.math.mult(441, 442, PrimChecks.validator.checkArg('*', 441, 442, 1, world.observer.getGlobal("temperature")), PrimChecks.math.minus(446, 447, 1, PrimChecks.math.div(461, 462, PrimChecks.validator.checkArg('/', 461, 462, 1, world.observer.getGlobal("cooling-rate")), 100))));
  world.observer.setGlobal("global-energy", PrimChecks.list.sum(489, 492, PrimChecks.validator.checkArg('SUM', 489, 492, 8, PrimChecks.agentset.of(world.patches(), function() { return PrimChecks.procedure.callReporter(494, 505, "find-energy"); }))));
  world.ticker.tick();
}))
ProcedurePrims.defineCommand("update-visual", 535, 605, (function() {
  PrimChecks.patch.setVariable(555, 561, "pcolor", PrimChecks.math.mult(573, 574, PrimChecks.validator.checkArg('*', 573, 574, 1, PrimChecks.patch.getVariable(562, 572, "brightness")), 9.9));
}))
ProcedurePrims.defineReporter("accept-change?", 1002, 1189, (function(oldHenergy, newHenergy) {
  return PrimChecks.procedure.report(1045, 1051, ((Prims.lt(newHenergy, oldHenergy) || (PrimChecks.validator.checkArg('AND', 1113, 1116, 2, world.observer.getGlobal("accept-equal-changes?")) && Prims.equality(newHenergy, oldHenergy))) || Prims.lt(PrimChecks.math.randomFloat(1), world.observer.getGlobal("temperature"))));
}))
ProcedurePrims.defineCommand("try-swap", 1197, 1800, (function() {
  let p2 = PrimChecks.list.oneOf(1215, 1221, SelfManager.self().inRadius(world.patches(), world.observer.getGlobal("swap-radius"))); ProcedurePrims.stack().currentContext().registerStringRunVar("P2", p2);
  if (Prims.equality(PrimChecks.patch.getVariable(1260, 1270, "brightness"), PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 1286, 1288, 1904, p2), function() { return PrimChecks.patch.getVariable(1274, 1284, "brightness"); }))) {
    return PrimChecks.procedure.stop(1338, 1342);
  }
  let affectedHpatches = PrimChecks.agentset.patchSet(1482, 1491, SelfManager.self(), p2, SelfManager.self().getNeighbors4(), PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 1525, 1527, 1904, p2), function() { return SelfManager.self().getNeighbors4(); })); ProcedurePrims.stack().currentContext().registerStringRunVar("AFFECTED-PATCHES", affectedHpatches);
  let oldHenergy = PrimChecks.list.sum(1550, 1553, PrimChecks.validator.checkArg('SUM', 1550, 1553, 8, PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 1568, 1570, 1904, affectedHpatches), function() { return PrimChecks.procedure.callReporter(1555, 1566, "find-energy"); }))); ProcedurePrims.stack().currentContext().registerStringRunVar("OLD-ENERGY", oldHenergy);
  var R = ProcedurePrims.callCommand("swap-values", SelfManager.self(), p2); if (R === DeathInterrupt) { return R; }
  let newHenergy = PrimChecks.list.sum(1627, 1630, PrimChecks.validator.checkArg('SUM', 1627, 1630, 8, PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 1645, 1647, 1904, affectedHpatches), function() { return PrimChecks.procedure.callReporter(1632, 1643, "find-energy"); }))); ProcedurePrims.stack().currentContext().registerStringRunVar("NEW-ENERGY", newHenergy);
  if (PrimChecks.procedure.callReporter(1675, 1689, "accept-change?", oldHenergy, newHenergy)) {
    var R = ProcedurePrims.callCommand("update-visual"); if (R === DeathInterrupt) { return R; }
    var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 1739, 1742, 1904, p2), function() { var R = ProcedurePrims.callCommand("update-visual"); if (R === DeathInterrupt) { return R; } }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1739, 1742, R); return R; }
  }
  else {
    var R = ProcedurePrims.callCommand("swap-values", SelfManager.self(), p2); if (R === DeathInterrupt) { return R; }
  }
}))
ProcedurePrims.defineCommand("swap-values", 1808, 1942, (function(p1, p2) {
  let temp = PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 1856, 1858, 1904, p1), function() { return PrimChecks.patch.getVariable(1843, 1853, "brightness"); }); ProcedurePrims.stack().currentContext().registerStringRunVar("TEMP", temp);
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 1864, 1867, 1904, p1), function() {
    PrimChecks.patch.setVariable(1877, 1887, "brightness", PrimChecks.agentset.of(PrimChecks.validator.checkArg('OF', 1901, 1903, 1904, p2), function() { return PrimChecks.patch.getVariable(1889, 1899, "brightness"); }));
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1864, 1867, R); return R; }
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 1911, 1914, 1904, p2), function() { PrimChecks.patch.setVariable(1924, 1934, "brightness", temp); }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(1911, 1914, R); return R; }
}))
ProcedurePrims.defineReporter("find-energy", 2070, 2565, (function() {
  let unhappiness = 0; ProcedurePrims.stack().currentContext().registerStringRunVar("UNHAPPINESS", unhappiness);
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 2125, 2128, 1904, SelfManager.self()._optimalPatchNorth()), function() {
    unhappiness = PrimChecks.math.plus(2172, 2173, PrimChecks.validator.checkArg('+', 2172, 2173, 1, unhappiness), PrimChecks.math.pow(2212, 2213, PrimChecks.math.minus(2186, 2187, PrimChecks.validator.checkArg('-', 2186, 2187, 1, PrimChecks.patch.getVariable(2175, 2185, "brightness")), PrimChecks.validator.checkArg('-', 2186, 2187, 1, PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(2189, 2199, "brightness"); }))), 2)); ProcedurePrims.stack().currentContext().updateStringRunVar("UNHAPPINESS", unhappiness);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2125, 2128, R); return R; }
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 2220, 2223, 1904, SelfManager.self()._optimalPatchSouth()), function() {
    unhappiness = PrimChecks.math.plus(2268, 2269, PrimChecks.validator.checkArg('+', 2268, 2269, 1, unhappiness), PrimChecks.math.pow(2308, 2309, PrimChecks.math.minus(2282, 2283, PrimChecks.validator.checkArg('-', 2282, 2283, 1, PrimChecks.patch.getVariable(2271, 2281, "brightness")), PrimChecks.validator.checkArg('-', 2282, 2283, 1, PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(2285, 2295, "brightness"); }))), 2)); ProcedurePrims.stack().currentContext().updateStringRunVar("UNHAPPINESS", unhappiness);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2220, 2223, R); return R; }
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 2316, 2319, 1904, SelfManager.self()._optimalPatchEast()), function() {
    unhappiness = PrimChecks.math.minus(2367, 2368, PrimChecks.math.plus(2363, 2364, PrimChecks.validator.checkArg('+', 2363, 2364, 1, unhappiness), 1), PrimChecks.math.pow(2407, 2408, PrimChecks.math.minus(2381, 2382, PrimChecks.validator.checkArg('-', 2381, 2382, 1, PrimChecks.patch.getVariable(2370, 2380, "brightness")), PrimChecks.validator.checkArg('-', 2381, 2382, 1, PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(2384, 2394, "brightness"); }))), 2)); ProcedurePrims.stack().currentContext().updateStringRunVar("UNHAPPINESS", unhappiness);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2316, 2319, R); return R; }
  var R = ProcedurePrims.ask(PrimChecks.validator.checkArg('ASK', 2415, 2418, 1904, SelfManager.self()._optimalPatchWest()), function() {
    unhappiness = PrimChecks.math.minus(2467, 2468, PrimChecks.math.plus(2463, 2464, PrimChecks.validator.checkArg('+', 2463, 2464, 1, unhappiness), 1), PrimChecks.math.pow(2507, 2508, PrimChecks.math.minus(2481, 2482, PrimChecks.validator.checkArg('-', 2481, 2482, 1, PrimChecks.patch.getVariable(2470, 2480, "brightness")), PrimChecks.validator.checkArg('-', 2481, 2482, 1, PrimChecks.agentset.of(SelfManager.myself(), function() { return PrimChecks.patch.getVariable(2484, 2494, "brightness"); }))), 2)); ProcedurePrims.stack().currentContext().updateStringRunVar("UNHAPPINESS", unhappiness);
  }, true); if (R !== undefined) { PrimChecks.procedure.preReturnCheck(2415, 2418, R); return R; }
  return PrimChecks.procedure.report(2546, 2552, unhappiness);
}))
world.observer.setGlobal("cooling-rate", 1);
world.observer.setGlobal("swap-radius", 1);
world.observer.setGlobal("accept-equal-changes?", false);